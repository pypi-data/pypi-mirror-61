macos_min_version:
  - 10.9
macos_machine:
  - x86_64-apple-darwin13.4.0
MACOSX_DEPLOYMENT_TARGET:
  - 10.9
CONDA_BUILD_SYSROOT:            # [osx]
  - /opt/MacOSX10.9.sdk         # [osx]
# This helps CMAKE find the sysroot. See
# https://cmake.org/cmake/help/v3.11/variable/CMAKE_OSX_SYSROOT.html
SDKROOT:                        # [osx]
  - /opt/MacOSX10.9.sdk         # [osx]
# makes autotools verbose
VERBOSE_AT:
  - V=1
# makes cmake verbose
VERBOSE_CM:
  - VERBOSE=1

# the blas implementations that we build against
blas_impl:
  - mkl

pin_run_as_build:
  libboost:
    max_pin: x.x.x
  py_boost:
    max_pin: x.x.x
  boost:
    max_pin: x.x.x

## the dependencies that we build against multiple versions
python:
  - 3.6
  - 3.7

zip_keys:
  -                             # [win]
    - vc                        # [win]
    - c_compiler                # [win]
    - cxx_compiler              # [win]
    - fortran_compiler_version  # [win]
    - python                    # [win]


# Here is the version of dependencies are used when building packages (build
# and host requirements). We keep a list of **all of them** here to make sure
# everything goes as expected in our conda build process. For the version of
# packages that are used for testing packages, see the recipe of bob-devel.
# The version here do not necessarily match the versions in bob-devel.

# This version of bob-devel will be used at test time of packages:
bob_devel:
  - 2020.01.09

# This version of beat-devel will be used at test time of packages. Notice it
# uses bob-devel and should have a version that is greater or equal its value
beat_devel:
  - 2020.01.09

# The build time only dependencies (build requirements).
# Updating these to the latest version all the time is OK and a good idea.
# These versions should match the versions inside bob-devel as well (if they
# overlap) so update them in both places.
cmake:
  - 3.14.0
pkg_config:
  - 0.29.2

# The dependencies that we link against (host requirements).
# Ideally we want to build against the oldest possible version of packages when
# we are linking against them. It is best to keep this in sync with:
# https://github.com/AnacondaRecipes/aggregate/blob/master/conda_build_config.yaml
numpy:
  - 1.15.4
boost:
  - 1.67.0
ffmpeg:
  - 4.0
freetype:
  - 2.9.1
giflib:
  - 5.1.4
hdf5:
  - 1.10.2
jpeg:
  - 9b
libblitz:
  - 1.0.1
libmatio:
  - 1.5.17
libpng:
  - 1.6.35
libsvm:
  - 3.24
libtiff:
  - 4.0.9
mkl:
  - 2019.1
sox:
  - 14.4.2
vlfeat:
  - 0.9.21

# The dependencies that are needed for runtime only (run requirements).
# These versions **should** match the versions inside bob-devel recipe.
caffe:
  - 1.0
click:
  - 7.0
click_plugins:
  - 1.1.1
cyvlfeat:
  - 0.5.1
dlib:
  - 19.7
docopt:
  - 0.6.2
h5py:
  - 2.8.0
jinja2:
  - 2.10.1
kaldi:
  - 1!5.5.164
matplotlib:
  - 3.1.0
menpo:
  - 0.9.2
menpofit:
  - 0.6.1
mne:
  - 0.18.1
opencv:
  - 3.4.2
pandas:
  - 0.25.1
pillow:
  - 6.1.0
pyedflib:
  - 0.1.14
pytorch:
  - 1.0.1
pyyaml:
  - 5.1.1
requests:
  - 2.22.0
schema:
  - 0.7.1
scikit_image:
  - 0.15.0
scikit_learn:
  - 0.21.2
scipy:
  - 1.2.1
setuptools:
  - 41.0.1
six:
  - 1.12.0
sqlalchemy:
  - 1.3.1
tabulate:
  - 0.8.3
tensorflow:
  - 1.14.0
torchvision:
  - 0.2.1
tqdm:
  - 4.32.1
zc_recipe_egg:
  - 2.0.7

# The dependencies that are needed for runtime only (run requirements) of BEAT
# packages. These versions **should** match the versions inside beat-devel
# recipe.
docker_py:
  - 4.0.2
jsonschema:
  - 3.0.2
python_graphviz:
  - 0.8.4
pyzmq:
  - 17.1.2
simplejson:
  - 3.17.0
sphinxcontrib_programoutput:
  - 0.15
sphinxcontrib_httpdomain:
  - 1.7.0
psycopg2:
  - 2.7.6.1
ncurses:
  - 6.1
