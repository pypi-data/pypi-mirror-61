
# ivy_dafny_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'topleftIFleftELSEleftIFFleftIMPLIESleftORleftANDleftBANGleftEQEQBANGEQLELTGEGTleftPLUSMINUSleftTIMESAND ARROW ASSERT ASSIGN ASSUME BANG BANGEQ COLON COMMA DECREASES DOT ELSE ENSURES EQ EQEQ GE GT IF IFF IMPLIES INVARIANT LCB LE LPAREN LT METHOD MINUS MODIFIES OR PLUS RCB REQUIRES RETURN RETURNS RPAREN SEMI SYMBOL TILDA TILDAEQ TIMES VAR WHILEtop : top : top fieldfield : VAR vardecl SEMIvardecl : SYMBOL COLON typesymbol : SYMBOLtype : SYMBOLargs : LPAREN RPARENargs : LPAREN vardecls RPARENvardecls : vardeclvardecls : vardecls COMMA vardeclopt_semi : opt_semi : SEMIrequires : requires : REQUIRES expr opt_semimodifies : modifies : MODIFIES modsets opt_semiensures : ensures : ENSURES expr opt_semireturns : returns : RETURNS argsdecreases : decreases : DECREASES expr opt_semifield : METHOD symbol args returns requires modifies ensures decreases LCB stmts RCBmodsets : modsets : modsetmodsets : modsets COMMA modsetmodset : symbolmodset : LCB RCBmodset : LCB symbols RCBsymbols : symbolsymbols : symbols COMMA symbolexpr : LPAREN expr RPARENexpr : symbolexpr : symbol LPAREN RPARENexpr : symbol LPAREN exprs RPARENexpr : expr AND exprexpr : expr OR exprexpr : expr IMPLIES exprexpr : expr IFF exprexpr : BANG exprexpr : expr EQEQ exprexpr : expr BANGEQ exprexpr : expr PLUS exprexpr : expr MINUS exprexpr : MINUS exprexpr : expr TIMES exprexpr : expr LE exprexpr : expr LT exprexpr : expr GE exprexpr : expr GT exprlvalue : symbolstmt : lvalues ASSIGN exprs SEMIlvalues : lvaluelvalues : lvalues COMMA lvalueexprs : exprexprs : exprs COMMA exprstmt : ASSUME expr SEMIstmt : ASSERT expr SEMIstmts : stmtstmts : stmts stmtinvariant : INVARIANT exprinvariants : invariants : invariants invariantstmt : WHILE expr modifies invariants LCB stmts RCBstmt : IF expr LCB stmts RCBstmt : IF expr LCB stmts RCB ELSE LCB stmts RCBstmt : VAR vardecl SEMIstmt : VAR symbols ASSIGN exprs SEMIstmt : RETURN SEMIstmt : RETURN exprs SEMI'
    
_lr_action_items = {'ENSURES':([8,11,16,17,20,22,24,26,28,30,31,33,40,42,51,52,53,54,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,87,],[-5,-19,-13,-7,-20,-15,-8,-33,-11,-24,57,-45,-12,-14,-40,-25,-27,-11,-34,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,-16,-28,-35,-26,-29,]),'RETURN':([88,96,100,105,110,118,119,123,125,126,128,130,132,134,135,137,139,140,141,142,],[93,93,-59,-69,-60,-70,-58,-67,93,-57,-52,93,93,-68,-65,93,-64,93,93,-66,]),'EQEQ':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,41,-45,41,41,-34,41,-32,41,-42,-47,41,-41,-48,-44,41,-50,-43,-49,-46,41,41,-35,41,41,41,41,41,41,41,]),'SYMBOL':([3,4,9,12,21,23,25,27,29,30,34,36,37,38,39,41,43,44,45,46,47,48,49,50,55,57,76,81,84,86,88,93,94,95,96,100,101,102,103,105,110,111,112,118,119,123,124,125,126,128,130,131,132,134,135,137,139,140,141,142,],[5,8,14,5,8,5,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-59,113,8,8,-69,-60,8,8,-70,-58,-67,8,8,-57,-52,8,8,8,-68,-65,8,-64,8,8,-66,]),'DECREASES':([8,11,16,17,20,22,24,26,28,30,31,33,40,42,51,52,53,54,56,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,82,83,85,87,90,],[-5,-19,-13,-7,-20,-15,-8,-33,-11,-24,-17,-45,-12,-14,-40,-25,-27,-11,81,-34,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,-16,-28,-11,-35,-26,-29,-18,]),'ASSERT':([88,96,100,105,110,118,119,123,125,126,128,130,132,134,135,137,139,140,141,142,],[94,94,-59,-69,-60,-70,-58,-67,94,-57,-52,94,94,-68,-65,94,-64,94,94,-66,]),'IFF':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,45,-45,45,-40,-34,45,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,45,-35,45,45,45,45,45,45,45,]),'INVARIANT':([8,26,30,33,40,51,52,53,54,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,87,108,120,127,133,136,],[-5,-33,-24,-45,-12,-40,-25,-27,-11,-34,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,-16,-28,-35,-26,-29,-15,-62,131,-63,-61,]),'WHILE':([88,96,100,105,110,118,119,123,125,126,128,130,132,134,135,137,139,140,141,142,],[95,95,-59,-69,-60,-70,-58,-67,95,-57,-52,95,95,-68,-65,95,-64,95,95,-66,]),'MINUS':([8,21,25,26,27,28,29,33,34,35,36,37,38,39,41,43,44,45,46,47,48,49,50,51,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,81,82,83,84,89,91,93,94,95,102,103,107,108,112,116,117,124,131,136,],[-5,25,25,-33,25,44,25,-45,25,44,25,25,25,25,25,25,25,25,25,25,25,25,25,44,25,-34,44,-32,44,44,44,44,44,44,-44,44,44,-43,44,-46,44,25,44,-35,25,44,44,25,25,25,25,25,44,44,25,44,44,25,25,44,]),'RCB':([8,55,77,78,92,96,100,105,110,118,119,123,126,128,130,134,135,137,139,141,142,],[-5,79,-30,87,-31,109,-59,-69,-60,-70,-58,-67,-57,-52,135,-68,-65,139,-64,142,-66,]),'LE':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,38,-45,38,38,-34,38,-32,38,-42,-47,38,-41,-48,-44,38,-50,-43,-49,-46,38,38,-35,38,38,38,38,38,38,38,]),'RPAREN':([8,12,13,14,18,19,26,32,33,34,35,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,83,91,],[-5,17,-4,-6,-9,24,-33,-10,-45,58,61,-40,-34,-55,83,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,-35,-56,]),'SEMI':([6,8,13,14,26,28,30,33,51,52,53,54,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,82,83,85,87,89,91,93,106,107,114,117,122,129,],[10,-5,-4,-6,-33,40,-24,-45,-40,-25,-27,40,-34,-55,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,-28,40,-35,-26,-29,40,-56,105,118,119,123,126,128,134,]),'ASSUME':([88,96,100,105,110,118,119,123,125,126,128,130,132,134,135,137,139,140,141,142,],[103,103,-59,-69,-60,-70,-58,-67,103,-57,-52,103,103,-68,-65,103,-64,103,103,-66,]),'LT':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,43,-45,43,43,-34,43,-32,43,-42,-47,43,-41,-48,-44,43,-50,-43,-49,-46,43,43,-35,43,43,43,43,43,43,43,]),'PLUS':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,47,-45,47,47,-34,47,-32,47,47,47,47,47,47,-44,47,47,-43,47,-46,47,47,-35,47,47,47,47,47,47,47,]),'COLON':([5,113,],[9,9,]),'MODIFIES':([8,11,16,17,20,22,24,26,28,33,40,42,51,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,83,108,],[-5,-19,-13,-7,-20,30,-8,-33,-11,-45,-12,-14,-40,-34,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,-35,30,]),'REQUIRES':([11,16,17,20,24,],[-19,21,-7,-20,-8,]),'ASSIGN':([8,77,92,97,98,99,113,115,121,],[-5,-30,-31,-53,112,-51,-5,124,-54,]),'$end':([0,1,2,10,109,],[-1,0,-2,-3,-23,]),'BANGEQ':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,37,-45,37,37,-34,37,-32,37,-42,-47,37,-41,-48,-44,37,-50,-43,-49,-46,37,37,-35,37,37,37,37,37,37,37,]),'GT':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,46,-45,46,46,-34,46,-32,46,-42,-47,46,-41,-48,-44,46,-50,-43,-49,-46,46,46,-35,46,46,46,46,46,46,46,]),'IMPLIES':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,39,-45,39,-40,-34,39,-32,-36,-42,-47,-38,-41,-48,-44,39,-50,-43,-49,-46,-37,39,-35,39,39,39,39,39,39,39,]),'TIMES':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,49,49,49,49,-34,49,-32,49,49,49,49,49,49,49,49,49,49,49,-46,49,49,-35,49,49,49,49,49,49,49,]),'GE':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,48,-45,48,48,-34,48,-32,48,-42,-47,48,-41,-48,-44,48,-50,-43,-49,-46,48,48,-35,48,48,48,48,48,48,48,]),'LPAREN':([7,8,15,21,25,26,27,29,34,36,37,38,39,41,43,44,45,46,47,48,49,50,57,81,84,93,94,95,102,103,112,124,131,],[12,-5,12,27,27,34,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'VAR':([0,1,2,10,88,96,100,105,109,110,118,119,123,125,126,128,130,132,134,135,137,139,140,141,142,],[-1,3,-2,-3,101,101,-59,-69,-23,-60,-70,-58,-67,101,-57,-52,101,101,-68,-65,101,-64,101,101,-66,]),'ELSE':([135,],[138,]),'IF':([88,96,100,105,110,118,119,123,125,126,128,130,132,134,135,137,139,140,141,142,],[102,102,-59,-69,-60,-70,-58,-67,102,-57,-52,102,102,-68,-65,102,-64,102,102,-66,]),'AND':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,36,-45,36,-40,-34,36,-32,-36,-42,-47,36,-41,-48,-44,36,-50,-43,-49,-46,36,36,-35,36,36,36,36,36,36,36,]),'RETURNS':([11,17,24,],[15,-7,-8,]),'METHOD':([0,1,2,10,109,],[-1,4,-2,-3,-23,]),'BANG':([21,25,27,29,34,36,37,38,39,41,43,44,45,46,47,48,49,50,57,81,84,93,94,95,102,103,112,124,131,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LCB':([8,11,16,17,20,22,24,26,28,30,31,33,40,42,51,52,53,54,56,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,82,83,85,87,89,90,104,108,116,120,127,133,136,138,],[-5,-19,-13,-7,-20,-15,-8,-33,-11,55,-17,-45,-12,-14,-40,-25,-27,-11,-21,-34,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,-16,55,-28,88,-11,-35,-26,-29,-11,-18,-22,-15,125,-62,132,-63,-61,140,]),'COMMA':([8,13,14,18,19,26,30,32,33,51,52,53,54,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,83,85,87,91,92,97,98,99,106,113,115,121,122,129,],[-5,-4,-6,-9,23,-33,-24,-10,-45,-40,-25,-27,76,-34,-55,84,-32,-36,-42,-47,-38,-41,-48,-44,-39,-50,-43,-49,-46,-37,-30,86,-28,-35,-26,-29,-56,-31,-53,111,-51,84,-5,86,-54,84,84,]),'OR':([8,26,28,33,35,51,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,89,91,107,108,116,117,136,],[-5,-33,50,-45,50,-40,-34,50,-32,-36,-42,-47,50,-41,-48,-44,50,-50,-43,-49,-46,-37,50,-35,50,50,50,50,50,50,50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'opt_semi':([28,54,82,89,],[42,75,90,104,]),'symbols':([55,101,],[78,115,]),'ensures':([31,],[56,]),'stmts':([88,125,132,140,],[96,130,137,141,]),'lvalue':([88,96,111,125,130,132,137,140,141,],[97,97,121,97,97,97,97,97,97,]),'top':([0,],[1,]),'vardecl':([3,12,23,101,],[6,18,32,114,]),'decreases':([56,],[80,]),'field':([1,],[2,]),'returns':([11,],[16,]),'modsets':([30,],[54,]),'lvalues':([88,96,125,130,132,137,140,141,],[98,98,98,98,98,98,98,98,]),'vardecls':([12,],[19,]),'type':([9,],[13,]),'modset':([30,76,],[52,85,]),'symbol':([4,21,25,27,29,30,34,36,37,38,39,41,43,44,45,46,47,48,49,50,55,57,76,81,84,86,88,93,94,95,96,101,102,103,111,112,124,125,130,131,132,137,140,141,],[7,26,26,26,26,53,26,26,26,26,26,26,26,26,26,26,26,26,26,26,77,26,53,26,26,92,99,26,26,26,99,77,26,26,99,26,26,99,99,26,99,99,99,99,]),'args':([7,15,],[11,20,]),'stmt':([88,96,125,130,132,137,140,141,],[100,110,100,110,100,110,100,110,]),'invariant':([127,],[133,]),'expr':([21,25,27,29,34,36,37,38,39,41,43,44,45,46,47,48,49,50,57,81,84,93,94,95,102,103,112,124,131,],[28,33,35,51,59,62,63,64,65,66,67,68,69,70,71,72,73,74,82,89,91,59,107,108,116,117,59,59,136,]),'exprs':([34,93,112,124,],[60,106,122,129,]),'invariants':([120,],[127,]),'modifies':([22,108,],[31,120,]),'requires':([16,],[22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> <empty>','top',0,'p_top','ivy_dafny_grammar.py',22),
  ('top -> top field','top',2,'p_top_top_field','ivy_dafny_grammar.py',26),
  ('field -> VAR vardecl SEMI','field',3,'p_field_var_vardecl','ivy_dafny_grammar.py',31),
  ('vardecl -> SYMBOL COLON type','vardecl',3,'p_vardecl_symbol_colon_type_semi','ivy_dafny_grammar.py',35),
  ('symbol -> SYMBOL','symbol',1,'p_symbol_symbol','ivy_dafny_grammar.py',39),
  ('type -> SYMBOL','type',1,'p_type_symbol','ivy_dafny_grammar.py',43),
  ('args -> LPAREN RPAREN','args',2,'p_args_lparen_rparen','ivy_dafny_grammar.py',47),
  ('args -> LPAREN vardecls RPAREN','args',3,'p_args_lparen_vardecls_rparen','ivy_dafny_grammar.py',51),
  ('vardecls -> vardecl','vardecls',1,'p_vardecls_vardecl','ivy_dafny_grammar.py',55),
  ('vardecls -> vardecls COMMA vardecl','vardecls',3,'p_vardecls_vardecls_comma_vardecl','ivy_dafny_grammar.py',59),
  ('opt_semi -> <empty>','opt_semi',0,'p_opt_semi','ivy_dafny_grammar.py',64),
  ('opt_semi -> SEMI','opt_semi',1,'p_opt_semi_semi','ivy_dafny_grammar.py',67),
  ('requires -> <empty>','requires',0,'p_requires','ivy_dafny_grammar.py',70),
  ('requires -> REQUIRES expr opt_semi','requires',3,'p_requires_requires_expr','ivy_dafny_grammar.py',74),
  ('modifies -> <empty>','modifies',0,'p_modifies','ivy_dafny_grammar.py',78),
  ('modifies -> MODIFIES modsets opt_semi','modifies',3,'p_modifies_modifies_atoms','ivy_dafny_grammar.py',82),
  ('ensures -> <empty>','ensures',0,'p_ensures','ivy_dafny_grammar.py',86),
  ('ensures -> ENSURES expr opt_semi','ensures',3,'p_ensures_ensures_expr','ivy_dafny_grammar.py',90),
  ('returns -> <empty>','returns',0,'p_returns','ivy_dafny_grammar.py',94),
  ('returns -> RETURNS args','returns',2,'p_returns_returns_args','ivy_dafny_grammar.py',98),
  ('decreases -> <empty>','decreases',0,'p_decreases','ivy_dafny_grammar.py',102),
  ('decreases -> DECREASES expr opt_semi','decreases',3,'p_decreases_decreases_expr','ivy_dafny_grammar.py',106),
  ('field -> METHOD symbol args returns requires modifies ensures decreases LCB stmts RCB','field',11,'p_field_method_symbol_args_returns_requires_modifies_ensures_decreases_lcb_stmts_rcb','ivy_dafny_grammar.py',110),
  ('modsets -> <empty>','modsets',0,'p_modsets','ivy_dafny_grammar.py',115),
  ('modsets -> modset','modsets',1,'p_modsets_modset','ivy_dafny_grammar.py',119),
  ('modsets -> modsets COMMA modset','modsets',3,'p_modsets_modsets_comma_modset','ivy_dafny_grammar.py',123),
  ('modset -> symbol','modset',1,'p_modset_symbol','ivy_dafny_grammar.py',128),
  ('modset -> LCB RCB','modset',2,'p_modset_lcb_rcb','ivy_dafny_grammar.py',132),
  ('modset -> LCB symbols RCB','modset',3,'p_modset_lcb_symbols_rcb','ivy_dafny_grammar.py',136),
  ('symbols -> symbol','symbols',1,'p_symbols_symbol','ivy_dafny_grammar.py',140),
  ('symbols -> symbols COMMA symbol','symbols',3,'p_symbols_symbols_comma_symbols','ivy_dafny_grammar.py',144),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_lparen_expr_rparen','ivy_dafny_grammar.py',149),
  ('expr -> symbol','expr',1,'p_expr_symbol','ivy_dafny_grammar.py',153),
  ('expr -> symbol LPAREN RPAREN','expr',3,'p_expr_symbol_lparen_rparen','ivy_dafny_grammar.py',157),
  ('expr -> symbol LPAREN exprs RPAREN','expr',4,'p_expr_symbol_lparen_exprs_rparen','ivy_dafny_grammar.py',161),
  ('expr -> expr AND expr','expr',3,'p_expr_expr_and_expr','ivy_dafny_grammar.py',165),
  ('expr -> expr OR expr','expr',3,'p_expr_expr_or_expr','ivy_dafny_grammar.py',169),
  ('expr -> expr IMPLIES expr','expr',3,'p_expr_expr_implies_expr','ivy_dafny_grammar.py',173),
  ('expr -> expr IFF expr','expr',3,'p_expr_expr_iff_expr','ivy_dafny_grammar.py',177),
  ('expr -> BANG expr','expr',2,'p_expr_expr_not_expr','ivy_dafny_grammar.py',181),
  ('expr -> expr EQEQ expr','expr',3,'p_expr_expr_eqeq_expr','ivy_dafny_grammar.py',185),
  ('expr -> expr BANGEQ expr','expr',3,'p_expr_expr_bangeq_expr','ivy_dafny_grammar.py',189),
  ('expr -> expr PLUS expr','expr',3,'p_expr_expr_PLUS_expr','ivy_dafny_grammar.py',193),
  ('expr -> expr MINUS expr','expr',3,'p_expr_expr_MINUS_expr','ivy_dafny_grammar.py',198),
  ('expr -> MINUS expr','expr',2,'p_expr_MINUS_expr','ivy_dafny_grammar.py',203),
  ('expr -> expr TIMES expr','expr',3,'p_expr_expr_TIMES_expr','ivy_dafny_grammar.py',208),
  ('expr -> expr LE expr','expr',3,'p_expr_expr_LE_expr','ivy_dafny_grammar.py',213),
  ('expr -> expr LT expr','expr',3,'p_expr_expr_LT_expr','ivy_dafny_grammar.py',218),
  ('expr -> expr GE expr','expr',3,'p_expr_expr_GE_expr','ivy_dafny_grammar.py',223),
  ('expr -> expr GT expr','expr',3,'p_expr_expr_GT_expr','ivy_dafny_grammar.py',228),
  ('lvalue -> symbol','lvalue',1,'p_lvalue_symbol','ivy_dafny_grammar.py',233),
  ('stmt -> lvalues ASSIGN exprs SEMI','stmt',4,'p_stmt_lvalues_assign_exprs_semi','ivy_dafny_grammar.py',237),
  ('lvalues -> lvalue','lvalues',1,'p_lvalues_lvalue','ivy_dafny_grammar.py',242),
  ('lvalues -> lvalues COMMA lvalue','lvalues',3,'p_lvalues_lvalues_lvalue','ivy_dafny_grammar.py',246),
  ('exprs -> expr','exprs',1,'p_exprs_expr','ivy_dafny_grammar.py',251),
  ('exprs -> exprs COMMA expr','exprs',3,'p_exprs_exprs_expr','ivy_dafny_grammar.py',255),
  ('stmt -> ASSUME expr SEMI','stmt',3,'p_stmt_assume_expr_semi','ivy_dafny_grammar.py',260),
  ('stmt -> ASSERT expr SEMI','stmt',3,'p_stmt_assert_expr_semi','ivy_dafny_grammar.py',265),
  ('stmts -> stmt','stmts',1,'p_stmts_stmt','ivy_dafny_grammar.py',270),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_stmts_stmt','ivy_dafny_grammar.py',274),
  ('invariant -> INVARIANT expr','invariant',2,'p_invariant_invariant_expr','ivy_dafny_grammar.py',279),
  ('invariants -> <empty>','invariants',0,'p_invariants','ivy_dafny_grammar.py',283),
  ('invariants -> invariants invariant','invariants',2,'p_invariants_invariants_invariant','ivy_dafny_grammar.py',287),
  ('stmt -> WHILE expr modifies invariants LCB stmts RCB','stmt',7,'p_stmt_while_expr_modifies_invariant_lcb_stmts_rcb','ivy_dafny_grammar.py',292),
  ('stmt -> IF expr LCB stmts RCB','stmt',5,'p_stmt_if_expr_lcb_stmt_rcb','ivy_dafny_grammar.py',297),
  ('stmt -> IF expr LCB stmts RCB ELSE LCB stmts RCB','stmt',9,'p_stmt_if_expr_lcb_stmt_rcb_else_LCB_stmt_RCB','ivy_dafny_grammar.py',302),
  ('stmt -> VAR vardecl SEMI','stmt',3,'p_stmt_var_vardecl','ivy_dafny_grammar.py',307),
  ('stmt -> VAR symbols ASSIGN exprs SEMI','stmt',5,'p_stmt_var_assign_expr_semi','ivy_dafny_grammar.py',312),
  ('stmt -> RETURN SEMI','stmt',2,'p_stmt_return_semi','ivy_dafny_grammar.py',317),
  ('stmt -> RETURN exprs SEMI','stmt',3,'p_stmt_return_exprs_semi','ivy_dafny_grammar.py',322),
]
