
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <../_impl/include/frc/MedianFilter.h>




namespace rpygen {

using namespace frc;


template <typename T>
inline void bind_frc__MedianFilter(py::module &m, const char * clsName) {

        using namespace frc;


    py::class_<typename frc::MedianFilter<T>, std::shared_ptr<typename frc::MedianFilter<T>>>
      cls_MedianFilter(m, clsName);




    cls_MedianFilter
      .def(py::init<size_t>(),
      py::arg("size"), release_gil(),
      "Creates a new MedianFilter.\n"
      "\n"
      ":param size: The number of samples in the moving window.")
    
      .def("calculate", &frc::MedianFilter<T>::Calculate,
      py::arg("next"), release_gil(),
      "Calculates the moving-window median for the next value of the input stream.\n"
      "\n"
      ":param next: The next input value.\n"
      "\n"
      ":returns: The median of the moving window, updated to include the next value.")
    
      .def("reset", &frc::MedianFilter<T>::Reset, release_gil(),
      "Resets the filter, clearing the window of all elements.")
    
;

  

    
}

}; // namespace rpygen