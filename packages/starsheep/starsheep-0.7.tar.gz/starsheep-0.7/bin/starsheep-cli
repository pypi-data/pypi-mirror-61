#!/usr/bin/env python3

import dinemic
import logging
import os
import sys
import time
import urllib.request
import yaml

from starsheep.context import Context
from starsheep.models.model import Model
from starsheep.command_line import get_url, load_application, import_application, import_data, apply_data, check_version


def print_help():
    pass

if __name__ == "__main__":
    options = sys.argv[1:]
    dinemic.prepare()

    ctx = Context()
    ctx.cmdline = options

    path = '/etc/starsheep/starsheep.yaml'
    caller_id = ''
    for i in range(len(options)):
        if i >= len(options):
            break
        opt = options[i]
        if opt.startswith('--url='):
            path = opt.split('=')[1]
            del options[i]
            i = i-1
        elif opt.startswith('--caller-id='):
            caller_id = opt.split('=')[1]
            del options[i]
            i = i-1

    if len(options) < 1 or options[0] not in ['get', 'list', 'delete']:
        print_help()
        sys.exit(1)

    f = urllib.request.urlopen(get_url(path))
    document = yaml.load(f)
    f.close()

    check_version(document, ctx)
    import_application(document, ctx)
    load_application(document, ctx)

    if options[0] == 'get':
        for obj_id in options[1:]:
            model_data = {
                'fields': {},
                'lists': {},
                'dicts': {}
            }

            model = Model.get_object(obj_id, caller_id)
            for f in ctx.models[Model.model_name].fields:
                model_data['fields'][f] = getattr(model, f).get()

            for l in ctx.models[Model.model_name].lists:
                l_items = []
                for i in range(getattr(model, l).length()):
                    l_items.append(getattr(model, l).at(i))
                model_data['lists'][l] = l_items

            for d in ctx.models[Model.model_name].dicts:
                d_items = {}
                for k in getattr(model, d).keys():
                    d_items[k] = getattr(model, d).get(k)

        print(yaml.dump(model_data))
    elif options[0] == 'list':
        if len(options) <= 1:
            print(yaml.dump(dinemic.object_list('')))
        else:
            if options[1] == '@':
                print(yaml.dump(dinemic.object_list_owned('*')))
            else:
                print(yaml.dump(dinemic.object_list(options[1])))
    else:
        print_help()
        sys.exit(1)
