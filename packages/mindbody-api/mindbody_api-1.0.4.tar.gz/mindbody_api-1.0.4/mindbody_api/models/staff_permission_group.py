# coding: utf-8

"""
    MINDBODY Public API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class StaffPermissionGroup(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'permission_group_name': 'str',
        'ip_restricted': 'bool',
        'allowed_permissions': 'list[str]',
        'denied_permissions': 'list[str]'
    }

    attribute_map = {
        'permission_group_name': 'PermissionGroupName',
        'ip_restricted': 'IpRestricted',
        'allowed_permissions': 'AllowedPermissions',
        'denied_permissions': 'DeniedPermissions'
    }

    def __init__(self, permission_group_name=None, ip_restricted=None, allowed_permissions=None, denied_permissions=None):  # noqa: E501
        """StaffPermissionGroup - a model defined in Swagger"""  # noqa: E501

        self._permission_group_name = None
        self._ip_restricted = None
        self._allowed_permissions = None
        self._denied_permissions = None
        self.discriminator = None

        if permission_group_name is not None:
            self.permission_group_name = permission_group_name
        if ip_restricted is not None:
            self.ip_restricted = ip_restricted
        if allowed_permissions is not None:
            self.allowed_permissions = allowed_permissions
        if denied_permissions is not None:
            self.denied_permissions = denied_permissions

    @property
    def permission_group_name(self):
        """Gets the permission_group_name of this StaffPermissionGroup.  # noqa: E501

        The name of the permission group.  # noqa: E501

        :return: The permission_group_name of this StaffPermissionGroup.  # noqa: E501
        :rtype: str
        """
        return self._permission_group_name

    @permission_group_name.setter
    def permission_group_name(self, permission_group_name):
        """Sets the permission_group_name of this StaffPermissionGroup.

        The name of the permission group.  # noqa: E501

        :param permission_group_name: The permission_group_name of this StaffPermissionGroup.  # noqa: E501
        :type: str
        """

        self._permission_group_name = permission_group_name

    @property
    def ip_restricted(self):
        """Gets the ip_restricted of this StaffPermissionGroup.  # noqa: E501

        When `true`, the staff member’s permissions are restricted to specific IP addresses.<br />  When `false`, the staff member’s permissions are not restricted to specific IP addresses.  # noqa: E501

        :return: The ip_restricted of this StaffPermissionGroup.  # noqa: E501
        :rtype: bool
        """
        return self._ip_restricted

    @ip_restricted.setter
    def ip_restricted(self, ip_restricted):
        """Sets the ip_restricted of this StaffPermissionGroup.

        When `true`, the staff member’s permissions are restricted to specific IP addresses.<br />  When `false`, the staff member’s permissions are not restricted to specific IP addresses.  # noqa: E501

        :param ip_restricted: The ip_restricted of this StaffPermissionGroup.  # noqa: E501
        :type: bool
        """

        self._ip_restricted = ip_restricted

    @property
    def allowed_permissions(self):
        """Gets the allowed_permissions of this StaffPermissionGroup.  # noqa: E501

        A list of the permissions allowed to the staff member. See [Permission Values](https://developers.mindbodyonline.com/PublicDocumentation/V6#epermission-values) for descriptions of the possible permissions.  # noqa: E501

        :return: The allowed_permissions of this StaffPermissionGroup.  # noqa: E501
        :rtype: list[str]
        """
        return self._allowed_permissions

    @allowed_permissions.setter
    def allowed_permissions(self, allowed_permissions):
        """Sets the allowed_permissions of this StaffPermissionGroup.

        A list of the permissions allowed to the staff member. See [Permission Values](https://developers.mindbodyonline.com/PublicDocumentation/V6#epermission-values) for descriptions of the possible permissions.  # noqa: E501

        :param allowed_permissions: The allowed_permissions of this StaffPermissionGroup.  # noqa: E501
        :type: list[str]
        """
        allowed_values = ["ManageClassAndEventDescriptions", "ManageClassSchedules", "ScheduleFreeClassesAndEvents", "ScheduleResourcesForClassesAndEvents", "SubstituteClassAndEventTeachers", "BulkEditClassSchedules", "AddStaffMembers", "ManagePersonalInfoForStaff", "ManageStaffSettings", "ManageStaffLogins", "ManageStaffSchedules", "ManageStaffPayRates", "AccessBusinessInformationScreen", "AccessGeneralSetupOptionsScreen", "AccessNewsEventsScreen", "ManageHolidays", "ClassAndEventOptionsScreen", "AppointmentOptionsScreen", "AccessMediaManagementScreen", "AccessMembershipSetupScreen", "ManagePaymentMethods", "ManageRoomNumbers", "AccessResourceManagementScreen", "AccessResourcesSchedulingTab", "AccessLinksScreen", "BulkCancelClientReservations", "FindDuplicateClients", "MergeDuplicateClients", "ManageAutoEmails", "ManageRevenueCategoriesForServices", "ManageRevenueCategoriesForProducts", "AccessActiveSessionTimesScreen", "AccessClassSessionTypeScreens", "AccessServiceCategoriesScreen", "ManageSubscriberPricing", "AddIntroOffersOnAcquisitionDashboard", "ManageMindbodyNetworkSettings", "ManageProducts", "ViewProductCost", "ManageMembershipSettingsForPricing", "ManagePromotionCodes", "EditSales", "PrintProductBarcodes", "MakeSales", "AddProductsOnRetailScreen", "EditSaleDateOnRetailScreen", "EditSalePriceCountOnRetailScreen", "EditActivationDateOnRetailScreen", "ApplyCustomDiscountsOnRetailScreen", "PayForAnotherClientOnRetailScreen", "VoidEditPastSales", "RefundSales", "RefundSalesToCreditCards", "LocationSwitching", "PullReportsForAllLocations", "LogInventory", "AdjustInventory", "TransferInventory", "ManagePurchaseOrders", "ManageLocationLocalization", "ManagePermissionGroups", "ManageConstantContactSettings", "AccessServicesPricingScreen", "ManageSemesters", "ManageRetentionMarketing", "ManageSubscriberSetupChecklist", "ViewClassAndEventReservations", "BookClassesAndEvents", "BookClassesAndEventsInThePast", "BookClassesAndEventsWithoutPayment", "CancelClassesAndEvents", "ManageClassNotes", "ViewAppointmentSchedule", "ViewPersonalAppointmentSchedule", "EditPersonalAppointmentSchedule", "ViewAppointmentDetails", "ManageAppointmentRequests", "BookAppointmentsForOtherStaffMembers", "BookAppointmentsInThePast", "ChangeAppointmentDetails", "UseAnyAppointmentAsAnAddon", "ChangeAppointmentDuration", "CancelAppointments", "ApplyPaymentToAppointments", "CheckOutAppointments", "OverrideAssignedPricing", "ManageAppointmentColors", "ViewAllLocationOnClientLookupScreen", "AddClient", "ViewClientProfileScreen", "EditClientProfileScreen", "AssignClientIndexes", "ManageClientSuspensions", "ViewClientPastVisits", "ViewClientAccountAndPurchaseHistory", "EditClientServiceDurationAndAssignedVisits", "EditClientServiceSessionCount", "IgnoreServiceCategoriesWhenReassigningPayment", "ViewClientAutoPaySchedules", "ManageClientAutoPaySchedules", "ViewClientDocuments", "AddClientDocuments", "DeleteClientDocuments", "ViewClientFutureVisits", "ViewClientBillingInformation", "EditClientBillingInformation", "ManageClientLogins", "UnassignClientGiftCards", "IgnoreCancellationPolicy", "LaunchSignInScreen", "DeleteAndTerminateClientContracts", "ReleaseContractDeposits", "AutoRenewAndSuspendContracts", "ManageClassTests", "ScheduleClassTests", "ManageClientRequiredFields", "ManageClientAlerts", "ManageClientTypesAndClientIndexes", "ManageClientReferralTypes", "ManageClientRelationshipTypes", "ManageClientGenders", "ClientAcquisitionAndAnalyticsDashboards", "ViewRetentionMarketingDashboard", "ExportReports", "ManageTaggedClients", "StaffPhoneBookReport", "ScheduleAtAGlanceReportForAllStaff", "PersonalScheduleAtAGlanceReport", "AttendanceWithRevenueReport", "CancellationsReport", "PersonalCancellationsReport", "AccountBalancesReport", "BulkAutoPaySchedulingFromAccountBalancesReport", "EventInvoicesReport", "CashDrawerReportCurrentDate", "CashDrawerReportAnyDate", "DailyCloseoutReport", "SalesReports", "SalesBySupplierAndProductReports", "PromoteFeesReport", "GiftCardsReport", "InventoryReports", "MarketingReports", "AnalysisReports", "ClientIndexesReports", "PayrollReportsForAllStaff", "PersonalPayrollReports", "StaffPerformanceReports", "OnlineMetricsReport", "RetentionManagementReport", "EntryLogsReport", "StaffActivityLogReport", "MembershipReport", "ManageOnlineOrdersReport", "TasksReport", "ClockSelfInAndOut", "ClockOthersInAndOut", "AccessTimeclockReport", "ManageTimeClocks", "ManageTimeClockTasks", "ManageContactLogTypes", "ViewContactLogs", "AddContactLogs", "EditOtherStaffMemberContactLogs", "DeleteContactLogs", "ContactLogAnalysisReport", "SalesForecastReport", "ViewAllClients", "ManageClientSalesReps", "CreateRetailTickets", "EditRetailTickets", "ManageTaskAssignments", "MerchantAccountReports", "VoidCreditCardTransactions", "SettleCreditCardTransactions", "UseStoredCreditCards", "ManageAutoPays", "ViewPersonalReviews", "ViewOthersReviews", "ViewClientNamesOnReviewReport", "EmailClientsFromReviewReport", "FlagReviewForRemoval", "RespondPubliclyToReviews"]  # noqa: E501
        if not set(allowed_permissions).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `allowed_permissions` [{0}], must be a subset of [{1}]"  # noqa: E501
                .format(", ".join(map(str, set(allowed_permissions) - set(allowed_values))),  # noqa: E501
                        ", ".join(map(str, allowed_values)))
            )

        self._allowed_permissions = allowed_permissions

    @property
    def denied_permissions(self):
        """Gets the denied_permissions of this StaffPermissionGroup.  # noqa: E501

        A list of the permissions that the staff member is not allowed to exercise. See [Permission Values](https://developers.mindbodyonline.com/PublicDocumentation/V6#epermission-values) for descriptions of the possible permissions.  # noqa: E501

        :return: The denied_permissions of this StaffPermissionGroup.  # noqa: E501
        :rtype: list[str]
        """
        return self._denied_permissions

    @denied_permissions.setter
    def denied_permissions(self, denied_permissions):
        """Sets the denied_permissions of this StaffPermissionGroup.

        A list of the permissions that the staff member is not allowed to exercise. See [Permission Values](https://developers.mindbodyonline.com/PublicDocumentation/V6#epermission-values) for descriptions of the possible permissions.  # noqa: E501

        :param denied_permissions: The denied_permissions of this StaffPermissionGroup.  # noqa: E501
        :type: list[str]
        """
        allowed_values = ["ManageClassAndEventDescriptions", "ManageClassSchedules", "ScheduleFreeClassesAndEvents", "ScheduleResourcesForClassesAndEvents", "SubstituteClassAndEventTeachers", "BulkEditClassSchedules", "AddStaffMembers", "ManagePersonalInfoForStaff", "ManageStaffSettings", "ManageStaffLogins", "ManageStaffSchedules", "ManageStaffPayRates", "AccessBusinessInformationScreen", "AccessGeneralSetupOptionsScreen", "AccessNewsEventsScreen", "ManageHolidays", "ClassAndEventOptionsScreen", "AppointmentOptionsScreen", "AccessMediaManagementScreen", "AccessMembershipSetupScreen", "ManagePaymentMethods", "ManageRoomNumbers", "AccessResourceManagementScreen", "AccessResourcesSchedulingTab", "AccessLinksScreen", "BulkCancelClientReservations", "FindDuplicateClients", "MergeDuplicateClients", "ManageAutoEmails", "ManageRevenueCategoriesForServices", "ManageRevenueCategoriesForProducts", "AccessActiveSessionTimesScreen", "AccessClassSessionTypeScreens", "AccessServiceCategoriesScreen", "ManageSubscriberPricing", "AddIntroOffersOnAcquisitionDashboard", "ManageMindbodyNetworkSettings", "ManageProducts", "ViewProductCost", "ManageMembershipSettingsForPricing", "ManagePromotionCodes", "EditSales", "PrintProductBarcodes", "MakeSales", "AddProductsOnRetailScreen", "EditSaleDateOnRetailScreen", "EditSalePriceCountOnRetailScreen", "EditActivationDateOnRetailScreen", "ApplyCustomDiscountsOnRetailScreen", "PayForAnotherClientOnRetailScreen", "VoidEditPastSales", "RefundSales", "RefundSalesToCreditCards", "LocationSwitching", "PullReportsForAllLocations", "LogInventory", "AdjustInventory", "TransferInventory", "ManagePurchaseOrders", "ManageLocationLocalization", "ManagePermissionGroups", "ManageConstantContactSettings", "AccessServicesPricingScreen", "ManageSemesters", "ManageRetentionMarketing", "ManageSubscriberSetupChecklist", "ViewClassAndEventReservations", "BookClassesAndEvents", "BookClassesAndEventsInThePast", "BookClassesAndEventsWithoutPayment", "CancelClassesAndEvents", "ManageClassNotes", "ViewAppointmentSchedule", "ViewPersonalAppointmentSchedule", "EditPersonalAppointmentSchedule", "ViewAppointmentDetails", "ManageAppointmentRequests", "BookAppointmentsForOtherStaffMembers", "BookAppointmentsInThePast", "ChangeAppointmentDetails", "UseAnyAppointmentAsAnAddon", "ChangeAppointmentDuration", "CancelAppointments", "ApplyPaymentToAppointments", "CheckOutAppointments", "OverrideAssignedPricing", "ManageAppointmentColors", "ViewAllLocationOnClientLookupScreen", "AddClient", "ViewClientProfileScreen", "EditClientProfileScreen", "AssignClientIndexes", "ManageClientSuspensions", "ViewClientPastVisits", "ViewClientAccountAndPurchaseHistory", "EditClientServiceDurationAndAssignedVisits", "EditClientServiceSessionCount", "IgnoreServiceCategoriesWhenReassigningPayment", "ViewClientAutoPaySchedules", "ManageClientAutoPaySchedules", "ViewClientDocuments", "AddClientDocuments", "DeleteClientDocuments", "ViewClientFutureVisits", "ViewClientBillingInformation", "EditClientBillingInformation", "ManageClientLogins", "UnassignClientGiftCards", "IgnoreCancellationPolicy", "LaunchSignInScreen", "DeleteAndTerminateClientContracts", "ReleaseContractDeposits", "AutoRenewAndSuspendContracts", "ManageClassTests", "ScheduleClassTests", "ManageClientRequiredFields", "ManageClientAlerts", "ManageClientTypesAndClientIndexes", "ManageClientReferralTypes", "ManageClientRelationshipTypes", "ManageClientGenders", "ClientAcquisitionAndAnalyticsDashboards", "ViewRetentionMarketingDashboard", "ExportReports", "ManageTaggedClients", "StaffPhoneBookReport", "ScheduleAtAGlanceReportForAllStaff", "PersonalScheduleAtAGlanceReport", "AttendanceWithRevenueReport", "CancellationsReport", "PersonalCancellationsReport", "AccountBalancesReport", "BulkAutoPaySchedulingFromAccountBalancesReport", "EventInvoicesReport", "CashDrawerReportCurrentDate", "CashDrawerReportAnyDate", "DailyCloseoutReport", "SalesReports", "SalesBySupplierAndProductReports", "PromoteFeesReport", "GiftCardsReport", "InventoryReports", "MarketingReports", "AnalysisReports", "ClientIndexesReports", "PayrollReportsForAllStaff", "PersonalPayrollReports", "StaffPerformanceReports", "OnlineMetricsReport", "RetentionManagementReport", "EntryLogsReport", "StaffActivityLogReport", "MembershipReport", "ManageOnlineOrdersReport", "TasksReport", "ClockSelfInAndOut", "ClockOthersInAndOut", "AccessTimeclockReport", "ManageTimeClocks", "ManageTimeClockTasks", "ManageContactLogTypes", "ViewContactLogs", "AddContactLogs", "EditOtherStaffMemberContactLogs", "DeleteContactLogs", "ContactLogAnalysisReport", "SalesForecastReport", "ViewAllClients", "ManageClientSalesReps", "CreateRetailTickets", "EditRetailTickets", "ManageTaskAssignments", "MerchantAccountReports", "VoidCreditCardTransactions", "SettleCreditCardTransactions", "UseStoredCreditCards", "ManageAutoPays", "ViewPersonalReviews", "ViewOthersReviews", "ViewClientNamesOnReviewReport", "EmailClientsFromReviewReport", "FlagReviewForRemoval", "RespondPubliclyToReviews"]  # noqa: E501
        if not set(denied_permissions).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `denied_permissions` [{0}], must be a subset of [{1}]"  # noqa: E501
                .format(", ".join(map(str, set(denied_permissions) - set(allowed_values))),  # noqa: E501
                        ", ".join(map(str, allowed_values)))
            )

        self._denied_permissions = denied_permissions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(StaffPermissionGroup, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StaffPermissionGroup):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
