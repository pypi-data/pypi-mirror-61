# coding: utf-8

"""
    MINDBODY Public API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class Liability(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'agreement_date': 'datetime',
        'is_released': 'bool',
        'released_by': 'int'
    }

    attribute_map = {
        'agreement_date': 'AgreementDate',
        'is_released': 'IsReleased',
        'released_by': 'ReleasedBy'
    }

    def __init__(self, agreement_date=None, is_released=None, released_by=None):  # noqa: E501
        """Liability - a model defined in Swagger"""  # noqa: E501

        self._agreement_date = None
        self._is_released = None
        self._released_by = None
        self.discriminator = None

        if agreement_date is not None:
            self.agreement_date = agreement_date
        if is_released is not None:
            self.is_released = is_released
        if released_by is not None:
            self.released_by = released_by

    @property
    def agreement_date(self):
        """Gets the agreement_date of this Liability.  # noqa: E501

        The date and time at which the client agreed to the liability waiver for the business.  # noqa: E501

        :return: The agreement_date of this Liability.  # noqa: E501
        :rtype: datetime
        """
        return self._agreement_date

    @agreement_date.setter
    def agreement_date(self, agreement_date):
        """Sets the agreement_date of this Liability.

        The date and time at which the client agreed to the liability waiver for the business.  # noqa: E501

        :param agreement_date: The agreement_date of this Liability.  # noqa: E501
        :type: datetime
        """

        self._agreement_date = agreement_date

    @property
    def is_released(self):
        """Gets the is_released of this Liability.  # noqa: E501

        The client’s liability release status.<br />  When `true`, indicates that the client has agreed to the liability release for the business.<br />  When `false`, indicates that the client has not agreed to the liability release for the business.  # noqa: E501

        :return: The is_released of this Liability.  # noqa: E501
        :rtype: bool
        """
        return self._is_released

    @is_released.setter
    def is_released(self, is_released):
        """Sets the is_released of this Liability.

        The client’s liability release status.<br />  When `true`, indicates that the client has agreed to the liability release for the business.<br />  When `false`, indicates that the client has not agreed to the liability release for the business.  # noqa: E501

        :param is_released: The is_released of this Liability.  # noqa: E501
        :type: bool
        """

        self._is_released = is_released

    @property
    def released_by(self):
        """Gets the released_by of this Liability.  # noqa: E501

        An ID indicating who released liability for the client. If the client agreed to the liability waiver by signing into an account online, this value is `null`. If a staff member marked the waiver as signed on behalf of the client, it is the staff member’s ID. `0` indicates that the business owner marked the liability waiver as signed on behalf of the client.  # noqa: E501

        :return: The released_by of this Liability.  # noqa: E501
        :rtype: int
        """
        return self._released_by

    @released_by.setter
    def released_by(self, released_by):
        """Sets the released_by of this Liability.

        An ID indicating who released liability for the client. If the client agreed to the liability waiver by signing into an account online, this value is `null`. If a staff member marked the waiver as signed on behalf of the client, it is the staff member’s ID. `0` indicates that the business owner marked the liability waiver as signed on behalf of the client.  # noqa: E501

        :param released_by: The released_by of this Liability.  # noqa: E501
        :type: int
        """

        self._released_by = released_by

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Liability, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Liability):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
