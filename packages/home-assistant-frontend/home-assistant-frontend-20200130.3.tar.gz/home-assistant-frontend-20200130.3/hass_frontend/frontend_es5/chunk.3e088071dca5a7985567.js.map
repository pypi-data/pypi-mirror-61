{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/layouts/hass-tabs-subpage.ts","webpack:///./src/components/ha-fab.ts","webpack:///./src/data/user.ts"],"names":["HaCard","property","css","_templateObject","html","_templateObject2","this","header","_templateObject3","_templateObject4","LitElement","customElements","define","customElement","HassTabsSubpage","type","String","attribute","Boolean","reflect","changedProperties","_this2","_get","_getPrototypeOf","prototype","call","has","_activeTab","tabs","findIndex","tab","route","prefix","includes","path","_this3","hassio","_backTapped","classMap","bottom-bar","narrow","map","page","index","component","core","isComponentLoaded","hass","exportOnly","showAdvanced","active","_tabTapped","icon","translationKey","localize","name","ev","navigate","currentTarget","backPath","backCallback","history","back","_templateObject5","MwcFab","get","_decorate","_initialize","_MwcFab","F","_MwcFab2","HaFab","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","apply","concat","_assertThisInitialized","_inherits","d","kind","key","value","classes","mdc-fab--mini","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","ripple","disabled","showIconAtEnd","__webpack_require__","__webpack_exports__","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","fetchUsers","updateUser","deleteUser","regeneratorRuntime","async","_context","prev","next","abrupt","callWS","stop","userId","params","_context3","Object","assign","user_id","_context4"],"mappings":"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","file":"chunk.3e088071dca5a7985567.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  customElement,\n  css,\n  CSSResult,\n  PropertyValues,\n} from \"lit-element\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-paper-icon-button-arrow-prev\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { Route, HomeAssistant } from \"../types\";\nimport { navigate } from \"../common/navigate\";\nimport \"@material/mwc-ripple\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string;\n  name?: string;\n  core?: boolean;\n  exportOnly?: boolean;\n  icon?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n  @property() public backCallback?: () => void;\n  @property({ type: Boolean }) public hassio = false;\n  @property({ type: Boolean }) public showAdvanced = false;\n  @property() public route!: Route;\n  @property() public tabs!: PageNavigation[];\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n  @property() private _activeTab: number = -1;\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.findIndex((tab) =>\n        this.route.prefix.includes(tab.path)\n      );\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"toolbar\">\n        <ha-paper-icon-button-arrow-prev\n          aria-label=\"Back\"\n          .hassio=${this.hassio}\n          @click=${this._backTapped}\n        ></ha-paper-icon-button-arrow-prev>\n        <div id=\"tabbar\" class=${classMap({ \"bottom-bar\": this.narrow })}>\n          ${this.tabs.map((page, index) =>\n            (!page.component ||\n              page.core ||\n              isComponentLoaded(this.hass, page.component)) &&\n            (!page.exportOnly || this.showAdvanced)\n              ? html`\n                  <div\n                    class=\"tab ${classMap({\n                      active: index === this._activeTab,\n                    })}\"\n                    @click=${this._tabTapped}\n                    .path=${page.path}\n                  >\n                    ${this.narrow\n                      ? html`\n                          <ha-icon .icon=${page.icon}></ha-icon>\n                        `\n                      : \"\"}\n                    ${!this.narrow || index === this._activeTab\n                      ? html`\n                          <span class=\"name\"\n                            >${page.translationKey\n                              ? this.hass.localize(page.translationKey)\n                              : name}</span\n                          >\n                        `\n                      : \"\"}\n                    <mwc-ripple></mwc-ripple>\n                  </div>\n                `\n              : \"\"\n          )}\n        </div>\n\n        <div id=\"toolbar-icon\">\n          <slot name=\"toolbar-icon\"></slot>\n        </div>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _tabTapped(ev: MouseEvent): void {\n    navigate(this, (ev.currentTarget as any).path, true);\n  }\n\n  private _backTapped(): void {\n    if (this.backPath) {\n      navigate(this, this.backPath);\n      return;\n    }\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: 65px;\n        background-color: var(--sidebar-background-color);\n        font-weight: 400;\n        color: var(--sidebar-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 0 16px;\n        box-sizing: border-box;\n      }\n\n      :host([narrow]) .toolbar {\n        background-color: var(--primary-background-color);\n        border-bottom: none;\n      }\n\n      #tabbar {\n        display: flex;\n        font-size: 14px;\n      }\n\n      #tabbar.bottom-bar {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        padding: 0 16px;\n        box-sizing: border-box;\n        background-color: var(--sidebar-background-color);\n        border-top: 1px solid var(--divider-color);\n        justify-content: space-between;\n        z-index: 1;\n        font-size: 12px;\n        width: 100%;\n      }\n\n      #tabbar:not(.bottom-bar) {\n        margin: auto;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, 0);\n      }\n\n      .tab {\n        padding: 0 32px;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n        height: 64px;\n        cursor: pointer;\n      }\n\n      .name {\n        white-space: nowrap;\n      }\n\n      .tab.active {\n        color: var(--primary-color);\n      }\n\n      #tabbar:not(.bottom-bar) .tab.active {\n        border-bottom: 2px solid var(--primary-color);\n      }\n\n      .bottom-bar .tab {\n        padding: 0 16px;\n        width: 20%;\n        min-width: 0;\n      }\n\n      ha-menu-button,\n      ha-paper-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        pointer-events: auto;\n        color: var(--sidebar-icon-color);\n      }\n\n      [main-title] {\n        margin: 0 0 0 24px;\n        line-height: 20px;\n        flex-grow: 1;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 65px);\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      #toolbar-icon {\n        position: absolute;\n        right: 16px;\n      }\n\n      :host([narrow]) .content {\n        height: calc(100% - 128px);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n","import { classMap } from \"lit-html/directives/class-map\";\nimport { html, customElement } from \"lit-element\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive.js\";\n\nimport \"@material/mwc-fab\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nimport { Fab } from \"@material/mwc-fab\";\n// tslint:disable-next-line\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render() {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon\n          ? html`\n              <ha-icon .icon=${this.icon}></ha-icon>\n            `\n          : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport interface User {\n  id: string;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  system_generated: boolean;\n  group_ids: string[];\n  credentials: Credential[];\n}\n\ninterface UpdateUserParams {\n  name?: User[\"name\"];\n  group_ids?: User[\"group_ids\"];\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (hass: HomeAssistant, name: string) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n"],"sourceRoot":""}