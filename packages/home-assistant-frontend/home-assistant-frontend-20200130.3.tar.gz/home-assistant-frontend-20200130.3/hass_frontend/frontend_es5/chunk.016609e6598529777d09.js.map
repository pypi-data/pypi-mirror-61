{"version":3,"sources":["webpack:///./src/common/util/render-status.ts","webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/zone.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/data/core.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["__webpack_require__","d","__webpack_exports__","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","setupLeafletMap","createTileLayer","mapElement","darkMode","draw","Leaflet","map","style","_args","arguments","regeneratorRuntime","async","_context","prev","next","length","undefined","parentNode","Error","awrap","e","then","t","bind","sent","Icon","Default","imagePath","document","createElement","setAttribute","appendChild","setView","addTo","abrupt","stop","leaflet","tileLayer","concat","Browser","retina","attribution","subdomains","minZoom","maxZoom","defaultRadiusColor","homeRadiusColor","passiveRadiusColor","fetchZones","createZone","updateZone","deleteZone","hass","callWS","type","values","Object","assign","zoneId","updates","zone_id","customElement","LocationEditor","property","this","_leafletMap","location","_locationMarker","getBounds","fitBounds","fitZoom","_ignoreFitToMap","html","_templateObject","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","has","_updateMarker","fitMap","_updateRadius","_updateRadiusColor","_updateIcon","shadowRoot","querySelector","_ref","_ref2","_this2","_mapEl","Boolean","radius","_slicedToArray","addEventListener","ev","_locationUpdated","latlng","invalidateSize","longitude","lng","Math","abs","lat","fireEvent","bubbles","getRadius","icon","iconHTML","el","outerHTML","_iconEl","divIcon","iconSize","className","_setIcon","editing","_moveMarker","setIcon","_this3","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","_this4","_context2","remove","setLatLng","disable","_setupEdit","circle","color","radiusColor","addLayer","marker","draggable","setRadius","setStyle","css","_templateObject2","LitElement","saveCoreConfig","detectCoreConfig","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","timezones","forEach","key","option","value","innerHTML","amsterdam","OnboardingCoreConfig","onboardingLocalize","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystem","_unitSystemValue","_unitSystemChanged","_save","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","currentTarget","detail","latitude","Number","elevation","String","unit_system","time_zone","t0","alert","message","finish","result","preventDefault","location_name","onboardCoreConfigStep"],"mappings":"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","file":"chunk.016609e6598529777d09.js","sourcesContent":["export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\nexport type LeafletDrawModuleType = typeof import(\"leaflet-draw\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false,\n  draw = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  if (draw) {\n    await import(/* webpackChunkName: \"leaflet-draw\" */ \"leaflet-draw\");\n  }\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { HomeAssistant } from \"../types\";\n\nexport const defaultRadiusColor = \"#FF9800\";\nexport const homeRadiusColor: string = \"#03a9f4\";\nexport const passiveRadiusColor: string = \"#9b9b9b\";\n\nexport interface Zone {\n  id: string;\n  name: string;\n  icon?: string;\n  latitude: number;\n  longitude: number;\n  passive?: boolean;\n  radius?: number;\n}\n\nexport interface ZoneMutableParams {\n  icon: string;\n  latitude: number;\n  longitude: number;\n  name: string;\n  passive: boolean;\n  radius: number;\n}\n\nexport const fetchZones = (hass: HomeAssistant) =>\n  hass.callWS<Zone[]>({ type: \"zone/list\" });\n\nexport const createZone = (hass: HomeAssistant, values: ZoneMutableParams) =>\n  hass.callWS<Zone>({\n    type: \"zone/create\",\n    ...values,\n  });\n\nexport const updateZone = (\n  hass: HomeAssistant,\n  zoneId: string,\n  updates: Partial<ZoneMutableParams>\n) =>\n  hass.callWS<Zone>({\n    type: \"zone/update\",\n    zone_id: zoneId,\n    ...updates,\n  });\n\nexport const deleteZone = (hass: HomeAssistant, zoneId: string) =>\n  hass.callWS({\n    type: \"zone/delete\",\n    zone_id: zoneId,\n  });\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport {\n  Marker,\n  Map,\n  LeafletMouseEvent,\n  DragEndEvent,\n  LatLng,\n  Circle,\n  DivIcon,\n} from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { defaultRadiusColor } from \"../../data/zone\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  @property() public radius?: number;\n  @property() public radiusColor?: string;\n  @property() public icon?: string;\n  public fitZoom = 16;\n  private _iconEl?: DivIcon;\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"radiusColor\")) {\n      this._updateRadiusColor();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: this.radiusColor || defaultRadiusColor,\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  private _updateRadiusColor(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setStyle({ color: this.radiusColor });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .light {\n        color: #000000;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this._unitSystem === \"metric\"\n              ? this.hass.localize(\n                  \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n                )\n              : this.hass.localize(\n                  \"ui.panel.config.core.section.core.core_config.elevation_feet\"\n                )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(`Failed to save: ${err.message}`);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}