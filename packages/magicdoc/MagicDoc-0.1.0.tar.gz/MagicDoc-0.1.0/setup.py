# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['magicdoc',
 'magicdoc.classes',
 'magicdoc.commands',
 'magicdoc.commands.tf_commands']

package_data = \
{'': ['*'], 'magicdoc': ['modules/*', 'templates/*']}

install_requires = \
['PyYaml>=5.3,<6.0',
 'click>=7.0,<8.0',
 'cloudmage-jinjautils>=1.0.2,<2.0.0',
 'colorama>=0.4.3,<0.5.0',
 'graphviz>=0.13.2,<0.14.0',
 'pyhcl>=0.4.0,<0.5.0',
 'python-terraform>=0.10.1,<0.11.0',
 'requests>=2.22.0,<3.0.0']

entry_points = \
{'console_scripts': ['magicdoc = magicdoc.main:cli']}

setup_kwargs = {
    'name': 'magicdoc',
    'version': '0.1.0',
    'description': 'MagicDoc is a Python command line tool/library that is designed to provide an extremely simple way to automatically create detailed documentation for certain project types.',
    'long_description': '# MagicDoc Automatated Project Documentation CLI Utility Package\n\n__NOTE: This Library is STILL IN DEV as of this latest push on 02/02/2020.__\n\n<br>\n\n## Description\n\nDocumentation is a tedious task that most of the time is either ignored or completed with minimal detail and effort, potentially making it difficult for others to consume and adequately use the project being developed. For example, when building IaC for cloud environments, it can become an aggravating burden to take the time to document each module or project required to create and test the actual infrastructure necessary for personal or business workloads. MagicDoc is a tool that aims to help resolve that very problem and help to lessen and eventually eliminate that very burden. The goal of this project is to be able to very quickly and easily produce detailed, quality documentation within minutes, and without the need to write any markdown manually. A command here, a few sentences there, and poof, just like magic, MagicDoc has saved hours of time and created beautiful documentation for your project!\n\n<br><br>\n\n## Python Version\n\nThis library is compatible with Python 3.6 and higher. It may work with earlier versions of Python3 but was not tested against anything earlier then 3.6. As Python 2.x is soon to be end of life, backward compatibility was not taken into consideration.\n\n<br><br>\n\n## Installation\n\nThis library has been published to [PyPi](https://pypi.org/project/magicdoc/) and can be installed via normal python package manager conventions such as [pip](https://pip.pypa.io/en/stable/) or [poetry](https://pypi.org/project/poetry/).\n\n<br>\n\n```python\npip3 install magicdoc\n```\n\n<br>\n\n## MagicDoc Commands\n\n```yaml\nmagicdoc:\n  Examples:\n    magicdoc --help\n    magicdoc -p terraform\n    magicdoc -p terraform -d /path/to/module/sourcecode\n  Arguments: None\n  Options:\n      provider:\n          Description: The type of project or platform provider that is being used as the documentation source\n          Value:\n            - terraform | tf\n            - Other platform providers currently in development\n          Flag: --provider, -p\n          Environment Variable: MAGICDOC_PROVIDER\n          Required: Yes\n      directory:\n          Description: |\n                The target directory containing the project source files that will be used as the documentation objective. This option exists so that the target directory can be set at the global level by an environment variable allowing all future commands to use its value. If this option is not set, then the target directory for the referenced command can take a directory argument directly when calling the command.\n          Value: /path/to/project/files\n          Flag: --directory, -d\n          Environment Variable: MAGICDOC_DIRECTORY\n          Required: No\n  Commands:\n    - show\n```\n\n<br><br>\n\n## MagicDoc Show Commands\n\nThe `magicdoc show` command is a container for show subcommands. By itself this command will not return anything other then the help menu.\n\n```bash\nUsage: magicdoc.py show [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  files      Command that will retrieve a list of files from a target...\n  outputs    Command that will retrieve a list of all of the project outputs...\n  release    Command that will retrieve the project repository information...\n  repo       Command that will retrieve the project repository information...\n  variables  Command that will retrieve a list of all of the project...\n```\n\n<br>\n\n### `magicdoc show files`\n\n```yaml\nmagicdoc show files:\n  Examples:\n    magicdoc show files\n    magicdoc -p terraform -d /path/to/module/sourcecode show files\n    magicdoc -p terraform show files /path/to/module/sourcecode\n  Arguments:\n      directory:\n          Description: The target directory containing the project source files that will be used as the documentation objective.\n          Value: /path/to/project/files\n          Default: ./\n          Required: No, If no directory is specified then magicdoc will use the current working directory.\n  Options:\n      subdir:\n          Description: Flag to control recursive searchs through the target directory. If set to True, then the file search will be recursive, if False, then only the parent directory will be searched.\n          Value:\n            - True\n            - False\n          Flag: --directory, -d\n          Environment Variable: MAGICDOC_SHOW_FILES_SUBDIR\n          Default: True\n          Required: No\n```\n\n<br>\n\n```bash\nUsing Provider: tf\nUsing Directory Path: /Terraform/TF-AWS-CodeBuild-Module\n\n7 tf files found in target directory: /Terraform/TF-AWS-CodeBuild-Module\noutputs.tf\nmain.tf\nvariables.tf\n/example => env.tfvars\n/example => outputs.tf\n/example => main.tf\n/example => variables.tf\n```\n\n<br><br>\n\n### `magicdoc show variables`\n\n```yaml\nmagicdoc show variables:\n  Examples:\n    magicdoc show variables\n    magicdoc -p terraform -d /path/to/module/sourcecode show variables\n    magicdoc -p terraform show variables /path/to/module/sourcecode\n  Arguments:\n      directory:\n          Description: The target directory containing the project source variables that will be used as the documentation objective.\n          Value: /path/to/project/files\n          Default: ./\n          Required: No, If no directory is specified then magicdoc will use the current working directory.\n  Options:\n      subdir:\n          Description: Flag to control recursive searchs through the target directory. If set to True, then the file search will be recursive, if False, then only the parent directory will be searched.\n          Value:\n            - True\n            - False\n          Flag: --directory, -d\n          Environment Variable: MAGICDOC_SHOW_FILES_SUBDIR\n          Default: True\n          Required: No\n```\n\n<br>\n\n```bash\nUsing Provider: tf\nUsing Directory Path: /Terraform/TF-AWS-CodeBuild-Module\n\n8 tf required variables found in target project: /Terraform/TF-AWS-CodeBuild-Module\ncodebuild_project_name     = Value Required\ncodebuild_project_desc     = Value Required\ncodebuild_service_role_arn = Value Required\ncodebuild_source_type      = Value Required\ncodebuild_source_url       = Value Required\ncodebuild_vpc              = Value Required\ncodebuild_subnet_list      = Value Required\ncodebuild_sg_list          = Value Required\n\n\n16 tf optional variables found in target project: /Terraform/TF-AWS-CodeBuild-Module\ncodebuild_timeout             = 15\ncodebuild_badge               = True\ncodebuild_artifact_type       = NO_ARTIFACTS\ncodebuild_artifact_encryption = False\ncodebuild_encryption_key      = NULL\ncodebuild_artifact_bucket     = NULL\ncodebuild_artifact_path       = /\ncodebuild_source_branch       = master\ncodebuild_buildspec           = buildspec.yml\ncodebuild_buildspec_type      = FILENAME\ncodebuild_env_compute_type    = BUILD_GENERAL1_SMALL\ncodebuild_env_image           = aws/codebuild/standard:1.0\ncodebuild_env_type            = LINUX_CONTAINER\ncodebuild_env_variables       = [\n{\n    "name": "ENV_UPDATE",\n    "value": "false"\n}\n{\n    "name": "ENV_PKGS",\n    "value": ""\n}\n{\n    "name": "SOURCE_DIR_PREFIX",\n    "value": ""\n}\n{\n    "name": "LAMBDA_INDEX",\n    "value": ""\n}\n{\n    "name": "LAMBDA_FN_NAME",\n    "value": ""\n}\n{\n    "name": "LAMBDA_RUNTIME",\n    "value": "python3.8"\n}\n{\n    "name": "LAMBDA_ROLE",\n    "value": ""\n}\n{\n    "name": "LAMBDA_HANDLER_NAME",\n    "value": ""\n}\n{\n    "name": "LAMBDA_TIMEOUT",\n    "value": "180"\n}\n{\n    "name": "LAMBDA_VPC_SUBNETS",\n    "value": ""\n}\n{\n    "name": "LAMBDA_VPC_SGS",\n    "value": ""\n}\n{\n    "name": "LAMBDA_MEM",\n    "value": ""\n}\n]\nwebhook_enable                = True\nwebhook_trigger               = PUSH\n```\n\n<br><br>\n\n### `magicdoc show outputs`\n\n```yaml\nmagicdoc show outputs:\n  Examples:\n    magicdoc show outputs\n    magicdoc -p terraform -d /path/to/module/sourcecode show outputs\n    magicdoc -p terraform show outputs /path/to/module/sourcecode\n  Arguments:\n      directory:\n          Description: The target directory containing the project output files that will be used as the documentation objective.\n          Value: /path/to/project/files\n          Default: ./\n          Required: No, If no directory is specified then magicdoc will use the current working directory.\n  Options:\n      subdir:\n          Description: Flag to control recursive searchs through the target directory. If set to True, then the file search will be recursive, if False, then only the parent directory will be searched.\n          Value:\n            - True\n            - False\n          Flag: --directory, -d\n          Environment Variable: MAGICDOC_SHOW_FILES_SUBDIR\n          Default: True\n          Required: No\n```\n\n<br>\n\n```bash\nUsing Provider: tf\nUsing Directory Path: /TF-AWS-CodeBuild-Module\n\n3 tf outputs found in target project: /TF-AWS-CodeBuild-Module\ncodebuild_project_id        = aws_codebuild_project.this.id\ncodebuild_project_arn       = aws_codebuild_project.this.arn\ncodebuild_project_badge_url = aws_codebuild_project.this.badge_url\n```\n\n<br><br>\n\n### `magicdoc show repo`\n\n```yaml\nmagicdoc show files:\n  Examples:\n    magicdoc show repo\n    magicdoc -p terraform -d /path/to/module/sourcecode show repo\n    magicdoc -p terraform -d /path/to/module/sourcecode show repo -n rnason -r myRepo\n    magicdoc -p terraform -d /path/to/module/sourcecode show repo -n rnason -r myRepo -t 12345678901....\n    magicdoc -p terraform show repo /path/to/module/sourcecode -n rnason -r myRepo -t 12345678901...\n  Arguments:\n      directory:\n          Description: The target directory containing the project source files that will be used as the documentation objective, this argument can be used to automatically pull the git repo options from .git/config.\n          Value: /path/to/project/files\n          Default: ./\n          Required: No, If no directory is specified then magicdoc will use the current working directory.\n  Options:\n      namespace:\n          Description: Specify the repository namespace that will be used to search for the git repository.\n          Value: rnason\n          Flag: --namespace, -n\n          Environment Variable: MAGICDOC_SHOW_REPO_NAMESPACE\n          Default: None\n          Required: Yes, unless it is desired to allow the command to attempt to configure this value from the .git/config file.\n      repo:\n          Description: Specify the repository to query for the targeted project data.\n          Value: myModule\n          Flag: --repo, -r\n          Environment Variable: MAGICDOC_SHOW_REPO_REPO\n          Default: None\n          Required: Yes, unless it is desired to allow the command to attempt to configure this value from the .git/config file.\n      token:\n          Description: Specify a personal access token to use to access a private repository.\n          Value: \'1234567890098765432112345678900987654321\'\n          Flag: --token, -t\n          Environment Variable: MAGICDOC_SHOW_REPO_TOKEN\n          Default: None\n          Required: No, only necessary if the repository is not public, then it would be required to gain access to the repo data.\n```\n\n<br>\n\n```json\nUsing Provider: tf\nUsing Directory Path: /TF-AWS-CodeBuild-Lambda-Deployment-Pipeline-Common-Root\n\n{\n    "latest_release": "v1.1.1",\n    "repo_description": "Terraform Root Project Module to deploy CodeBuild Lambda Common Resources",\n    "repo_fullname": "NameSpace-TF/MyRepositoryName",\n    "repo_name": "MyRepositoryName",\n    "repo_owner": "NameSpace-TF",\n    "repo_owner_url": "https://github.com/NameSpace-TF",\n    "state": "pass",\n    "status_code": 200\n}\n```\n\n<br><br>\n\n### `magicdoc show release`\n\n```yaml\nmagicdoc show release:\n  Examples:\n    magicdoc show release\n    magicdoc -p terraform -d /path/to/module/sourcecode show release\n    magicdoc -p terraform -d /path/to/module/sourcecode show release -n rnason -r myRepo\n    magicdoc -p terraform -d /path/to/module/sourcecode show release -n rnason -r myRepo -t 12345678901....\n    magicdoc -p terraform show release /path/to/module/sourcecode -n rnason -r myRepo -t 12345678901...\n  Arguments:\n      directory:\n          Description: The target directory containing the project source files that will be used as the documentation objective, this argument can be used to automatically pull the git repo options from .git/config.\n          Value: /path/to/project/files\n          Default: ./\n          Required: No, If no directory is specified then magicdoc will use the current working directory.\n  Options:\n      namespace:\n          Description: Specify the repository namespace that will be used to search for the git repository.\n          Value: rnason\n          Flag: --namespace, -n\n          Environment Variable: MAGICDOC_SHOW_REPO_NAMESPACE\n          Default: None\n          Required: Yes, unless it is desired to allow the command to attempt to configure this value from the .git/config file.\n      repo:\n          Description: Specify the repository to query for the targeted project data.\n          Value: myModule\n          Flag: --repo, -r\n          Environment Variable: MAGICDOC_SHOW_REPO_REPO\n          Default: None\n          Required: Yes, unless it is desired to allow the command to attempt to configure this value from the .git/config file.\n      token:\n          Description: Specify a personal access token to use to access a private repository.\n          Value: \'1234567890098765432112345678900987654321\'\n          Flag: --token, -t\n          Environment Variable: MAGICDOC_SHOW_REPO_TOKEN\n          Default: None\n          Required: No, only necessary if the repository is not public, then it would be required to gain access to the repo data.\n```\n\n<br>\n\n```json\nUsing Provider: tf\nUsing Directory Path: /TF-AWS-CodeBuild-Lambda-Deployment-Pipeline-Common-Root\n\nLatest Release: v1.1.1\n```\n\n<br><br>\n\n## MagicDoc Gen Commands\n\nThe `magicdoc gen` command is a container for show subcommands. By itself this command will not return anything other then the help menu.\n\n```bash\nUsage: magicdoc.py show [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  files\n```\n\n<br>\n\n### `magicdoc gen dirtree`\n\n```yaml\nmagicdoc gen dirtree:\n  Examples:\n    magicdoc gen dirtree\n    magicdoc -p terraform -d /path/to/module/sourcecode gen dirtree\n    magicdoc -p terraform gen dirtree /path/to/module/sourcecode\n  Arguments:\n      directory:\n          Description: The target directory containing the project source files that will be used as the documentation objective.\n          Value: /path/to/project/files\n          Default: ./\n          Required: No, If no directory is specified then magicdoc will use the current working directory.\n  Options: None\n```\n\n<br>\n\n```bash\nUsing Provider: tf\nUsing Directory Path: /TF-AWS-CodeBuild-Module\n\n.\n├── outputs.tf\n├── main.tf\n├── CHANGELOG.md\n├── images\n│   ├── tf_s3.png\n│   ├── optional.png\n│   ├── neon_optional.png\n│   ├── required.png\n│   └── neon_required.png\n├── example\n│   ├── env.tfvars\n│   ├── outputs.tf\n│   ├── main.tf\n│   ├── README.md\n│   └── variables.tf\n├── README.md\n├── variables.tf\n└── templates\n    ├── LambdaPy_BuildSpec.yml\n    └── LambdaJar_BuildSpec.yml\n```\n\n<br><br>\n\n### `magicdoc gen config`\n\n```yaml\nmagicdoc gen config:\n  Examples:\n    magicdoc gen config\n    magicdoc -p terraform -d /path/to/module/sourcecode gen config\n    magicdoc -p terraform gen config /path/to/module/sourcecode\n  Arguments:\n      directory:\n          Description: The destination directory where the config file will be written to upon rendering.\n          Value: /path/to/project/files\n          Default: ./\n          Required: No, If no directory is specified then magicdoc will use the current working directory.\n  Options:\n      template_dir:\n          Description: Specify the directory path location of the directory that contains the desired config jinja template. Default settting will use the packaged template.\n          Value: /path/to/templates/directory\n          Flag: --template_dir, -td\n          Environment Variable: MAGICDOC_GEN_CONFIG_TEMPLATE_DIR\n          Default: None (Class assign\'s default value of the internal package template directory.)\n          Required: No\n      template:\n          Description: Specify the jinja template file that will be used to generate the project config. Default value is the packaged magicdoc config template.\n          Value: /path/to/templates/template\n          Flag: --template, -t\n          Environment Variable: MAGICDOC_GEN_CONFIG_TEMPLATE\n          Default: magicdoc_config.j2\n          Required: No\n      filename:\n          Description: Specify the name that will be used for the config file output. Default is README.yaml.\n          Value: magicdoc.yaml (Must be saved as YAML for future processing and usage)\n          Flag: --filename, -f\n          Environment Variable: MAGICDOC_GEN_CONFIG_FILENAME\n          Default: README.yaml\n          Required: No\n      overwrite:\n          Description: Flag to allow over writing the current configuration file if one already exists in the provided config output path.\n          Value:\n            - True\n            - False\n          Flag: --overwrite, -ow\n          Environment Variable: MAGICDOC_GEN_CONFIG_OVERWRITE\n          Default: False\n          Required: No\n```\n\n<br>\n\n```bash\n#############################\n# Repository Configuration: #\n#############################\nRepository:\n    OwnerOverride:\n    NameSpace:\n    Name:\n    Version:\n\n############################\n# README.md Configuration: #\n############################\nREADME:\n    Title: \n    HeroImage:\n    DocLink:\n    #=====================#\n    # README.md Sections: #\n    #=====================#\n    GettingStarted: >-\n        Project Description.....\n    PreRequisites: >-\n        This module does not currently have any pre-requisites or dependency requirements.\n    Usage:\n        ExampleResourceName:\n############################\n# Variables Configuration: #\n############################\nVariables:\n    #=====================#\n    # Required Variables: #\n    #=====================#\n    Required:\n        Image:\n        codebuild_project_name:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the Name that will be given to the CodeBuild project that will be deployed.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_project_desc:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify a description for the CodeBuild project that will be deployed.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_service_role_arn:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the ARN of the role that will be assumed by the CodeBuild service to execute the build job.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_source_type:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the source repository type or vendor that this CodeBuild job will use. Valid Values are CODECOMMIT, CODEPIPELINE, GITHUB, GITHUB_ENTERPRISE, BITBUCKET, S3 or NO_SOURCE\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_source_url:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the source repository URL that CodeBuild will clone from. This is the repository of the project that will be build by this CodeBuild job.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_vpc:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the Id of the VPC that CodeBuild will be launched into. Example: vpc-xxxxxxxx\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_subnet_list:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the subnets that CodeBuild will be placed on within the specified VPC\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_sg_list:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the Security Groups that will be applied to the CodeBuild job within the specified VPC\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n    #=====================#\n    # Optional Variables: #\n    #=====================#\n    Optional:\n        Image:\n        codebuild_timeout:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the max amount of time in minutes that the CodeBuild job can run. Value must between 5 Min and 480 Min or 8 hours. Default value 15 min\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_badge:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify if CodeBuild should construct a build state badge for the project. Default True\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_artifact_type:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify type of artifact that the provisioned CodeBuild job will produce. Valid values are CODEPIPELINE, S3, or NO_ARTIFACTS. Default set NO_ARTIFACTS\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_artifact_encryption:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify if any CodeBuild artifacts should be encrypted. This option only applies to artifacts that will be pushed to S3. Default False\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_encryption_key:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the ARN of the KMS CMK that will be used to encrypt object pushed to the supplied S3 bucket. This option only applies if codebuild_artifact_encryption is true\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_artifact_bucket:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the Name of the S3 bucket that will be used for built artifact storage.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_artifact_path:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the path in the destination artifact bucket where produced artifacts will be pushed. Default set to /\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_source_branch:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the GIT repository branch that the codebuild job will monitor and pull from.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_buildspec:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the local path or repo file name of the buildspec file that will used during build execution. Available pre-built buildspecs are \'LambdaPy\' and LambdaJar\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_buildspec_type:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify if the provided buildspec file value references a pre-built file template or simply a file name. Valid values are \'FILE\', \'FILENAME\' and \'PREBUILT\'\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_env_compute_type:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the CodeBuild environment Compute Type to be provisioned. Valid Values are BUILD_GENERAL1_SMALL, BUILD_GENERAL1_MEDIUM and BUILD_GENERAL1_LARGE.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_env_image:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the image that CodeBuild will use for the build environment. Default set to Ubuntu aws/codebuild/standard:1.0\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_env_type:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify the CodeBuild environment type. Valid Values are \'LINUX_CONTAINER\' and \'WINDOWS_CONTAINER\'. Default set to LINUX_CONTAINER\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        codebuild_env_variables:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify a map of environment variables that will be passed to and used by the CodeBuild job.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        webhook_enable:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify if a webhook should be created and added to the CodeBuild job to build on commit.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n        webhook_trigger:\n            ExampleValue:\n            GeneralDetails:\n                Description: >-\n                    Specify a comma separated string of event types that will trigger the execution of this job. Valid values are PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED, PULL_REQUEST_MERGED.\n                Note:\n                Image:\n            VarDetails:\n                Description:\n                Note:\n                Image:\n            UsageDetails:\n                Description:\n                Note:\n                Image:\n```\n\n<br><br>\n',
    'author': 'Rich Nason',
    'author_email': 'rnason@cloudmage.io',
    'maintainer': 'Rich Nason',
    'maintainer_email': 'rnason@cloudmage.io',
    'url': 'https://github.com/TheCloudMage/PyPkgs-MagicDoc',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
