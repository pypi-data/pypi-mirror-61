{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "https://www.onecommons.org/schemas/unfurl/manifest-v1alpha1.json",
  "title": "manifest.yaml",
  "definitions": {
    "state": {
      "title": "state",
      "description": "the operational state of the instance",
      "enum": [
        "initial",
        "creating",
        "created",
        "configuring",
        "configured",
        "starting",
        "started",
        "stopping",
        "deleting",
        "error"
      ],
      "$$target": "#/definitions/state"
    },
    "readyState": {
      "title": "readyState",
      "description": "The operational status of the instance",
      "enum": ["unknown", "ok", "degraded", "error", "pending", "notpresent"],
      "$$target": "#/definitions/readyState"
    },
    "atomic": {
      "title": "atomic",
      "description": "indicates these properties must be set all at once or replaced",
      "type": "object",
      "$$target": "#/definitions/atomic"
    },
    "namedObjects": {
      "title": "namedObject",
      "type": "object",
      "description": "constrains how properties are named",
      "propertyNames": { "pattern": "^[A-Za-z_][A-Za-z0-9_\\-]*$" },
      "$$target": "#/definitions/namedObjects"
    },
    "secret": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "object",
          "properties": {
            "secret": {
              "type": "string",
              "pattern": "^[A-Za-z_][A-Za-z0-9_\\-]*$"
            }
          },
          "required": ["secret"]
        }
      },
      "required": ["ref"],
      "$$target": "#/definitions/secret"
    },
    "attributes": {
      "title": "attributes",
      "$ref": "#/definitions/namedObjects",
      "default": {},
      "$$target": "#/definitions/attributes"
    },
    "schema": {
      "title": "schema",
      "description": "a JSON Schema definition",
      "type": "object",
      "$$target": "#/definitions/schema"
    },
    "import": {
      "title": "Import",
      "description": "Declare an instance imported from another manifest.",
      "$$target": [
        "#/definitions/import",
        "./manifest-schema.json#/definitions/import"
      ],
      "type": "object",
      "properties": {
        "file": { "type": "string" },
        "repository": { "type": "string" },
        "instance": { "type": "string" },
        "properties": { "$ref": "#/definitions/attributes" },
        "attributes": { "$ref": "#/definitions/attributes" }
      }
    },
    "instance": {
      "title": "Instance",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "template": { "type": "string" },
            "attributes": {
              "$ref": "#/definitions/attributes",
              "default": {}
            },
            "instances": { "$ref": "#/definitions/instances" },
            "capabilities": { "$ref": "#/definitions/instances" },
            "requirements": { "$ref": "#/definitions/instances" },
            "imported": { "type": "string" }
          }
        },
        { "$ref": "#/definitions/status" }
      ],
      "$$target": "#/definitions/instance"
    },
    "instances": {
      "title": "instances",
      "$$target": "#/definitions/instances",
      "allOf": [
        { "$ref": "#/definitions/namedObjects" },
        {
          "additionalProperties": {
            "$ref": "#/definitions/instance"
          }
        }
      ]
    },
    "status": {
      "title": "Status",
      "$$target": "#/definitions/status",
      "type": "object",
      "properties": {
        "readyState": {
          "type": "object",
          "properties": {
            "effective": { "$ref": "#/definitions/readyState" },
            "local": { "$ref": "#/definitions/readyState" },
            "state": { "$ref": "#/definitions/state" }
          }
        },
        "priority": { "enum": ["ignore", "optional", "required"] },
        "lastStateChange": { "$ref": "#/definitions/changeId" },
        "lastConfigChange": { "$ref": "#/definitions/changeId" }
      },
      "additionalProperties": true
    },
    "changeId": {
      "title": "changeId",
      "type": "number",
      "$$target": "#/definitions/changeId"
    },
    "timestamp": {
      "title": "Timestamp",
      "$$target": "#/definitions/timestamp",
      "type": "string",
      "format": "date-time"
    },
    "version": {
      "title": "Generic Version Identifier",
      "$$target": [
        "#/definitions/version",
        "./manifest-schema.json#/definitions/version"
      ],
      "anyOf": [{ "type": "string" }, { "type": "number" }]
    },
    "configurationSpec": {
      "title": "implementation definition",
      "type": "object",
      "properties": {
        "operation": { "type": "string" },
        "className": { "type": "string" },
        "majorVersion": { "$ref": "#/definitions/version" },
        "minorVersion": { "type": "string" }
      },
      "required": ["className"],
      "$$target": "#/definitions/configurationSpec"
    },
    "changes": {
      "title": "Changes",
      "description": "change log entry",
      "$$target": [
        "#/definitions/changes",
        "./manifest-schema.json#/definitions/changes"
      ],
      "type": "array",
      "additionalItems": {
        "oneOf": [
          { "$ref": "#/definitions/job" },
          { "$ref": "#/definitions/task" }
        ]
      }
    },
    "job": {
      "title": "Job Record",
      "$$target": "#/definitions/job",
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/status" },
        {
          "properties": {
            "jobId": { "$ref": "#/definitions/changeId" },
            "startCommit": { "type": "string" },
            "startTime": { "$ref": "#/definitions/timestamp" },
            "workflow": { "type": "string" },
            "options": { "type": "object" },
            "summary": { "type": "string" },
            "specDigest": { "type": "string" },
            "lastChangeId": { "$ref": "#/definitions/changeId" },
            "endCommit": { "type": "string" }
          }
        }
      ],
      "required": ["jobId"]
    },
    "task": {
      "title": "Task Record",
      "$$target": "#/definitions/task",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "changeId": { "$ref": "#/definitions/changeId" },
            "parentId": { "$ref": "#/definitions/changeId" },
            "target": { "type": "string" },
            "implementation": {
              "$ref": "#/definitions/configurationSpec"
            },
            "inputs": { "$ref": "#/definitions/attributes" },
            "changes": {
              "allOf": [
                { "$ref": "#/definitions/namedObjects" },
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/namedObjects"
                  }
                }
              ],
              "default": {}
            },
            "dependencies": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "ref": { "type": "string" },
                  "expected": {},
                  "schema": { "$ref": "#/definitions/schema" },
                  "required": { "type": "boolean" }
                }
              }
            },
            "messages": { "type": "array" },
            "result": {
              "oneOf": [{ "enum": ["skipped"] }, { "type": "object" }]
            }
          },
          "required": ["changeId"]
        },
        { "$ref": "#/definitions/status" }
      ]
    }
  },
  "type": "object",
  "properties": {
    "apiVersion": { "enum": ["unfurl/v1alpha1"] },
    "kind": { "enum": ["Manifest"] },
    "imports": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/namedObjects" },
        {
          "additionalProperties": {
            "$ref": "#/definitions/import"
          }
        }
      ]
    },
    "spec": {
      "type": "object",
      "anyOf": [
        {
          "oneOf": [
            {
              "properties": {
                "service_template": {
                  "description": "a TOSCA service template",
                  "type": "object"
                }
              }
            },
            {
              "properties": {
                "node_templates": {
                  "description": "TOSCA nodes templates",
                  "type": "object"
                }
              }
            }
          ]
        },
        {
          "properties": {
            "inputs": { "$ref": "#/definitions/attributes" },
            "instances": { "$ref": "#/definitions/namedObjects" }
          }
        }
      ]
    },
    "status": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "topology": { "type": "string" },
            "inputs": { "$ref": "#/definitions/attributes" },
            "outputs": { "$ref": "#/definitions/attributes" },
            "instances": { "$ref": "#/definitions/instances" }
          }
        },
        { "$ref": "#/definitions/status" }
      ],
      "default": {}
    },
    "latestChange": { "$ref": "#/definitions/job" },
    "changeLog": { "type": "string" },
    "changes": { "$ref": "#/definitions/changes" }
  },
  "required": ["apiVersion", "kind", "spec"]
}
