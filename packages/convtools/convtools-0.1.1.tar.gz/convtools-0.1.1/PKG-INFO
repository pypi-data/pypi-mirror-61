Metadata-Version: 2.1
Name: convtools
Version: 0.1.1
Summary: convtools is a python library to declaratively define conversions from python objects to python objects, including processing collections and doing complex aggregations.
Home-page: UNKNOWN
Author: iTechArt Group
Author-email: mikita.almakou@itechart-group.com
License: mit
Project-URL: Documentation, https://convtools.readthedocs.io/en/latest/
Project-URL: Bug Reports, https://github.com/itechart-almakov/convtools/issues
Description: =========
        convtools
        =========
        
        
        **convtools** is a python library to declaratively define conversions from python
        objects to python objects, including processing collections and doing complex
        aggregations.
        
        .. image:: https://readthedocs.org/projects/convtools/badge/?version=latest
           :target: https://convtools.readthedocs.io/en/latest/?badge=latest
           :alt: Documentation Status
        
        .. image:: https://github.com/itechart-almakov/convtools/workflows/tests/badge.svg
           :target: https://github.com/itechart-almakov/convtools/workflows/tests/badge.svg
           :alt: Tests Status
        
        Description
        ===========
        
        Conversions are not limited to simple data transformations, there are
        ``GroupBy`` & ``Aggregate`` conversions with many useful reducers:
        
         * from common `Sum`, `Max`
         * and less widely supported `First`/`Last`, `Array`/`ArrayDistinct`
         * to `DictSum`-like ones (for nested aggregation) and `MaxRow`/`MinRow`
           (for finding an object with max/min value and further processing)
        
        Every conversion:
         * contains the information of how to transform input data
         * can be piped into another conversion (same as wrapping)
         * has a method ``gen_converter`` returning a function compiled at runtime,
           which benefits from being highly specialized for the particular need
           (no superflious loops, minimum number of function calls)
         * despite being compiled at runtime, is debuggable due to `linecache` populating.
        
        
        Documentation
        =============
        
        `convtools on Read the Docs <https://convtools.readthedocs.io/en/latest/>`_
        
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: >=3.4
Description-Content-Type: text/x-rst; charset=UTF-8
Provides-Extra: testing
