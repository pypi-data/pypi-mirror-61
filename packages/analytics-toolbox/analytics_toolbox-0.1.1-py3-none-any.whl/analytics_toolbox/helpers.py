# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/99_helpers.ipynb (unless otherwise specified).

__all__ = ['get_str_var_names', 'open_and_run', 'current_datetime_dict']

# Cell

import _string
import calendar
import datetime


# Cell

def get_str_var_names(yourstring):
    return [fname for _, fname, _, _ in _string.formatter_parser(yourstring) if fname]


def open_and_run(sql_file, db_obj, commit = False):
    if hasattr(db_obj, 'qry'):
        with open(sql_file, 'r') as f:
            sql = f.read()
            return getattr(db_obj, 'qry')(sql, commit)
    else:
        raise Exception(f"Did not pass database object when running {sql_file}")

# Cell

def current_datetime_dict(current_time=datetime.datetime.now()):
    """
    Creates a dictionary with useful datetime formats.
    """
    cy = datetime.datetime.now().year
    cm = datetime.datetime.now().strftime("%m")
    now = current_time

    if now.month == 1:
        pm_d = datetime.datetime(now.year - 1, 12, 1)
        pm = datetime.datetime(now.year - 1, 12, 1).strftime("%m")
        mrange = calendar.monthrange(pm_d.year, pm_d.month)
        iso_mstart = str(datetime.datetime(pm_d.year, pm_d.month, 1))
        iso_mend = str(datetime.datetime(pm_d.year, pm_d.month, mrange[1]))
    else:
        pm_d = datetime.datetime(now.year, now.month - 1, 1)
        pm = datetime.datetime(now.year, now.month - 1, 1).strftime("%m")
        mrange = calendar.monthrange(pm_d.year, pm_d.month)
        iso_mstart = str(datetime.datetime(pm_d.year, pm_d.month, 1))
        iso_mend = str(datetime.datetime(pm_d.year, pm_d.month, mrange[1]))

    data = {
        "now": str(now),
        "past_iso_start": iso_mstart,
        "past_iso_end": iso_mend,
        "current_yearmo": str(now.year) + str(now.strftime("%m")),
        "past_yearmo": str(pm_d.year) + str(pm),
        "current_year_mm": str(now.year) + "-" + str(now.strftime("%m")),
        "past_year_mm": str(pm_d.year) + "-" + str(pm_d.strftime("%m")),
    }

    return data