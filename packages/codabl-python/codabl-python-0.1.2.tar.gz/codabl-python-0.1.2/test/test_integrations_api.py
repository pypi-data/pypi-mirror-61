# coding: utf-8

"""
    Codabl Community API

    The Codabl API is a collection of analytics tools and data integrations made for blockchain developers. In particular we offer Natural Language Processing and Anomaly detection algorithms that have been fine tune to understand text data and time series in the domain speficic setting of cryptocurrency and blockchain technology. This technology is intended to be use as building blocks to bigger applications, we offer examples on how to use them for Trading Backtesting and Smart Contract anomaly monitoring.  # noqa: E501

    OpenAPI spec version: 0.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import codabl
from codabl.api.integrations_api import IntegrationsApi  # noqa: E501
from codabl.rest import ApiException


class TestIntegrationsApi(unittest.TestCase):
    """IntegrationsApi unit test stubs"""

    def setUp(self):
        self.api = codabl.api.integrations_api.IntegrationsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_crypto_get_candle_data(self):
        """Test case for crypto_get_candle_data

        Downloads candle format market data  # noqa: E501
        """
        pass

    def test_crypto_get_exchange_assets(self):
        """Test case for crypto_get_exchange_assets

        Gets all coin pairs traded in specified exchange  # noqa: E501
        """
        pass

    def test_crypto_get_orderbooks(self):
        """Test case for crypto_get_orderbooks

        Returns the current state of the orderbook.  # noqa: E501
        """
        pass

    def test_crypto_get_supported_exchanges(self):
        """Test case for crypto_get_supported_exchanges

        Gets all cryptocurrency exchanges supported by the Codabl API  # noqa: E501
        """
        pass

    def test_crypto_get_ticker(self):
        """Test case for crypto_get_ticker

        Downloads candle format market data  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
