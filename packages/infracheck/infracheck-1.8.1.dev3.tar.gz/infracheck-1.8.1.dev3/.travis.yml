language: python
if: branch = master OR tag IS present
python: "3.6"
sudo: true
services:
    - docker

before_script:
    - echo "$DOCKER_PASSWORD" | sudo docker login -u "$DOCKER_USERNAME" --password-stdin
    - echo "$QUAY_PASSWORD" | sudo docker login -u "$QUAY_USERNAME" --password-stdin quay.io

jobs:
  include:
    - stage: Check compatibility with Python 3.7
      python: 3.7
      dist: bionic
      script:
          - pip install setuptools
          - make install SUDO="" PY_BIN="python" PIP="pip"

    - stage: Functional tests
      before_script:
          - sudo apt-get update -y
          - sudo apt-get install -y whois openssh-client sshpass
          - pip install pipenv
          - make install PY_BIN="python" PIP="pip"
      script:
          - make functional_test SUDO=""
      after_success:
          - bash ./.infrastructure/notify.sh "${SLACK_URL}" " [OK] Infracheck functional tests were passed"
      after_failure:
          - bash ./.infrastructure/notify.sh "${SLACK_URL}" " [FAILURE] Infracheck functional tests are failing!"

    - stage: Unit tests
      before_script:
          # install dependencies
          - sudo apt-get update -y
          - sudo apt-get install -y whois
          - pip install pipenv coverage
      script:
          - make coverage SUDO=""
      after_success:
          - bash <(curl -s https://codecov.io/bash) -cF python
          - bash ./.infrastructure/notify.sh "${SLACK_URL}" " [OK] Infracheck unit tests were passed"
      after_failure:
          - bash ./.infrastructure/notify.sh "${SLACK_URL}" " [FAILURE] Infracheck tests are failing!"

    - stage: "Release: Deploy to PyPI"
      script: echo "Deploying to PyPI"
      deploy:
          skip_cleanup: true
          skip_existing: true
          provider: pypi
          distributions: sdist bdist_wheel
          on:
              all_branches: true
          user: marek_man
          password:
              secure: jVQvdHqtkrL1smrJl/QC3YjP7vXSQ0XGuXe6nKeO0y3hDqGF8uP1FWNE4N+qSd1hJa23bN26gJa0FwrbP/n0XH82638QWw/Lu7gO5ITsoFrD3eERHqlRJ+xjsLo5NCP5/oo1fgMxWJ2Dp9xQvVRoYOc+xyyfoyllyMQY7vrpV9BZexJh9hZC2feX6B6PxmDYOV6EPnM2Nxi37kvUva7vAxJPZXrK29gJuB9VR1ToST6/ivA8LZXrjt1K/W1O8ewENr+PkDfmo8+ULHQtMEZO4/I4IvFRiLVYfCDFsJfUTkxeeMu468ZHnYyEUWcK//18UAz7bQXTOCeZbSla+g/LtBLXOo8w+V1Ws541ulJkKrekbvJB1GPwzOcVDHb9UEXtGyr8MvTkKqJUBsZFXGW3F7ClNyMvlbdf/8RDbI2xhwS402TD4e4g9cvZCy4QOGDHaAH0NldoLHdxfNQALIXrjI9HNm1bG5LQtvJ9bEsVsxcm1Zu9nSKqUfDxG12OIpAcdAwa0AoKOwds8BfIskyvbR+n37ftv6Hyv9H3ErpZh6L04y/LJeSE87+nQYwfFhZPx4KD+/D4lqCm1a98mDUwSIhkfrhF2Gvt0B0aOKP1pxGQMW8QVicOplCfdk4SHQL8J/Gy6xZbOFH7rWdDnnO/CWmlZ3UnCJDWiGssBJwstyA=

    - stage: "Release: Build recent docker x86_64 image"
      script: make build_image ARCH=x86_64 GIT_TAG=${TRAVIS_TAG} PUSH=true

    - stage: "Release: Build recent docker ARM image"
      script: make build_image ARCH=arm GIT_TAG=${TRAVIS_TAG} PUSH=true
