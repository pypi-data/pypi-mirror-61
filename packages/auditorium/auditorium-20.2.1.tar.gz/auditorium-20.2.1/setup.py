# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['auditorium']

package_data = \
{'': ['*'],
 'auditorium': ['static/css/*',
                'static/css/print/*',
                'static/css/theme/*',
                'static/img/*',
                'static/js/*',
                'static/lib/font/league-gothic/*',
                'static/lib/font/source-sans-pro/*',
                'static/lib/js/*',
                'static/md/*',
                'static/plugin/highlight/*',
                'static/plugin/math/*',
                'static/plugin/multiplex/*',
                'static/plugin/notes-server/*',
                'static/plugin/notes/*',
                'static/plugin/print-pdf/*',
                'static/plugin/search/*',
                'static/plugin/zoom-js/*',
                'templates/*']}

install_requires = \
['aiofiles>=0.4.0,<0.5.0',
 'fastapi>=0.45.0,<0.46.0',
 'fire>=0.2.1,<0.3.0',
 'jinja2>=2.10.3,<3.0.0',
 'markdown>=3.1.1,<4.0.0',
 'pygments>=2.5.2,<3.0.0',
 'websockets>=8.1,<9.0']

extras_require = \
{'server': ['uvicorn>=0.11.1,<0.12.0']}

entry_points = \
{'console_scripts': ['auditorium = auditorium.__main__:main']}

setup_kwargs = {
    'name': 'auditorium',
    'version': '20.2.1',
    'description': 'A Python-powered slideshow maker with steroids.',
    'long_description': '# Auditorium\n\n[<img alt="PyPI - License" src="https://img.shields.io/pypi/l/auditorium.svg">](https://github.com/apiad/auditorium/blob/master/LICENSE)\n[<img alt="PyPI - Python Version" src="https://img.shields.io/pypi/pyversions/auditorium.svg">](https://pypi.org/project/auditorium/)\n[<img alt="PyPI" src="https://img.shields.io/pypi/v/auditorium.svg">](https://pypi.org/project/auditorium/)\n[<img alt="Travis (.org)" src="https://img.shields.io/travis/apiad/auditorium/master.svg">](https://travis-ci.org/apiad/auditorium)\n[<img alt="Codecov" src="https://img.shields.io/codecov/c/github/apiad/auditorium.svg">](https://codecov.io/gh/apiad/auditorium)\n[<img alt="Gitter" src="https://img.shields.io/gitter/room/apiad/auditorium">](https://gitter.im/auditorium-slides/community)\n[<img alt="Demo" src="https://img.shields.io/badge/demo-browse-blueviolet"></img>](https://auditorium-demo.apiad.net)\n\n<!-- <img src="https://apiad.net/auditorium/assets/logo.png"></img> -->\n\n> A Python-powered slideshow creator with steroids.\n\nSee the demo at [auditorium-demo.apiad.net](https://auditorium-demo.apiad.net).\n\n## What\'s this about\n\nAuditorium is a Python-powered slideshow generator.\nYou write pure Python code, and obtain an HTML+JavaScript slideshow (using the amazing [reveal.js](https://revealjs.com) library).\nThe awesomeness comes from the fact that your Python backend is connected to the slideshow frontend, which allows your slideshow to dynamically change according to user input or automatically.\n\nThis opens the door to a few interesting use cases:\n\n*  The slides content itself can be generated by code. For example, long and repetitive sets of slides can be automatically generated, or tables and graphs embedded in slides can be generated on-the-fly with `matplotlib`, `bokeh`, `altair`, `plotly`, or any visualization package that produces HTML output.\n*  You can insert components in the slides that respond to user input, and execute a Python code in response. For example, you can generate an interactive graph that can be modified by moving sliders in a slideshow.\n*  You can create beautiful animations with simple Python code, that automatically play on a slide, using visualization libraries or simple HTML markup.\n\n> **And all of this without writing a single line of HTML or JavaScript.**\n\nAlternatively, if you need little to no Python code, you can author your slideshow in pure Markdown and add some Python sprinkless here and there when necessary.\n\n## Installation\n\nSimply run:\n\n    pip install auditorium[server]\n\nTo see a quick demo run:\n\n    auditorium demo\n\nAnd point your browser at [localhost:6789](http://localhost:6789).\n\n## Quick Start and Tutorials\n\nIf you want to quickly grok `auditorium`, the best option is to [look at the demo online](https://auditorium-demo.apiad.net) and then\n[read the source code](https://github.com/apiad/auditorium/blob/master/auditorium/demo.py). This way you will both see the end result and what effort it takes to get there.\n\n* [Authoring a slideshow with Python](https://apiad.net/auditorium/quickstart/#python-first)\n* [Authoring a slideshow with Markdown](https://apiad.net/auditorium/quickstart/#markdown-first)\n* [Rendering a slideshow as purely static HTML](https://apiad.net/auditorium/quickstart/#going-full-static)\n* [Hosting a slideshow online for free](https://apiad.net/auditorium/hosting/#hosting-freely-with-auditorium-publish)\n\n## Made with Auditorium\n\n* [Auditorium Demo](https://auditorium-demo.apiad.net) - a slideshow showcasing the most important features from `auditorium`.\n\n### Your Contributions Here\n\nIf you have a slideshow to showcase here, feel free to [edit this Readme](https://github.com/apiad/auditorium/edit/master/README.md) and send a pull request. Add your website, Github repository, and any other information.\n\nIf you feel like sending some support please consider adding a badge somewhere in your website or repository:\n\n```html\n<a href="https://apiad.net/auditorium">\n    <img alt="Made with Auditorium"\n         src="https://img.shields.io/badge/made--with-auditorium-blue">\n    </img>\n</a>\n```\n\nIt looks like this:\n\n<a href="https://apiad.net/auditorium"><img alt="Made with Auditorium" src="https://img.shields.io/badge/made--with-auditorium-blue"></img></a>\n\n## History\n\nSee [the docs](https://apiad.net/auditorium/history).\n\n## Collaboration and License\n\nLicense is MIT, so you know the drill: fork, develop, add tests, pull request, rinse and repeat.\nSee collaboration details [in the docs](https://apiad.net/auditorium/contributing).\n',
    'author': 'Alejandro Piad',
    'author_email': 'alepiad@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'extras_require': extras_require,
    'entry_points': entry_points,
    'python_requires': '>=3.6.1,<4.0.0',
}


setup(**setup_kwargs)
