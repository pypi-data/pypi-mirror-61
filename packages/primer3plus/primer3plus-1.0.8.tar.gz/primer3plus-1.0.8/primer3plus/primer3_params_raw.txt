PRIMER3WEB RELEASE 4.1.0 MANUAL
Index of contents
1. COPYRIGHT AND LICENSE
2. INTRODUCTION
3. CITING PRIMER3
4. FAIR USE OF PRIMER3
5. "SEQUENCE" INPUT TAGS
6. "GLOBAL" INPUT TAGS
7. OUTPUT HELP
8. HOW PRIMER3 CALCULATES THE PENALTY VALUE
9. CAUTIONS
10. PROVIDED MISPRIMING LIBRARIES
11. WHAT TO DO IF PRIMER3 CANNOT FIND ANY PRIMERS?
12. ADVICE FOR PICKING PRIMERS
13. PRIMER3 WWW INTERFACES
14. ACKNOWLEDGMENTS
1. COPYRIGHT AND LICENSE
Copyright (c) 1996,1997,1998,1999,2000,2001,2004,2006,2007,2008,2009,2010
              2011,2012,2013,2016,2017
Whitehead Institute for Biomedical Research, Steve Rozen
(http://purl.com/STEVEROZEN/), Helen Skaletsky, Triinu Koressaar,
Maido Remm and Andreas Untergasser. All rights reserved.
    This file is part of the Primer3 suite and libraries.
    The Primer3 suite and libraries are free software;
    you can redistribute them and/or modify them under the terms
    of the GNU General Public License as published by the Free
    Software Foundation; either version 2 of the License, or (at
    your option) any later version.
    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this software (file gpl-2.0.txt in the source
    distribution); if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
2. INTRODUCTION
Primer3 picks primers for PCR reactions, considering as criteria:
o oligonucleotide melting temperature, size, GC content, and primer-dimer possibilities,

o PCR product size,

o positional constraints within the source (template) sequence, and

o possibilities for ectopic priming (amplifying the wrong sequence)

o many other constraints.

All of these criteria are user-specifiable as constraints, and some are specifiable as terms in an objective function that characterizes an optimal primer pair.
3. CITING PRIMER3
We request but do not require that use of this software be cited in publications as

* Untergasser A, Cutcutache I, Koressaar T, Ye J, Faircloth BC, Remm M and Rozen SG.
Primer3--new capabilities and interfaces.
Nucleic Acids Res. 2012 Aug 1;40(15):e115.
The paper is available at http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3424584/

and

* Koressaar T and Remm M.
Enhancements and modifications of primer design program Primer3.
Bioinformatics 2007;23(10):1289-1291.
The paper is available at https://www.ncbi.nlm.nih.gov/pubmed/17379693

If you use masker function then please cite:
* Koressaar T, Lepamets M, Kaplinski L, Raime K, Andreson R and Remm M.
Primer3_masker: integrating masking of template sequence with primer design software.
Bioinformatics 2018;34(11):1937-1938.
The paper is available at https://www.ncbi.nlm.nih.gov/pubmed/29360956

Source code available at https://github.com/primer3-org/primer3.

4. FAIR USE OF PRIMER3
The development of Primer3 is promoted by a small group of enthusiastic scientists mainly in their free time.They do not gain any financial profit with Primer3.

There are two groups of Primer3 users: end users, who run Primer3 to pick their primers and programmers, who use Primer3 in their scripts or software packages. We encourage both to use Primer3.

If you are an end user, we request but do not require that use of this software be cited in publications as listed above under CITING PRIMER3.

If you are a programmer, you will see that Primer3 is now distributed under the GNU General Public License, version 2 or (at your option) any later version of the License (GPL2). As we understand it, if you include parts of the Primer3 source code in your source code or link to Primer3 binary libraries in your executable, you have to release your software also under GPL2. If you only call Primer3 from your software and interpret its output, you can use any license you want for your software. If you modify Primer3 and then release your modified software, you have to release your modifications in source code under GPL2 as well.

We chose GPL2 because we wanted Primer3 to evolve and for the improvements to find their way back into the main distribution. If you are programming a new web interface which runs Primer3, please include in the about page of the tool the sentence "<your software name> uses Primer3 version ...". Please consider releasing your software under GPL2 as well, especially if you do not want to maintain it in the future.

There is no need to ask us for permission to include Primer3 in your tools.

5. "SEQUENCE" INPUT TAGS
"Sequence" input tags start with SEQUENCE_... and describe a particular input sequence to Primer3. They are reset after every Boulder record. Errors in "Sequence" input tags invalidate the current record, but Primer3 will continue to process additional records.

SEQUENCE_EXCLUDED_REGION	SEQUENCE_INCLUDED_REGION	SEQUENCE_PRIMER_REVCOMP
SEQUENCE_FORCE_LEFT_END	SEQUENCE_INTERNAL_EXCLUDED_REGION	SEQUENCE_QUALITY
SEQUENCE_FORCE_LEFT_START	SEQUENCE_INTERNAL_OLIGO	SEQUENCE_START_CODON_POSITION
SEQUENCE_FORCE_RIGHT_END	SEQUENCE_OVERLAP_JUNCTION_LIST	SEQUENCE_TARGET
SEQUENCE_FORCE_RIGHT_START	SEQUENCE_PRIMER	SEQUENCE_TEMPLATE
SEQUENCE_ID	SEQUENCE_PRIMER_PAIR_OK_REGION_LIST
SEQUENCE_ID (string; default empty)
Short description of the sequence. It is used as an identifier that is reproduced in the output to enable users to identify the source of the chosen primers.

This tag must be present if P3_FILE_FLAG is non-zero.

SEQUENCE_TEMPLATE (nucleotide sequence; default empty)
The sequence from which to choose primers. The sequence must be presented 5' -> 3' (i.e, in the normal way). In general, the bases may be upper or lower case, but lower case letters are treated specially if PRIMER_LOWERCASE_MASKING is set. The entire sequence MUST be all on a single line. (In other words, the sequence cannot span several lines.)

SEQUENCE_INCLUDED_REGION (interval list; default empty)
A sub-region of the given sequence in which to pick primers. For example, often the first dozen or so bases of a sequence are vector, and should be excluded from consideration. The value for this parameter has the form

<start>,<length>
where <start> is the index of the first base to consider, and <length> is the number of subsequent bases in the primer-picking region.

SEQUENCE_TARGET (interval list; default empty)
If one or more targets is specified then a legal primer pair must flank at least one of them. A target might be a simple sequence repeat site (for example a CA repeat) or a single-base-pair polymorphism, or an exon for resequencing. The value should be a space-separated list of

<start>,<length>
pairs where <start> is the index of the first base of a target, and <length> is its length.

See also PRIMER_INSIDE_PENALTY, PRIMER_OUTSIDE_PENALTY. Has a different meaning when PRIMER_TASK=pick_sequencing_primers. See PRIMER_TASK for more information.
SEQUENCE_EXCLUDED_REGION (interval list; default empty)
Primers and oligos may not overlap any region specified in this tag. The associated value must be a space-separated list of

<start>,<length>
pairs where <start> is the index of the first base of the excluded region, and <length> is its length. This tag is useful for tasks such as excluding regions of low sequence quality or for excluding regions containing repetitive elements such as ALUs or LINEs.

SEQUENCE_PRIMER_PAIR_OK_REGION_LIST (semicolon separated list of integer quadruples; default empty)
This tag allows detailed specification of possible locations of left and right primers in primer pairs.

The associated value must be a semicolon-separated list of

<left_start>,<left_length>,<right_start>,<right_length>
quadruples. The left primer must be in the region specified by <left_start>,<left_length> and the right primer must be in the region specified by <right_start>,<right_length>. <left_start> and <left_length> specify the location of the left primer in terms of the index of the first base in the region and the length of the region. <right_start> and <right_length> specify the location of the right primer in analogous fashion. As seen in the example below, if no integers are specified for a region then the location of the corresponding primer is not constrained.

Example:

SEQUENCE_PRIMER_PAIR_OK_REGION_LIST=100,50,300,50 ; 900,60,, ; ,,930,100

Specifies that there are three choices:

Left primer in the 50 bp region starting at position 100 AND right primer in the 50 bp region starting at position 300

OR

Left primer in the 60 bp region starting at position 900 (and right primer anywhere)

OR

Right primer in the 100 bp region starting at position 930 (and left primer anywhere)

SEQUENCE_OVERLAP_JUNCTION_LIST (space separated integers; default empty)
If this list is not empty, then the forward OR the reverse primer must overlap one of these junction points by at least PRIMER_MIN_3_PRIME_OVERLAP_OF_JUNCTION nucleotides at the 3' end and at least PRIMER_MIN_5_PRIME_OVERLAP_OF_JUNCTION nucleotides at the 5' end.

In more detail: The junction associated with a given position is the space immediately to the right of that position in the template sequence on the strand given as input.

For example:


SEQUENCE_OVERLAP_JUNCTION_LIST=20
# 1-based indexes
PRIMER_MIN_3_PRIME_OVERLAP_OF_JUNCTION=4
template: atcataggccatgcctgagc^gctacgact
          ok           ...gagc^gcta-3'  (left primer)
          not ok       ...gagc^gct-3'   (left primer)
          ok           3'-ctcg^cgat...  (right pimer)
          not ok        3'-tcg^cgat...  (right primer)
PRIMER_MIN_5_PRIME_OVERLAP_OF_JUNCTION=5
         ok           5'-tgagc^gccg...  (left primer)
         not ok        5'-gagc^gccg...  (left primer)
         ok           ...tgagc^gctac-5' (right primer)
         not ok       ...tgagc^gcta-5'  (right primer)

SEQUENCE_INTERNAL_EXCLUDED_REGION (interval list; default empty)
Middle oligos may not overlap any region specified by this tag. The associated value must be a space-separated list of

<start>,<length>
pairs, where <start> is the index of the first base of an excluded region, and <length> is its length. Often one would make Target regions excluded regions for internal oligos.

SEQUENCE_PRIMER (nucleotide sequence; default empty)
The sequence of a left primer to check and around which to design right primers and optional internal oligos. Must be a substring of SEQUENCE_TEMPLATE.

SEQUENCE_INTERNAL_OLIGO (nucleotide sequence; default empty)
The sequence of an internal oligo to check and around which to design left and right primers. Must be a substring of SEQUENCE_TEMPLATE.

SEQUENCE_PRIMER_REVCOMP (nucleotide sequence; default empty)
The sequence of a right primer to check and around which to design left primers and optional internal oligos. Must be a substring of the reverse strand of SEQUENCE_TEMPLATE.

SEQUENCE_START_CODON_POSITION (int; default -2000000)
This parameter should be considered EXPERIMENTAL at this point. Please check the output carefully; some erroneous inputs might cause an error in Primer3.

Index of the first base of a start codon. This parameter allows Primer3 to select primer pairs to create in-frame amplicons e.g. to create a template for a fusion protein. Primer3 will attempt to select an in-frame left primer, ideally starting at or to the left of the start codon, or to the right if necessary. Negative values of this parameter are legal if the actual start codon is to the left of available sequence. If this parameter is non-negative Primer3 signals an error if the codon at the position specified by this parameter is not an ATG. A value less than or equal to -10^6 indicates that Primer3 should ignore this parameter.

Primer3 selects the position of the right primer by scanning right from the left primer for a stop codon. Ideally the right primer will end at or after the stop codon.

SEQUENCE_QUALITY (space separated integers; default empty)
A list of space separated integers. There must be exactly one integer for each base in SEQUENCE_TEMPLATE if this argument is non-empty. For example, for the sequence ANNTTCA... SEQUENCE_QUALITY might be 45 10 0 50 30 34 50 67 .... High numbers indicate high confidence in the base called at that position and low numbers indicate low confidence in the base call at that position. This parameter is only relevant if you are using a base calling program that provides quality information (for example phred).

SEQUENCE_FORCE_LEFT_START (int; default -1000000)
Forces the 5' end of the left primer to be at the indicated position. Primers are also picked if they violate certain constraints. The default value indicates that the start of the left primer can be anywhere.

SEQUENCE_FORCE_LEFT_END (int; default -1000000)
Forces the 3' end of the left primer to be at the indicated position. Primers are also picked if they violate certain constraints. The default value indicates that the end of the left primer can be anywhere.

SEQUENCE_FORCE_RIGHT_START (int; default -1000000)
Forces the 5' end of the right primer to be at the indicated position. Primers are also picked if they violate certain constraints. The default value indicates that the start of the right primer can be anywhere.

SEQUENCE_FORCE_RIGHT_END (int; default -1000000)
Forces the 3' end of the right primer to be at the indicated position. Primers are also picked if they violate certain constraints. The default value indicates that the end of the right primer can be anywhere.

6. "GLOBAL" INPUT TAGS
"Global" input tags start with PRIMER_... and describe the general parameters that Primer3 should use in its searches. The values of these tags persist between input Boulder records until or unless they are explicitly reset. Errors in "Global" input tags are fatal because they invalidate the basic conditions under which primers are being picked.

Because the laboratory detection step using internal oligos is independent of the PCR amplification procedure, internal oligo tags have defaults that are independent of the parameters that govern the selection of PCR primers. For example, the melting temperature of an oligo used for hybridization might be considerably lower than that used as a PCR primer.

PRIMER_DNA_CONC	PRIMER_MASK_KMERLIST_PATH	PRIMER_PAIR_WT_PRODUCT_SIZE_LT
PRIMER_DNTP_CONC	PRIMER_MASK_KMERLIST_PREFIX	PRIMER_PAIR_WT_PRODUCT_TM_GT
PRIMER_EXPLAIN_FLAG	PRIMER_MASK_TEMPLATE	PRIMER_PAIR_WT_PRODUCT_TM_LT
PRIMER_FIRST_BASE_INDEX	PRIMER_MAX_END_GC	PRIMER_PAIR_WT_PR_PENALTY
PRIMER_GC_CLAMP	PRIMER_MAX_END_STABILITY	PRIMER_PAIR_WT_TEMPLATE_MISPRIMING
PRIMER_INSIDE_PENALTY	PRIMER_MAX_GC	PRIMER_PAIR_WT_TEMPLATE_MISPRIMING_TH
PRIMER_INTERNAL_DNA_CONC	PRIMER_MAX_HAIRPIN_TH	PRIMER_PICK_ANYWAY
PRIMER_INTERNAL_DNTP_CONC	PRIMER_MAX_LIBRARY_MISPRIMING	PRIMER_PICK_INTERNAL_OLIGO
PRIMER_INTERNAL_MAX_GC	PRIMER_MAX_NS_ACCEPTED	PRIMER_PICK_LEFT_PRIMER
PRIMER_INTERNAL_MAX_HAIRPIN_TH	PRIMER_MAX_POLY_X	PRIMER_PICK_RIGHT_PRIMER
PRIMER_INTERNAL_MAX_LIBRARY_MISHYB	PRIMER_MAX_SELF_ANY	PRIMER_PRODUCT_MAX_TM
PRIMER_INTERNAL_MAX_NS_ACCEPTED	PRIMER_MAX_SELF_ANY_TH	PRIMER_PRODUCT_MIN_TM
PRIMER_INTERNAL_MAX_POLY_X	PRIMER_MAX_SELF_END	PRIMER_PRODUCT_OPT_SIZE
PRIMER_INTERNAL_MAX_SELF_ANY	PRIMER_MAX_SELF_END_TH	PRIMER_PRODUCT_OPT_TM
PRIMER_INTERNAL_MAX_SELF_ANY_TH	PRIMER_MAX_SIZE	PRIMER_PRODUCT_SIZE_RANGE
PRIMER_INTERNAL_MAX_SELF_END	PRIMER_MAX_TEMPLATE_MISPRIMING	PRIMER_QUALITY_RANGE_MAX
PRIMER_INTERNAL_MAX_SELF_END_TH	PRIMER_MAX_TEMPLATE_MISPRIMING_TH	PRIMER_QUALITY_RANGE_MIN
PRIMER_INTERNAL_MAX_SIZE	PRIMER_MAX_TM	PRIMER_SALT_CORRECTIONS
PRIMER_INTERNAL_MAX_TM	PRIMER_MIN_3_PRIME_OVERLAP_OF_JUNCTION	PRIMER_SALT_DIVALENT
PRIMER_INTERNAL_MIN_GC	PRIMER_MIN_5_PRIME_OVERLAP_OF_JUNCTION	PRIMER_SALT_MONOVALENT
PRIMER_INTERNAL_MIN_QUALITY	PRIMER_MIN_END_QUALITY	PRIMER_SECONDARY_STRUCTURE_ALIGNMENT
PRIMER_INTERNAL_MIN_SIZE	PRIMER_MIN_GC	PRIMER_SEQUENCING_ACCURACY
PRIMER_INTERNAL_MIN_TM	PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE	PRIMER_SEQUENCING_INTERVAL
PRIMER_INTERNAL_MISHYB_LIBRARY	PRIMER_MIN_QUALITY	PRIMER_SEQUENCING_LEAD
PRIMER_INTERNAL_MUST_MATCH_FIVE_PRIME	PRIMER_MIN_RIGHT_THREE_PRIME_DISTANCE	PRIMER_SEQUENCING_SPACING
PRIMER_INTERNAL_MUST_MATCH_THREE_PRIME	PRIMER_MIN_SIZE	PRIMER_TASK
PRIMER_INTERNAL_OPT_GC_PERCENT	PRIMER_MIN_THREE_PRIME_DISTANCE	PRIMER_THERMODYNAMIC_OLIGO_ALIGNMENT
PRIMER_INTERNAL_OPT_SIZE	PRIMER_MIN_TM	PRIMER_THERMODYNAMIC_PARAMETERS_PATH
PRIMER_INTERNAL_OPT_TM	PRIMER_MISPRIMING_LIBRARY	PRIMER_THERMODYNAMIC_TEMPLATE_ALIGNMENT
PRIMER_INTERNAL_SALT_DIVALENT	PRIMER_MUST_MATCH_FIVE_PRIME	PRIMER_TM_FORMULA
PRIMER_INTERNAL_SALT_MONOVALENT	PRIMER_MUST_MATCH_THREE_PRIME	PRIMER_WT_END_QUAL
PRIMER_INTERNAL_WT_END_QUAL	PRIMER_NUM_RETURN	PRIMER_WT_END_STABILITY
PRIMER_INTERNAL_WT_GC_PERCENT_GT	PRIMER_OPT_GC_PERCENT	PRIMER_WT_GC_PERCENT_GT
PRIMER_INTERNAL_WT_GC_PERCENT_LT	PRIMER_OPT_SIZE	PRIMER_WT_GC_PERCENT_LT
PRIMER_INTERNAL_WT_HAIRPIN_TH	PRIMER_OPT_TM	PRIMER_WT_HAIRPIN_TH
PRIMER_INTERNAL_WT_LIBRARY_MISHYB	PRIMER_OUTSIDE_PENALTY	PRIMER_WT_LIBRARY_MISPRIMING
PRIMER_INTERNAL_WT_NUM_NS	PRIMER_PAIR_MAX_COMPL_ANY	PRIMER_WT_MASK_FAILURE_RATE
PRIMER_INTERNAL_WT_SELF_ANY	PRIMER_PAIR_MAX_COMPL_ANY_TH	PRIMER_WT_NUM_NS
PRIMER_INTERNAL_WT_SELF_ANY_TH	PRIMER_PAIR_MAX_COMPL_END	PRIMER_WT_POS_PENALTY
PRIMER_INTERNAL_WT_SELF_END	PRIMER_PAIR_MAX_COMPL_END_TH	PRIMER_WT_SELF_ANY
PRIMER_INTERNAL_WT_SELF_END_TH	PRIMER_PAIR_MAX_DIFF_TM	PRIMER_WT_SELF_ANY_TH
PRIMER_INTERNAL_WT_SEQ_QUAL	PRIMER_PAIR_MAX_LIBRARY_MISPRIMING	PRIMER_WT_SELF_END
PRIMER_INTERNAL_WT_SIZE_GT	PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING	PRIMER_WT_SELF_END_TH
PRIMER_INTERNAL_WT_SIZE_LT	PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING_TH	PRIMER_WT_SEQ_QUAL
PRIMER_INTERNAL_WT_TM_GT	PRIMER_PAIR_WT_COMPL_ANY	PRIMER_WT_SIZE_GT
PRIMER_INTERNAL_WT_TM_LT	PRIMER_PAIR_WT_COMPL_ANY_TH	PRIMER_WT_SIZE_LT
PRIMER_LIBERAL_BASE	PRIMER_PAIR_WT_COMPL_END	PRIMER_WT_TEMPLATE_MISPRIMING
PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS	PRIMER_PAIR_WT_COMPL_END_TH	PRIMER_WT_TEMPLATE_MISPRIMING_TH
PRIMER_LOWERCASE_MASKING	PRIMER_PAIR_WT_DIFF_TM	PRIMER_WT_TM_GT
PRIMER_MASK_3P_DIRECTION	PRIMER_PAIR_WT_IO_PENALTY	PRIMER_WT_TM_LT
PRIMER_MASK_5P_DIRECTION	PRIMER_PAIR_WT_LIBRARY_MISPRIMING
PRIMER_MASK_FAILURE_RATE	PRIMER_PAIR_WT_PRODUCT_SIZE_GT
PRIMER_TASK (string; default generic)
This tag tells Primer3 what task to perform. Legal values are:

generic

Design a primer pair (the classic Primer3 task) if the PRIMER_PICK_LEFT_PRIMER=1, and PRIMER_PICK_RIGHT_PRIMER=1. In addition, pick an internal hybridization oligo if PRIMER_PICK_INTERNAL_OLIGO=1.

NOTE: If PRIMER_PICK_LEFT_PRIMER=1, PRIMER_PICK_RIGHT_PRIMER=0 and PRIMER_PICK_INTERNAL_OLIGO=1, then behaves similarly to PRIMER_TASK=pick_primer_list.

pick_detection_primers

Deprecated alias for PRIMER_TASK=generic

check_primers

Primer3 only checks the primers provided in SEQUENCE_PRIMER, SEQUENCE_INTERNAL_OLIGO and SEQUENCE_PRIMER_REVCOMP. It is the only task that does not require a sequence. However, if SEQUENCE_TEMPLATE is provided, it is used.

pick_primer_list

Pick all primers in SEQUENCE_TEMPLATE (possibly limited by SEQUENCE_INCLUDED_REGION, SEQUENCE_EXCLUDED_REGION, SEQUENCE_PRIMER_PAIR_OK_REGION_LIST, etc.). Returns the primers sorted by quality starting with the best primers. If PRIMER_PICK_LEFT_PRIMER and PRIMER_PICK_RIGHT_PRIMER is selected Primer3 does not to pick primer pairs but generates independent lists of left primers, right primers, and, if requested, internal oligos.

pick_sequencing_primers

Pick primers suited to sequence a region. SEQUENCE_TARGET can be used to indicate several targets. The position of each primer is calculated for optimal sequencing results.

pick_cloning_primers

Pick primers suited to clone a gene were the start nucleotide and the end nucleotide of the PCR fragment must be fixed, for example to clone an ORF. SEQUENCE_INCLUDED_REGION must be used to indicate the first and the last nucleotide. Due to these limitations Primer3 can only vary the length of the primers. Set PRIMER_PICK_ANYWAY=1 to obtain primers even if they violate specific constraints.

pick_discriminative_primers

Pick primers suited to select primers which bind with their end at a specific position. This can be used to force the end of a primer to a polymorphic site, with the goal of discriminating between sequence variants. SEQUENCE_TARGET must be used to provide a single target indicating the last nucleotide of the left (nucleotide before the first nucleotide of the target) and the right primer (nucleotide following the target). The primers border the SEQUENCE_TARGET. Due to these limitations Primer3 can only vary the length of the primers. Set PRIMER_PICK_ANYWAY=1 to obtain primers even if they violate specific constraints.

pick_pcr_primers

Deprecated shortcut for the following settings:
PRIMER_TASK=generic
PRIMER_PICK_LEFT_PRIMER=1
PRIMER_PICK_INTERNAL_OLIGO=0
PRIMER_PICK_RIGHT_PRIMER=1

WARNING: this task changes the values of PRIMER_PICK_LEFT_PRIMER, PRIMER_PICK_INTERNAL_OLIGO, and PRIMER_PICK_RIGHT_PRIMER in a way that is not obvious by looking at the input.

pick_pcr_primers_and_hyb_probe

Deprecated shortcut for the following settings:
PRIMER_TASK=generic
PRIMER_PICK_LEFT_PRIMER=1
PRIMER_PICK_INTERNAL_OLIGO=1
PRIMER_PICK_RIGHT_PRIMER=1

WARNING: this task changes the values of PRIMER_PICK_LEFT_PRIMER, PRIMER_PICK_INTERNAL_OLIGO, and PRIMER_PICK_RIGHT_PRIMER in a way that is not obvious by looking at the input.

pick_left_only

Deprecated shortcut for the following settings:
PRIMER_TASK=generic
PRIMER_PICK_LEFT_PRIMER=1
PRIMER_PICK_INTERNAL_OLIGO=0
PRIMER_PICK_RIGHT_PRIMER=0

WARNING: this task changes the values of PRIMER_PICK_LEFT_PRIMER, PRIMER_PICK_INTERNAL_OLIGO, and PRIMER_PICK_RIGHT_PRIMER in a way that is not obvious by looking at the input.

pick_right_only

Deprecated shortcut for the following settings:
PRIMER_TASK=generic
PRIMER_PICK_LEFT_PRIMER=0
PRIMER_PICK_INTERNAL_OLIGO=0
PRIMER_PICK_RIGHT_PRIMER=1

WARNING: this task changes the values of PRIMER_PICK_LEFT_PRIMER, PRIMER_PICK_INTERNAL_OLIGO, and PRIMER_PICK_RIGHT_PRIMER in a way that is not obvious by looking at the input.

pick_hyb_probe_only

Deprecated shortcut for the following settings:
PRIMER_TASK=generic
PRIMER_PICK_LEFT_PRIMER=0
PRIMER_PICK_INTERNAL_OLIGO=1
PRIMER_PICK_RIGHT_PRIMER=0

WARNING: this task changes the values of PRIMER_PICK_LEFT_PRIMER, PRIMER_PICK_INTERNAL_OLIGO, and PRIMER_PICK_RIGHT_PRIMER in a way that is not obvious by looking at the input.
PRIMER_PICK_LEFT_PRIMER (boolean; default 1)
If the associated value = 1 (non-0), then Primer3 will attempt to pick left primers.

PRIMER_PICK_INTERNAL_OLIGO (boolean; default 0)
If the associated value = 1 (non-0), then Primer3 will attempt to pick an internal oligo (hybridization probe to detect the PCR product).

PRIMER_PICK_RIGHT_PRIMER (boolean; default 1)
If the associated value = 1 (non-0), then Primer3 will attempt to pick a right primer.

PRIMER_NUM_RETURN (int; default 5)
The maximum number of primer (pairs) to return. Primer pairs returned are sorted by their "quality", in other words by the value of the objective function (where a lower number indicates a better primer pair). Caution: setting this parameter to a large value will increase running time.

PRIMER_MIN_3_PRIME_OVERLAP_OF_JUNCTION (int; default 4)
The 3' end of the left OR the right primer must overlap one of the junctions in SEQUENCE_OVERLAP_JUNCTION_LIST by this amount. See details in SEQUENCE_OVERLAP_JUNCTION_LIST.

PRIMER_MIN_5_PRIME_OVERLAP_OF_JUNCTION (int; default 7)
The 5' end of the left OR the right primer must overlap one of the junctions in SEQUENCE_OVERLAP_JUNCTION_LIST by this amount. See details in SEQUENCE_OVERLAP_JUNCTION_LIST.

PRIMER_MUST_MATCH_FIVE_PRIME (ambiguous nucleotide sequence; default empty)
Discards all primers which do not match this match sequence at the 5' end. (New in v. 2.3.6, added by A. Untergasser.)

The match sequence must be 5 nucletides long and can contain the following letters:

    N   Any nucleotide
    A   Adenine
    G   Guanine
    C   Cytosine
    T   Thymine
    R   Purine (A or G)
    Y   Pyrimidine (C or T)
    W   Weak (A or T)
    S   Strong (G or C)
    M   Amino (A or C)
    K   Keto (G or T)
    B   Not A (G or C or T)
    H   Not G (A or C or T)
    D   Not C (A or G or T)
    V   Not T (A or G or C)
Any primer which will not match the entire match sequence at th 5' end will be discarded and not evaluated. Setting strict requirements here will result in low quality primers due to the high numbers of primers discarded at this step.

Example 1:
PRIMER_MUST_MATCH_FIVE_PRIME=tgnnn

Could result in the following matching:

    tgcatgattggatacgtttga
    |||||
    tgnnn
 -> This primer would be used.
    attcgattctccccggtatc
      |||
    tgnnn
 -> This primer would be discarded.

Example 2:
PRIMER_MUST_MATCH_FIVE_PRIME=hnnnn

Could result in the following matching:

    tgcatgattggatacgtttga
    |||||
    hnnnn
 -> This primer would be used.
    ggctgatgaaggaaagcaag
     ||||
    hnnnn
 -> This primer would be discarded.

This parameter would force all primers selected by Primer3 to not have guanosine at the 5' end of any primer which could be useful to avoid quenching of flourochromes.

PRIMER_INTERNAL_MUST_MATCH_FIVE_PRIME (ambiguous nucleotide sequence; default empty)
Equivalent parameter of PRIMER_MUST_MATCH_FIVE_PRIME for the internal oligo.

PRIMER_MUST_MATCH_THREE_PRIME (ambiguous nucleotide sequence; default empty)
Discards all primers which do not match this match sequence at the 3' end. Similar parameter to PRIMER_MUST_MATCH_FIVE_PRIME, but limits the 3' end. (New in v. 2.3.6, added by A. Untergasser.)

The match sequence must be 5 nucletides long and can contain the following letters:

    N   Any nucleotide
    A   Adenine
    G   Guanine
    C   Cytosine
    T   Thymine
    R   Purine (A or G)
    Y   Pyrimidine (C or T)
    W   Weak (A or T)
    S   Strong (G or C)
    M   Amino (A or C)
    K   Keto (G or T)
    B   Not A (G or C or T)
    H   Not G (A or C or T)
    D   Not C (A or G or T)
    V   Not T (A or G or C)
Any primer which will not match the entire match sequence at th 3' end will be discarded and not evaluated. Setting strict requirements here will result in low quality primers due to the high numbers of primers discarded at this step.

Example 1:
PRIMER_MUST_MATCH_FIVE_PRIME=nnnga

Could result in the following matching:

    tgcatgattggatacgtttga
                    |||||
                    nnnga
 -> This primer would be used.
    attcgattctccccggtatc
                   |||
                   nnnga
 -> This primer would be discarded.
PRIMER_INTERNAL_MUST_MATCH_THREE_PRIME (ambiguous nucleotide sequence; default empty)
Equivalent parameter of PRIMER_MUST_MATCH_THREE_PRIME for the internal oligo.

PRIMER_PRODUCT_SIZE_RANGE (size range list; default 100-300)
The associated values specify the lengths of the product that the user wants the primers to create, and is a space separated list of elements of the form

<x>-<y>
where an <x>-<y> pair is a legal range of lengths for the product. For example, if one wants PCR products to be between 100 to 150 bases (inclusive) then one would set this parameter to 100-150. If one desires PCR products in either the range from 100 to 150 bases or in the range from 200 to 250 bases then one would set this parameter to 100-150 200-250.

Primer3 favors product-size ranges to the left side of the parameter string. Primer3 will return legal primers pairs in the first range regardless the value of the objective function for pairs in subsequent ranges. Only if there are an insufficient number of primers in the first range will Primer3 return primers in a subsequent range.

For those with primarily a computational background, the PCR product size is the size (in base pairs) of the DNA fragment that would be produced by the PCR reaction on the given sequence template. This would, of course, include the primers themselves.

PRIMER_PRODUCT_OPT_SIZE (int; default 0)
The optimum size for the PCR product. 0 indicates that there is no optimum product size. This parameter influences primer pair selection only if PRIMER_PAIR_WT_PRODUCT_SIZE_GT or PRIMER_PAIR_WT_PRODUCT_SIZE_LT is non-0.
A non-0 value for this parameter will likely increase calculation time, so set this only if a product size near a specific value is truly important.

PRIMER_PAIR_WT_PRODUCT_SIZE_LT (float; default 0.0)
Penalty weight for products shorter than PRIMER_PRODUCT_OPT_SIZE.

PRIMER_PAIR_WT_PRODUCT_SIZE_GT (float; default 0.0)
Penalty weight for products longer than PRIMER_PRODUCT_OPT_SIZE.

PRIMER_MIN_SIZE (int; default 18)
Minimum acceptable length of a primer. Must be greater than 0 and less than or equal to PRIMER_MAX_SIZE.

PRIMER_INTERNAL_MIN_SIZE (int; default 18)
Equivalent parameter of PRIMER_MIN_SIZE for the internal oligo.

PRIMER_OPT_SIZE (int; default 20)
Optimum length (in bases) of a primer. Primer3 will attempt to pick primers close to this length.

PRIMER_INTERNAL_OPT_SIZE (int; default 20)
Equivalent parameter of PRIMER_OPT_SIZE for the internal oligo.

PRIMER_MAX_SIZE (int; default 27)
Maximum acceptable length (in bases) of a primer. Currently this parameter cannot be larger than 35. This limit is governed by maximum oligo size for which Primer3's melting-temperature is valid.

PRIMER_INTERNAL_MAX_SIZE (int; default 27)
Equivalent parameter of PRIMER_MAX_SIZE for the internal oligo.

PRIMER_WT_SIZE_LT (float; default 1.0)
Penalty weight for primers shorter than PRIMER_OPT_SIZE.

PRIMER_INTERNAL_WT_SIZE_LT (float; default 1.0)
Equivalent parameter of PRIMER_WT_SIZE_LT for the internal oligo.

PRIMER_WT_SIZE_GT (float; default 1.0)
Penalty weight for primers longer than PRIMER_OPT_SIZE.

PRIMER_INTERNAL_WT_SIZE_GT (float; default 1.0)
Equivalent parameter of PRIMER_INTERNAL_WT_SIZE_GT for the internal oligo.

PRIMER_MIN_GC (float; default 20.0)
Minimum allowable percentage of Gs and Cs in any primer.

PRIMER_INTERNAL_MIN_GC (float; default 20.0)
Equivalent parameter of PRIMER_MIN_GC for the internal oligo.

PRIMER_OPT_GC_PERCENT (float; default 50.0)
Optimum GC percent. This parameter influences primer selection only if PRIMER_WT_GC_PERCENT_GT or PRIMER_WT_GC_PERCENT_LT are non-0.

PRIMER_INTERNAL_OPT_GC_PERCENT (float; default 50.0)
Equivalent parameter of PRIMER_OPT_GC_PERCENT for the internal oligo.

PRIMER_MAX_GC (float; default 80.0)
Maximum allowable percentage of Gs and Cs in any primer generated by Primer.

PRIMER_INTERNAL_MAX_GC (float; default 80.0)
Equivalent parameter of PRIMER_MAX_GC for the internal oligo.

PRIMER_WT_GC_PERCENT_LT (float; default 0.0)
Penalty weight for primers with GC percent lower than PRIMER_OPT_GC_PERCENT.

PRIMER_INTERNAL_WT_GC_PERCENT_LT (float; default 0.0)
Equivalent parameter of PRIMER_WT_GC_PERCENT_LT for the internal oligo.

PRIMER_WT_GC_PERCENT_GT (float; default 0.0)
Penalty weight for primers with GC percent higher than PRIMER_OPT_GC_PERCENT.

PRIMER_INTERNAL_WT_GC_PERCENT_GT (float; default 0.0)
Equivalent parameter of PRIMER_WT_GC_PERCENT_GT for the internal oligo.

PRIMER_GC_CLAMP (int; default 0)
Require the specified number of consecutive Gs and Cs at the 3' end of both the left and right primer. (This parameter has no effect on the internal oligo if one is requested.)

PRIMER_MAX_END_GC (int; default 5)
The maximum number of Gs or Cs allowed in the last five 3' bases of a left or right primer.

PRIMER_MIN_TM (float; default 57.0)
Minimum acceptable melting temperature (Celsius) for a primer oligo.

PRIMER_INTERNAL_MIN_TM (float; default 57.0)
Equivalent parameter of PRIMER_MIN_TM for the internal oligo.

PRIMER_OPT_TM (float; default 60.0)
Optimum melting temperature (Celsius) for a primer. Primer3 will try to pick primers with melting temperatures are close to this temperature. The oligo melting temperature formula used can be specified by user. Please see PRIMER_TM_FORMULA for more information.

PRIMER_INTERNAL_OPT_TM (float; default 60.0)
Equivalent parameter of PRIMER_OPT_TM for the internal oligo.

PRIMER_MAX_TM (float; default 63.0)
Maximum acceptable melting temperature (Celsius) for a primer oligo.

PRIMER_INTERNAL_MAX_TM (float; default 63.0)
Equivalent parameter of PRIMER_MAX_TM for the internal oligo.

PRIMER_PAIR_MAX_DIFF_TM (float; default 100.0)
Maximum acceptable (unsigned) difference between the melting temperatures of the left and right primers.

PRIMER_WT_TM_LT (float; default 1.0)
Penalty weight for primers with Tm lower than PRIMER_OPT_TM.

PRIMER_INTERNAL_WT_TM_LT (float; default 1.0)
Equivalent parameter of PRIMER_WT_TM_LT for the internal oligo.

PRIMER_WT_TM_GT (float; default 1.0)
Penalty weight for primers with Tm over PRIMER_OPT_TM.

PRIMER_INTERNAL_WT_TM_GT (float; default 1.0)
Equivalent parameter of PRIMER_WT_TM_GT for the internal oligo.

PRIMER_PAIR_WT_DIFF_TM (float; default 0.0)
Penalty weight for the TM difference between the left primer and the right primer.

PRIMER_PRODUCT_MIN_TM (float; default -1000000.0)
The minimum allowed melting temperature of the amplicon. Please see the documentation on PRIMER_PRODUCT_MAX_TM for details.

PRIMER_PRODUCT_OPT_TM (float; default 0.0)
The optimum melting temperature for the PCR product. 0 indicates that there is no optimum temperature.

PRIMER_PRODUCT_MAX_TM (float; default 1000000.0)
The maximum allowed melting temperature of the amplicon. Primer3 calculates product Tm calculated using the formula from Bolton and McCarthy, PNAS 84:1390 (1962) as presented in Sambrook, Fritsch and Maniatis, Molecular Cloning, p 11.46 (1989, CSHL Press).

   Tm = 81.5 + 16.6(log10([Na+])) + .41*(%GC) - 600/length
Where [Na+] is the molar sodium concentration, (%GC) is the percent of Gs and Cs in the sequence, and length is the length of the sequence.

A similar formula is used by the prime primer selection program in GCG (http://www.gcg.com), which instead uses 675.0 / length in the last term (after F. Baldino, Jr, M.-F. Chesselet, and M.E. Lewis, Methods in Enzymology 168:766 (1989) eqn (1) on page 766 without the mismatch and formamide terms). The formulas here and in Baldino et al. assume Na+ rather than K+. According to J.G. Wetmur, Critical Reviews in BioChem. and Mol. Bio. 26:227 (1991) 50 mM K+ should be equivalent in these formulae to .2 M Na+. Primer3 uses the same salt concentration value for calculating both the primer melting temperature and the oligo melting temperature. If you are planning to use the PCR product for hybridization later this behavior will not give you the Tm under hybridization conditions.

PRIMER_PAIR_WT_PRODUCT_TM_LT (float; default 0.0)
Penalty weight for products with a Tm lower than PRIMER_PRODUCT_OPT_TM.

PRIMER_PAIR_WT_PRODUCT_TM_GT (float; default 0.0)
Penalty weight for products with a Tm higher than PRIMER_PRODUCT_OPT_TM.

PRIMER_TM_FORMULA (int; default 1)
Specifies details of melting temperature calculation. (New in v. 1.1.0, added by Maido Remm and Triinu Koressaar.)

A value of 0 directs Primer3 to a backward compatible calculation (in other words, the only calculation available in previous version of Primer3).

This backward compatible calculation uses the table of thermodynamic parameters in the paper [Breslauer KJ, Frank R, Blöcker H and Marky LA (1986) "Predicting DNA duplex stability from the base sequence" Proc Natl Acad Sci 83:4746-50 http://dx.doi.org/10.1073/pnas.83.11.3746], and the method in the paper [Rychlik W, Spencer WJ and Rhoads RE (1990) "Optimization of the annealing temperature for DNA amplification in vitro", Nucleic Acids Res 18:6409-12 http://dx.doi.org/10.1093/nar/18.21.6409].

A value of 1 (*RECOMMENDED*) directs Primer3 to use the table of thermodynamic values and the method for melting temperature calculation suggested in the paper [SantaLucia JR (1998) "A unified view of polymer, dumbbell and oligonucleotide DNA nearest-neighbor thermodynamics", Proc Natl Acad Sci 95:1460-65 http://dx.doi.org/10.1073/pnas.95.4.1460].

Use tag PRIMER_SALT_CORRECTIONS, to specify the salt correction method for melting temperature calculation.

Example of calculating the melting temperature of an oligo if PRIMER_TM_FORMULA=1 and PRIMER_SALT_CORRECTIONS=1 recommended values):

primer=CGTGACGTGACGGACT

Using default salt and DNA concentrations we have

Tm = deltaH/(deltaS + R*ln(C/4))
where R is the gas constant (1.987 cal/K mol) and C is the DNA concentration.

deltaH(predicted) =
  = dH(CG) + dH(GT) + dH(TG) + .. + dH(CT) +
     + dH(init.w.term.GC) + dH(init.w.term.AT) =
  = -10.6 + (-8.4) + (-8.5) + .. + (-7.8) + 0.1 + 2.3  =
  = -128.8 kcal/mol
where 'init.w.term GC' and 'init.w.term AT' are two initiation parameters for duplex formation: 'initiation with terminal GC' and 'initiation with terminal AT'

deltaS(predicted) =
  = dS(CG) + dS(GT) + dS(TG) + .. + dS(CT) +
    + dS(init.w.term.GC) + dS(init.w.term.AT) =
  = -27.2 + (-22.4) + (-22.7) + .. + (-21.0) + (-2.8) + 4.1 =
  = -345.2 cal/k*mol
deltaS(salt corrected) =
  = deltaS(predicted) + 0.368*15(NN pairs)*ln(0.05M monovalent cations) =
  = -361.736
Tm = -128.800/(-361.736+1.987*ln((5*10^(-8))/4)) =
   = 323.704 K
Tm(C) = 323.704 - 273.15 = 50.554 C
PRIMER_SALT_MONOVALENT (float; default 50.0)
The millimolar (mM) concentration of monovalent salt cations (usually KCl) in the PCR. Primer3 uses this argument to calculate oligo and primer melting temperatures. Use tag PRIMER_SALT_DIVALENT and PRIMER_INTERNAL_SALT_DIVALENT to specify the concentrations of divalent cations (in which case you also should also set tag PRIMER_DNTP_CONC to a reasonable value).

PRIMER_INTERNAL_SALT_MONOVALENT (float; default 50.0)
Equivalent parameter of PRIMER_SALT_MONOVALENT for the internal oligo.

PRIMER_SALT_DIVALENT (float; default 1.5)
The millimolar concentration of divalent salt cations (usually MgCl^(2+)) in the PCR. (New in v. 1.1.0, added by Maido Remm and Triinu Koressaar)

Primer3 converts concentration of divalent cations to concentration of monovalent cations using formula suggested in the paper [Ahsen von N, Wittwer CT, Schutz E (2001) "Oligonucleotide Melting Temperatures under PCR Conditions: Nearest-Neighbor Corrections for Mg^(2+), Deoxynucleotide Triphosphate, and Dimethyl Sulfoxide Concentrations with Comparison to Alternative Empirical Formulas", Clinical Chemistry 47:1956-61 http://www.clinchem.org/cgi/content/full/47/11/1956].

[Monovalent cations] = [Monovalent cations] + 120*(([divalent cations] - [dNTP])^0.5)
In addition, if the specified concentration of dNTPs (PRIMER_DNTP_CONC) is larger than the concentration of divalent cations (PRIMER_SALT_DIVALENT) then the effect of the divalent cations is not considered. The concentration of dNTPs is considered in the formula above because of some magnesium is bound by the dNTP. The adjusted concentration of monovalent cations is used in the calculation of oligo/primer melting temperature, PCR product melting temperature, the stability of oligo dimers and secondary structures (when PRIMER_THERMODYNAMIC_OLIGO_ALIGNMENT is 1), and the stability of ectopic annealing of oligos to template (when PRIMER_THERMODYNAMIC_TEMPLATE_ALIGNMENT is 1). If PRIMER_SALT_DIVALENT > 0.0, be sure to set tag PRIMER_DNTP_CONC to specify the concentration of dNTPs.

PRIMER_INTERNAL_SALT_DIVALENT (float; default 0.0)
Equivalent parameter of PRIMER_SALT_DIVALENT for the internal oligo.

PRIMER_DNTP_CONC (float; default 0.6)
The millimolar concentration of the sum of all deoxyribonucleotide triphosphates. A reaction mix containing 0.2 mM ATP, 0.2 mM CTP, 0.2 mM GTP and 0.2 mM TTP would have a PRIMER_DNTP_CONC=0.8. This argument is considered for oligo and primer melting temperatures, for PCR product melting temperature, or for secondary structure calculations only if PRIMER_SALT_DIVALENT is > 0.0. See PRIMER_SALT_DIVALENT.

PRIMER_INTERNAL_DNTP_CONC (float; default 0.0)
Parameter for internal oligos analogous to PRIMER_DNTP_CONC.

PRIMER_SALT_CORRECTIONS (int; default 1)
Specifies the salt correction formula for the melting temperature calculation. (New in v. 1.1.0, added by Maido Remm and Triinu Koressaar)

A value of 0 directs Primer3 to use the the salt correction formula in the paper [Schildkraut, C, and Lifson, S (1965) "Dependence of the melting temperature of DNA on salt concentration", Biopolymers 3:195-208 (not available on-line)]. This was the formula used in older versions of Primer3.

A value of 1 (*RECOMMENDED*) directs Primer3 to use the salt correction formula in the paper [SantaLucia JR (1998) "A unified view of polymer, dumbbell and oligonucleotide DNA nearest-neighbor thermodynamics", Proc Natl Acad Sci 95:1460-65 http://dx.doi.org/10.1073/pnas.95.4.1460]

A value of 2 directs Primer3 to use the salt correction formula in the paper [Owczarzy, R., Moreira, B.G., You, Y., Behlke, M.A., and Walder, J.A. (2008). Predicting stability of DNA duplexes in solutions containing magnesium and monovalent cations. Biochemistry 47, 5336-5353 http://dx.doi.org/10.1021/bi702363u] following recommendations in the paper [Ahsen, v.N., Wittwer, C.T., and Schütz, E. (2010). Monovalent and divalent salt correction algorithms for Tm prediction-recommendations for Primer3 usage. Brief Bioinform 12, 514 http://dx.doi.org/10.1093/bib/bbq081].

For all values of PRIMER_SALT_CORRECTIONS, Primer3 also considers the values of the tags PRIMER_SALT_DIVALENT, PRIMER_INTERNAL_SALT_DIVALENT, PRIMER_DNTP_CONC, and PRIMER_INTERNAL_DNTP_CONC.

PRIMER_DNA_CONC (float; default 50.0)
A value to use as nanomolar (nM) concentration of each annealing oligo over the course the PCR. Primer3 uses this argument to esimate oligo melting temperatures. This parameter corresponds to 'c' in equation (ii) of the paper [SantaLucia (1998) A unified view of polymer, dumbbell, and oligonucleotide DNA nearest-neighbor thermodynamics. Proc Natl Acad Sci 95:1460-1465 http://www.pnas.org/content/95/4/1460.full.pdf+html], where a suitable value (for a lower initial concentration of template) is "empirically determined".

The default (50nM) works well with the standard protocol used at the Whitehead/MIT Center for Genome Research--0.5 microliters of 20 micromolar concentration for each primer in a 20 microliter reaction with 10 nanograms template, 0.025 units/microliter Taq polymerase in 0.1 mM each dNTP, 1.5mM MgCl2, 50mM KCl, 10mM Tris-HCL (pH 9.3) using 35 cycles with an annealing temperature of 56 degrees Celsius.

The value of this parameter is less than the actual concentration of oligos in the initial reaction mix because it is the concentration of annealing oligos, which in turn depends on the amount of template (including PCR product) in a given cycle. This concentration increases a great deal during a PCR; fortunately PCR seems quite robust for a variety of oligo melting temperatures.
See ADVICE FOR PICKING PRIMERS.

PRIMER_INTERNAL_DNA_CONC (float; default 50.0)
Equivalent parameter of PRIMER_DNA_CONC for the internal oligo.

PRIMER_THERMODYNAMIC_OLIGO_ALIGNMENT (boolean; default 1)
If the associated value = 1, then Primer3 will use thermodynamic models to calculate the the propensity of oligos to form hairpins and dimers.

PRIMER_THERMODYNAMIC_TEMPLATE_ALIGNMENT (boolean; default 0)
If the associated value = 1, then Primer3 will use thermodynamic models to calculate the the propensity of oligos to anneal to undesired sites in the template sequence.

PRIMER_SECONDARY_STRUCTURE_ALIGNMENT (boolean; default 0)
If the associated value = 1, then Primer3 will print out the calculated secondary structures, for example:

Dimers:
t: 7.8  dG: -1724  dH: -91400  dS: -289
  5' ACGCAAAGCACGCTCC-CGATC 3'
      ||   |||  |||   ||
3' CTAGCCC-TCGCACGAAACGCA 5'
Hairpins:
t: 36.4  dG: 42  dH: -22500  dS: -73
5' CGCAAAGCACGCT┐
            ||  │
        3' AGCCC┘
The tags PRIMER_LEFT_4_SELF_ANY_STUCT, PRIMER_LEFT_4_SELF_END_STUCT, PRIMER_LEFT_4_HAIRPIN_STUCT (these tags are also present for RIGHT and INTERNAL primers), PRIMER_PAIR_4_COMPL_ANY_STUCT and PRIMER_PAIR_4_COMPL_END_STUCT are only present if a secondary structure could be calculated.

As the string has to fit on one line, the newlines are indicated by the two characters '\' and 'n' and have to be replaced (regex: /\\n/\n/g). Hairpins use unicode characters for the turn. For html they have to be replaced (regex: /U\+25(\d\d)/&#x25$1;/g).

PRIMER_THERMODYNAMIC_PARAMETERS_PATH (string; default ./primer3_config)
This tag specifies the path to the directory that contains all the parameter files used by the thermodynamic approach. In Linux, there are two default locations that are tested if this tag is not defined: ./primer3_config/ and /opt/primer3_config/. For Windows, there is only one default location: .\primer3_config\.

PRIMER_MAX_SELF_ANY (decimal, 9999.99; default 8.00)
PRIMER_MAX_SELF_ANY describes the tendency of a primer to bind to itself (interfering with target sequence binding). It will score ANY binding occurring within the entire primer sequence.
It is the maximum allowable local alignment score when testing a single primer for (local) self-complementarity. Local self-complementarity is taken to predict the tendency of primers to anneal to each other without necessarily causing self-priming in the PCR. The scoring system gives 1.00 for complementary bases, -0.25 for a match of any base (or N) with an N, -1.00 for a mismatch, and -2.00 for a gap. Only single-base-pair gaps are allowed. For example, the alignment

   5' ATCGNA 3'
      || | |
   3' TA-CGT 5'
is allowed (and yields a score of 1.75), but the alignment
   5' ATCCGNA 3'
      ||  | |
   3' TA--CGT 5'
is not considered. Scores are non-negative, and a score of 0.00 indicates that there is no reasonable local alignment between two oligos.

PRIMER_MAX_SELF_ANY_TH (decimal, 9999,99; default 47.00)
The same as PRIMER_MAX_SELF_ANY but all calculations are based on thermodynamical approach. The melting temperature of the most stable structure is calculated. To calculate secondary structures nearest-neighbor parameters for perfect matches, single internal mismatches, terminal mismatches, dangling ends have been used. Also parameters for increments for length dependence of bulge and internal loops have been used. This parameter is calculated only if PRIMER_THERMODYNAMIC_OLIGO_ALIGNMENT=1. The default value is 10 degrees lower than the default value of PRIMER_MIN_TM. For example, the alignment width length 15nt

  5' ATTAGATAGAGCATC 3'
  3' TAATCTATCTCGTAG 5'
is allowed (and yields a melting temperature of 32.1493 width by default Primer3 parameters), but the alignment
     T        C
  5'  GCGGCCGC GCGC 3'
  3'  CGCCGGCG CGCG 5'
     A        A
is not considered (Tm=57.0997 and the length of oligo is 14nt). Thermodynamical parameters and methods for finding the most stable structure are described in following papers:

[SantaLucia JR (1998) "A unified view of polymer, dumbbell and oligonucleotide DNA nearest-neighbor thermodynamics", Proc Natl Acad Sci 95:1460-65 http://dx.doi.org/10.1073/pnas.95.4.1460]
[SantaLucia JR and Hicks D (2004) "The thermodynamics of DNA structural motifs", Annu Rev Biophys Biomol Struct 33:415-40 http://dx.doi.org/10.1146/annurev.biophys.32.110601.141800]
[Bommarito S, Peyret N and SantaLucia J Jr (2000) "Thermodynamic parameters for DNA sequences with dangling ends", Nucleic Acids Res 28(9):1929-34 http://dx.doi.org/10.1093/nar/28.9.1929]
[Peyret N, Seneviratne PA, Allawi HT, SantaLucia J Jr. (1999) "Nearest-neighbor thermodynamics and NMR of DNA sequences with internal A.A, C.C, G.G, and T.T mismatches", Biochemistry 38(12):3468-77 http://dx.doi.org/10.1021/bi9825091]
[Allawi HT and SantaLucia J Jr. (1998) "Nearest-Neighbor Thermodynamics of Internal A·C Mismatches in DNA: Sequence Dependence and pH Effects", Biochemistry 37(26):9435-44 http://dx.doi.org/10.1021/bi9803729
[Allawi HT and SantaLucia J Jr. (1998) "Thermodynamics of internal C.T mismatches in DNA." Nucleic Acids Res 26(11):2694-701http://dx.doi.org/10.1093/nar/26.11.2694]
[Allawi HT and SantaLucia J Jr. (1998) "Nearest neighbor thermodynamic parameters for internal G.A mismatches in DNA." Biochemistry 37(8):2170-9 http://dx.doi.org/10.1021/bi9724873]
[Allawi HT and SantaLucia J Jr. (1997) "Thermodynamics and NMR of internal G.T mismatches in DNA." Biochemistry 36(34):10581-94 http://dx.doi.org/10.1021/bi962590c]
[SantaLucia J Jr and Peyret N. (2001) "Method and system for predicting nucleic acid hybridization thermodynamics and computer-readable storage medium for use therein" World Intellectual Property Organization, WO 01/94611 http://www.wipo.int/pctdb/en/wo.jsp?wo=2001094611]

Predicting secondary structures can improve primer design by eliminating sequences with high possibility to form alternative secondary structures.

PRIMER_INTERNAL_MAX_SELF_ANY (decimal, 9999.99; default 12.00)
Equivalent parameter of PRIMER_MAX_SELF_ANY for the internal oligo.

PRIMER_INTERNAL_MAX_SELF_ANY_TH (decimal, 9999.99; default 47.00)
Equivalent parameter of PRIMER_MAX_SELF_ANY_TH for the internal oligo.

PRIMER_PAIR_MAX_COMPL_ANY (decimal, 9999.99; default 8.00)
PRIMER_PAIR_MAX_COMPL_ANY describes the tendency of the left primer to bind to the right primer. It is the maximum allowable local alignment score when testing for complementarity between left and right primers. It is similar to PRIMER_MAX_SELF_ANY.

PRIMER_PAIR_MAX_COMPL_ANY_TH (decimal, 9999.99; default 47.00)
PRIMER_PAIR_MAX_COMPL_ANY_TH describes the tendency of the left primer to bind to the right primer. It is similar to PRIMER_MAX_SELF_ANY_TH.

PRIMER_WT_SELF_ANY (float; default 0.0)
Penalty weight for the individual primer self binding value as in PRIMER_MAX_SELF_ANY.

PRIMER_WT_SELF_ANY_TH (float; default 0.0)
Penalty weight for the individual primer self binding value as in PRIMER_MAX_SELF_ANY_TH.

PRIMER_INTERNAL_WT_SELF_ANY (float; default 0.0)
Equivalent parameter of PRIMER_WT_SELF_ANY for the internal oligo.

PRIMER_INTERNAL_WT_SELF_ANY_TH (float; default 0.0)
Equivalent parameter of PRIMER_WT_SELF_ANY_TH for the internal oligo.

PRIMER_PAIR_WT_COMPL_ANY (float; default 0.0)
Penalty weight for the binding value of the primer pair as in PRIMER_MAX_SELF_ANY.

PRIMER_PAIR_WT_COMPL_ANY_TH (float; default 0.0)
Penalty weight for the binding value of the primer pair as in PRIMER_MAX_SELF_ANY_TH.

PRIMER_MAX_SELF_END (decimal, 9999.99; default 3.00)
PRIMER_MAX_SELF_END tries to bind the 3'-END to a identical primer and scores the best binding it can find. This is critical for primer quality because it allows primers use itself as a target and amplify a short piece (forming a primer-dimer). These primers are then unable to bind and amplify the target sequence.
PRIMER_MAX_SELF_END is the maximum allowable 3'-anchored global alignment score when testing a single primer for self-complementarity. The 3'-anchored global alignment score is taken to predict the likelihood of PCR-priming primer-dimers, for example

   5' ATGCCCTAGCTTCCGGATG 3'
                ||| |||||
             3' AAGTCCTACATTTAGCCTAGT 5'
or
   5` AGGCTATGGGCCTCGCGA 3'
                  ||||||
               3' AGCGCTCCGGGTATCGGA 5'
The scoring system is as for the Maximum Complementarity argument. In the examples above the scores are 7.00 and 6.00 respectively. Scores are non-negative, and a score of 0.00 indicates that there is no reasonable 3'-anchored global alignment between two oligos. In order to estimate 3'-anchored global alignments for candidate primers, Primer3 assumes that the sequence from which to choose primers is presented 5'->3'. It is nonsensical to provide a larger value for this parameter than for the Maximum (local) Complementarity parameter (PRIMER_MAX_SELF_ANY) because the score of a local alignment will always be at least as great as the score of a global alignment.

PRIMER_MAX_SELF_END_TH (decimal 9999.99; default 47.00)
Same as PRIMER_MAX_SELF_END but is based on thermodynamical approach - the stability of structure is analyzed. The value of tag is expressed as melting temperature. See PRIMER_MAX_SELF_ANY_TH for details.

PRIMER_INTERNAL_MAX_SELF_END (decimal 9999.99; default 12.00)
PRIMER_INTERNAL_MAX_SELF_END is meaningless when applied to internal oligos used for hybridization-based detection, since primer-dimer will not occur. We recommend that PRIMER_INTERNAL_MAX_SELF_END be set at least as high as PRIMER_INTERNAL_MAX_SELF_ANY.

PRIMER_INTERNAL_MAX_SELF_END_TH (decimal 9999.99; default 47.00)
Same as PRIMER_INTERNAL_MAX_SELF_END but for calculating the score (melting temperature of structure) thermodynamical approach is used.

PRIMER_PAIR_MAX_COMPL_END (decimal, 9999.99; default 3.00)
PRIMER_PAIR_MAX_COMPL_END tries to bind the 3'-END of the left primer to the right primer and scores the best binding it can find. It is similar to PRIMER_MAX_SELF_END.

PRIMER_PAIR_MAX_COMPL_END_TH (decimal, 9999.99; default 47.00)
Same as PRIMER_PAIR_MAX_COMPL_END but for calculating the score (melting temperature of structure) thermodynamical approach is used.

PRIMER_WT_SELF_END (float; default 0.0)
Penalty weight for the individual primer self binding value as in PRIMER_MAX_SELF_END.

PRIMER_WT_SELF_END_TH (float; default 0.0)
Penalty weight for the individual primer self binding value as in PRIMER_MAX_SELF_END_TH

PRIMER_INTERNAL_WT_SELF_END (float; default 0.0)
Equivalent parameter of PRIMER_WT_SELF_END for the internal oligo.

PRIMER_INTERNAL_WT_SELF_END_TH (float; default 0.0)
Equivalent parameter of PRIMER_WT_SELF_END_TH for the internal oligo.

PRIMER_PAIR_WT_COMPL_END (float; default 0.0)
Penalty weight for the binding value of the primer pair as in PRIMER_MAX_SELF_END.

PRIMER_PAIR_WT_COMPL_END_TH (float; default 0.0)
Penalty weight for the binding value of the primer pair as in PRIMER_MAX_SELF_END_TH.

PRIMER_MAX_HAIRPIN_TH (float; default 47.0)
This is the most stable monomer structure of internal oligo calculated by thermodynamic approach. The hairpin loops, bulge loops, internal loops, internal single mismatches, dangling ends, terminal mismatches have been considered. This parameter is calculated only if PRIMER_THERMODYNAMIC_OLIGO_ALIGNMENT=1. The default value is 10 degrees lower than the default value of PRIMER_MIN_TM. For example the structure:

      -///------\\\-
   5' ACGCTGTGCTGCGA 3'
with melting temperature 53.7263 (calculated according to by default values of Primer3) and
      //////----\\\\\\
   5' CCGCAGTAAGCTGCGG 3'
with melting temperature 71.0918 (calculated according to by default values of Primer3) For details about papers used for calculating hairpins see PRIMER_MAX_SELF_ANY_TH

PRIMER_INTERNAL_MAX_HAIRPIN_TH (float; default 47.0)
The most stable monomer structure of internal oligo calculated by thermodynamic approach. See PRIMER_MAX_HAIRPIN_TH for details.

PRIMER_WT_HAIRPIN_TH (float; default 0.0)
Penalty weight for the individual primer hairpin structure value as in PRIMER_MAX_HAIRPIN_TH.

PRIMER_INTERNAL_WT_HAIRPIN_TH (float; default 0.0)
Penalty weight for the most stable primer hairpin structure value as in PRIMER_INTERNAL_MAX_HAIRPIN_TH.

PRIMER_MAX_END_STABILITY (float, 999.9999; default 100.0)
The maximum stability for the last five 3' bases of a left or right primer. Bigger numbers mean more stable 3' ends. The value is the maximum delta G (kcal/mol) for duplex disruption for the five 3' bases as calculated using the nearest-neighbor parameter values specified by the option of PRIMER_TM_FORMULA

For example if the table of thermodynamic parameters suggested by SantaLucia 1998, DOI:10.1073/pnas.95.4.1460 is used the deltaG values for the most stable and for the most labile 5mer duplex are 6.86 kcal/mol (GCGCG) and 0.86 kcal/mol (TATAT) respectively.

If the table of thermodynamic parameters suggested by Breslauer et al. 1986, 10.1073/pnas.83.11.3746 is used the deltaG values for the most stable and for the most labile 5mer are 13.4 kcal/mol (GCGCG) and 4.6 kcal/mol (TATAC) respectively.

PRIMER_WT_END_STABILITY (float; default 0.0)
Penalty factor for the calculated maximum stability for the last five 3' bases of a left or right primer.

PRIMER_MAX_NS_ACCEPTED (int; default 0)
Maximum number of unknown bases (N) allowable in any primer.

PRIMER_INTERNAL_MAX_NS_ACCEPTED (int; default 0)
Equivalent parameter of PRIMER_MAX_NS_ACCEPTED for the internal oligo.

PRIMER_WT_NUM_NS (float; default 0.0)
Penalty weight for the number of Ns in the primer.

PRIMER_INTERNAL_WT_NUM_NS (float; default 0.0)
Equivalent parameter of PRIMER_WT_NUM_NS for the internal oligo.

PRIMER_MAX_POLY_X (int; default 5)
The maximum allowable length of a mononucleotide repeat, for example AAAAAA.

PRIMER_INTERNAL_MAX_POLY_X (int; default 5)
Equivalent parameter of PRIMER_MAX_POLY_X for the internal oligo.

PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE (int; default -1)
When returning multiple primer pairs, the minimum number of base pairs between the 3' ends of any two left primers.

Primers with 3' ends at positions e.g. 30 and 31 in the template sequence have a three-prime distance of 1.

In addition to positive values, the values -1 and 0 are acceptable and have special interpretations:

-1 indicates that a given left primer can appear in multiple primer pairs returned by Primer3. This is the default behavior.

0 indicates that a left primer is acceptable if it was not already used. In other words, two left primers are allowed to have the same 3' position provided their 5' positions differ.

For n > 0: A left primer is acceptable if:

NOT(3' end of left primer closer than n to the 3' end of a previously used left primer)

PRIMER_MIN_RIGHT_THREE_PRIME_DISTANCE (int; default -1)
Analogous to PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE, but for right primers.

PRIMER_MIN_THREE_PRIME_DISTANCE (int; default -1)
A "convenience" tag that simultaneously sets PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE and PRIMER_MIN_RIGHT_THREE_PRIME_DISTANCE

For example

PRIMER_MIN_THREE_PRIME_DISTANCE=3
is equivalent to
PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE=3
PRIMER_MIN_RIGHT_THREE_PRIME_DISTANCE=3
It is an error to specify both PRIMER_MIN_THREE_PRIME_DISTANCE and either PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE or PRIMER_MIN_RIGHT_THREE_PRIME_DISTANCE in the same input record.

PRIMER_PICK_ANYWAY (boolean; default 0)
If true use primer provided in SEQUENCE_PRIMER, SEQUENCE_PRIMER_REVCOMP, or SEQUENCE_INTERNAL_OLIGO even if it violates specific constraints.

PRIMER_LOWERCASE_MASKING (int; default 0)
This option allows for intelligent design of primers in sequence in which masked regions (for example repeat-masked regions) are lower-cased. (New in v. 1.1.0, added by Maido Remm and Triinu Koressaar)

A value of 1 directs Primer3 to reject primers overlapping lowercase a base exactly at the 3' end.

This property relies on the assumption that masked features (e.g. repeats) can partly overlap primer, but they cannot overlap the 3'-end of the primer. In other words, lowercase bases at other positions in the primer are accepted, assuming that the masked features do not influence the primer performance if they do not overlap the 3'-end of primer.

PRIMER_EXPLAIN_FLAG (boolean; default 0)
If this flag is 1 (non-0), produce PRIMER_LEFT_EXPLAIN, PRIMER_RIGHT_EXPLAIN, PRIMER_INTERNAL_EXPLAIN and/or PRIMER_PAIR_EXPLAIN output tags as appropriate. These output tags are intended to provide information on the number of oligos and primer pairs that Primer3 examined and counts of the number discarded for various reasons. If -format_output is set similar information is produced in the user-oriented output.

PRIMER_LIBERAL_BASE (boolean; default 0)
This parameter provides a quick-and-dirty way to get Primer3 to accept IUB / IUPAC codes for ambiguous bases (i.e. by changing all unrecognized bases to N). If you wish to include an ambiguous base in an oligo, you must set PRIMER_MAX_NS_ACCEPTED to a 1 (non-0) value.

Perhaps '-' and '* ' should be squeezed out rather than changed to 'N', but currently they simply get converted to N's. The authors invite user comments.

PRIMER_FIRST_BASE_INDEX (int; default 0)
This parameter is the index of the first base in the input sequence. For input and output using 1-based indexing (such as that used in GenBank and to which many users are accustomed) set this parameter to 1. For input and output using 0-based indexing set this parameter to 0. (This parameter also affects the indexes in the contents of the files produced when the primer file flag is set.)

PRIMER_MAX_TEMPLATE_MISPRIMING (decimal, 9999.99; default -1.00)
The maximum allowed similarity to ectopic sites in the template. A negative value means do not check. The scoring system is the same as used for PRIMER_MAX_LIBRARY_MISPRIMING, except that an ambiguity code in the template is never treated as a consensus (see PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS).

PRIMER_MAX_TEMPLATE_MISPRIMING_TH (decimal, 9999.99; default -1.00)
Similar to PRIMER_MAX_TEMPLATE_MISPRIMING but assesses alternative binding sites in the template using thermodynamic models (when PRIMER_THERMODYNAMIC_TEMPLATE_ALIGNMENT=1). This parameter specifies the maximum allowed melting temperature of an oligo (primer) at an "ectopic" site within the template sequence; 47.0 would be a reasonable choice if PRIMER_MIN_TM is 57.0.

PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING (decimal, 9999.99; default -1.00)
The maximum allowed summed similarity of both primers to ectopic sites in the template. A negative value means do not check. The scoring system is the same as used for PRIMER_PAIR_MAX_LIBRARY_MISPRIMING, except that an ambiguity code in the template is never treated as a consensus (see PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS). Primer3 does not check the similarity of hybridization oligos (internal oligos) to locations outside of the amplicon.

PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING_TH (decimal, 9999.99; default -1.00)
The maximum allowed summed melting temperatures of both primers at ectopic sites within the template (with the two primers in an orientation that would allow PCR amplification.) The melting temperatures are calculated as for PRIMER_MAX_TEMPLATE_MISPRIMING_TH.

PRIMER_WT_TEMPLATE_MISPRIMING (float; default 0.0)
Penalty for a single primer binding to the template sequence.

The use of this Tag is modified from Primer3 version 2.0 on: The values used with the older versions have to be multiplied by the factor 100 to have the same effect.

PRIMER_WT_TEMPLATE_MISPRIMING_TH (float; default 0.0)
Penalty for a single primer binding to the template sequence (thermodynamic approach, when PRIMER_THERMODYNAMIC_TEMPLATE_ALIGNMENT=1).

PRIMER_PAIR_WT_TEMPLATE_MISPRIMING (float; default 0.0)
Penalty for a primer pair binding to the template sequence.

The use of this Tag is modified from Primer3 version 2.0 on: The values used with the older versions have to be multiplied by the factor 100 to have the same effect.

PRIMER_PAIR_WT_TEMPLATE_MISPRIMING_TH (float; default 0.0)
Penalty for a primer pair binding to the template sequence (thermodynamic approach, when PRIMER_THERMODYNAMIC_TEMPLATE_ALIGNMENT=1).

PRIMER_MISPRIMING_LIBRARY (string; default empty)
The name of a file containing a nucleotide sequence library of sequences to avoid amplifying (for example repetitive sequences, or possibly the sequences of genes in a gene family that should not be amplified.) The file must be in (a slightly restricted) FASTA format (W. B. Pearson and D.J. Lipman, PNAS 85:8 pp 2444-2448 [1988]); we briefly discuss the organization of this file below. If this parameter is specified then Primer3 locally aligns each candidate primer against each library sequence and rejects those primers for which the local alignment score times a specified weight (see below) exceeds PRIMER_MAX_LIBRARY_MISPRIMING. (The maximum value of the weight is arbitrarily set to 100.0.)

Each sequence entry in the FASTA-format file must begin with an "id line" that starts with '>'. The contents of the id line is "slightly restricted" in that Primer3 parses everything after any optional asterisk ('*') as a floating point number to use as the weight mentioned above. If the id line contains no asterisk then the weight defaults to 1.0. The alignment scoring system used is the same as for calculating complementarity among oligos (e.g. PRIMER_MAX_SELF_ANY), except for the handling of IUB/IUPAC ambiguity codes (discussed below).

The remainder of an entry contains the sequence as lines following the id line up until a line starting with '>' or the end of the file. Whitespace and newlines are ignored. Characters 'A', 'T', 'G', 'C', 'a', 't', 'g', 'c' and IUB/IUPAC 'ambiguity' codes ('R, 'Y', 'K', 'M', 'S', 'W', 'N', including lower case) are retained. For technical reasons the length of the sequence must be >= 3. Of course, sequences of length < 10 or so are probably useless, but will be accepted without complaint.

WARNING: always set PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS=0 if any sequence in the library contains strings of 'N's: NNNNNNNNNNNNNNNNNNNN.
NOWWW
There are no restrictions on line length.

An empty value for this parameter indicates that no repeat library should be used and "turns off" the use of a previously specified library.

Repbase (J. Jurka, A.F.A. Smit, C. Pethiyagoda, and others, 1995-1996, ftp://ftp.ncbi.nih.gov/repository/repbase/) is an excellent source of repeat sequences and pointers to the literature. (The Repbase files need to be converted to Fasta format before they can be used by Primer3.)

See providedMisprimingLibs for the sequence libraries available on this server.

PRIMER_INTERNAL_MISHYB_LIBRARY (string; default empty)
Similar to PRIMER_MISPRIMING_LIBRARY, except that the event we seek to avoid is hybridization of the internal oligo to sequences in this library rather than priming from them.

PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS (boolean; default 0)
If set to 1, treat ambiguity codes as if they were consensus codes when matching oligos to mispriming or mishyb libraries. For example, if this flag is set, then a C in an oligo will be scored as a perfect match to an S in a library sequence, as will a G in the oligo. More importantly, though, any base in an oligo will be scored as a perfect match to an N in the library. This is very bad if the library contains strings of Ns, as no oligo will be legal (and it will take a long time to find this out). So unless you know for sure that your library does not have runs of Ns (or Xs), then set this flag to 0.

PRIMER_MAX_LIBRARY_MISPRIMING (decimal, 9999.99; default 12.00)
The maximum allowed weighted similarity with any sequence in PRIMER_MISPRIMING_LIBRARY.

PRIMER_INTERNAL_MAX_LIBRARY_MISHYB (decimal,9999.99; default 12.00)
Similar to PRIMER_MAX_LIBRARY_MISPRIMING except that this parameter applies to the similarity of candidate internal oligos to the library specified in PRIMER_INTERNAL_MISHYB_LIBRARY.

PRIMER_PAIR_MAX_LIBRARY_MISPRIMING (decimal, 9999.99; default 24.00)
The maximum allowed sum of similarities of a primer pair (one similarity for each primer) with any single sequence in PRIMER_MISPRIMING_LIBRARY. Library sequence weights are not used in computing the sum of similarities.

PRIMER_WT_LIBRARY_MISPRIMING (float; default 0.0)
Penalty for a single primer binding to any single sequence in PRIMER_MISPRIMING_LIBRARY.

PRIMER_INTERNAL_WT_LIBRARY_MISHYB (float; default 0.0)
Equivalent parameter of PRIMER_WT_LIBRARY_MISPRIMING for the internal oligo.

PRIMER_PAIR_WT_LIBRARY_MISPRIMING (float; default 0.0)
Penalty for a primer pair binding to any single sequence in PRIMER_MISPRIMING_LIBRARY.

PRIMER_MASK_TEMPLATE (boolean; default 0)
This feature helps to prevent designing primers to template regions that are repetitive. Primers with more binding sites tend to have higher failure rates. The masking is based on statistical model, which calculates the probability of failure Pf as follows:

Pf= em / (1 + em),
where m = 0.1772 * K11 + 0.239 * K16 - 4.336
and K11 and K16 are frequencies of 11-mers and 16-mers in given genome. The frequencies are stored in species-specific k-mer list files. Users can build their own k-mer lists for species of interest. GenomeTester4 software for making properly formatted k-mer lists can be downloaded from GitHub: https://github.com/bioinfo-ut/GenomeTester4.

PRIMER_MASK_FAILURE_RATE (float; default 0.1)
Cutoff value of accepted failure rate for masking algorithm. Higher value gives lower stringency, meaning that fewer nucleotides in target sequence is masked.

PRIMER_WT_MASK_FAILURE_RATE (float; default 0.0)
Penalty weight for the primer failure rate.

PRIMER_MASK_5P_DIRECTION (int; default 1)
The number of nucleotides masking algorithm should mask from 5' direction.

PRIMER_MASK_3P_DIRECTION (int; default 0)
The number of nucleotides masking algorithm should mask from 3' direction.

PRIMER_MASK_KMERLIST_PATH (string; default ../kmer_lists/)
This tag specifies the path to the directory that contains k-mer list files for masking algorithm. Required for command-line execution. On web interface the species is selected from drop-down menu

PRIMER_MASK_KMERLIST_PREFIX (string; default homo_sapiens)
This tag specifies the species whose k-mer lists are used for pre-masking.

PRIMER_MIN_QUALITY (int; default 0)
The minimum sequence quality (as specified by SEQUENCE_QUALITY) allowed within a primer.

PRIMER_INTERNAL_MIN_QUALITY (int; default 0)
Equivalent parameter of PRIMER_MIN_QUALITY for the internal oligo.

PRIMER_MIN_END_QUALITY (int; default 0)
The minimum sequence quality (as specified by SEQUENCE_QUALITY) allowed within the 5' pentamer of a primer. Note that there is no PRIMER_INTERNAL_MIN_END_QUALITY.

PRIMER_QUALITY_RANGE_MIN (int; default 0)
The minimum legal sequence quality (used for error checking of PRIMER_MIN_QUALITY and PRIMER_MIN_END_QUALITY).

PRIMER_QUALITY_RANGE_MAX (int; default 100)
The maximum legal sequence quality (used for error checking of PRIMER_MIN_QUALITY and PRIMER_MIN_END_QUALITY).

PRIMER_WT_SEQ_QUAL (float; default 0.0)
Penalty weight for the sequence quality of the primer.

PRIMER_INTERNAL_WT_SEQ_QUAL (float; default 0.0)
Equivalent parameter of PRIMER_WT_SEQ_QUAL for the internal oligo.

PRIMER_PAIR_WT_PR_PENALTY (float; default 1.0)
Penalty factor for the sum of the left and the right primer added to the pair penalty. Setting this value below 1.0 will increase running time.

As PRIMER_PAIR_WT_PR_PENALTY or the per-primer penalties it multiplies become lower with respect to various pair penalties (for example PRIMER_PAIR_WT_PRODUCT_SIZE_LT PRIMER_PAIR_WT_PRODUCT_SIZE_GT PRIMER_PAIR_WT_DIFF_TM, etc.) the running time of the search for primer pairs is likely to grow substantially. The reason is that the search algorithm must calculate the penalty for more primer pairs (as opposed to excluding them based on the penalties of the individual oligos).

PRIMER_PAIR_WT_IO_PENALTY (float; default 0.0)
Penalty factor for the internal oligo added to the pair penalty.

PRIMER_INSIDE_PENALTY (float; default -1.0)
Non-default values are valid only for sequences with 0 or 1 target regions. If the primer is part of a pair that spans a target and overlaps the target, then multiply this value times the number of nucleotide positions by which the primer overlaps the (unique) target to get the 'position penalty'. The effect of this parameter is to allow Primer3 to include overlap with the target as a term in the objective function.

PRIMER_OUTSIDE_PENALTY (float; default 0.0)
Non-default values are valid only for sequences with 0 or 1 target regions. If the primer is part of a pair that spans a target and does not overlap the target, then multiply this value times the number of nucleotide positions from the 3' end to the (unique) target to get the 'position penalty'. The effect of this parameter is to allow Primer3 to include nearness to the target as a term in the objective function.

PRIMER_WT_POS_PENALTY (float; default 1.0)
Penalty for the primer which do not overlap the target.

PRIMER_SEQUENCING_LEAD (int; default 50)
Defines the space from the 3'end of the primer to the point were the trace signals are readable. Value only used if PRIMER_TASK=pick_sequencing_primers.

PRIMER_SEQUENCING_SPACING (int; default 500)
Defines the space from the 3'end of the primer to the 3'end of the next primer on the same strand. Value only used if PRIMER_TASK=pick_sequencing_primers.

PRIMER_SEQUENCING_INTERVAL (int; default 250)
Defines the space from the 3'end of the primer to the 3'end of the next primer on the reverse strand. Value only used if PRIMER_TASK=pick_sequencing_primers.

PRIMER_SEQUENCING_ACCURACY (int; default 20)
Defines the space from the calculated position of the 3'end to both sides in which Primer3Plus picks the best primer. Value only used if PRIMER_TASK=pick_sequencing_primers.

PRIMER_WT_END_QUAL (float; default 0.0)
PRIMER_INTERNAL_WT_END_QUAL (float; default 0.0)
7. OUTPUT HELP
start (Start Position)
The position of the 5' base of the primer. For a Left Primer or Hyb Oligo this position is the position of the leftmost base. For a Right primer it is the position of the rightmost base.

len (Oligo Length)
The length of the primer or oligo.

tm (Melting Temperature)
The melting temperature of the primer or oligo.

gc%
The percent of G or C bases in the primer or oligo.

any (Self Complementarity)
The self-complementarity score of the oligo or primer (taken as a measure of its tendency to anneal to itself or form secondary structure).

3' (Self Complementarity)
The 3' self-complementarity of the primer or oligo (taken as a measure of its tendency to form a primer-dimer with itself).

hairpin (Primer or Oligo Hairpin)
The calculated value of the melting temperature of the most stable hairpin structure of the primer or oligo.

rep (Mispriming or Mishyb Library Similarity)
The similarity to the specified Mispriming or Mishyb library.

seq (Primer Sequence, 5' to 3')
The sequence of the selected primer or oligo, always 5' to 3' so the right primer is on the opposite strand from the one supplied in the source input. (The right primer sequence is the sequence you would want synthesized in a primer order.)

8. HOW PRIMER3 CALCULATES THE PENALTY VALUE
In essense, the penalty values define what is the best primer pair. The calculation of penalty values takes into consideration penalty weights, which allow one to fine-tune the selection of primers to specific needs.

This section will explain the selection process of primers by Primer3. In general the selection is a multi step process:

In the first step, Primer3 evaluates every primer that can be picked in the region of interest, possibly subject to constraints due to target regions, product size ranges, and so forth, that might preclude the use of primers in the eventually selected primer pairs. In this pass the hard limits are tested like PRIMER_MAX_GC or PRIMER_MIN_TM. Primers with a GC lower than PRIMER_MAX_GC or a Tm higher than PRIMER_MIN_TM are memorized, the primers which fail in one of these tests are excluded. Primer3 can be forced to use primers failing to pass this test by setting PRIMER_PICK_ANYWAY to one (only available for primers provided by the user).

In the second step, Primer3 calculates a penalty for each primer. This penalty is the only score by which Primer3 evaluates the primers It is also provided as output PRIMER_LEFT_4_PENALTY, PRIMER_INTERNAL_4_PENALTY and PRIMER_RIGHT_4_PENALTY (shown for the primer set 4). For each primer, it is calculated like that:

Left Primers:
PRIMER_LEFT_4_PENALTY =
   If PRIMER_LEFT_4_TM > PRIMER_OPT_TM then this is added (+):
       + PRIMER_WT_TM_GT * ( PRIMER_LEFT_4_TM - PRIMER_OPT_TM )
   If PRIMER_LEFT_4_TM < PRIMER_OPT_TM then this is added (+):
       + PRIMER_WT_TM_LT * ( PRIMER_OPT_TM - PRIMER_LEFT_4_TM )
   If PRIMER_LEFT_4_GC_PERCENT > PRIMER_OPT_GC_PERCENT then
       this is added (+):
       + PRIMER_WT_GC_PERCENT_GT *
            ( PRIMER_LEFT_4_GC_PERCENT - PRIMER_OPT_GC_PERCENT )
   If PRIMER_LEFT_4_GC_PERCENT < PRIMER_OPT_GC_PERCENT then
       this is added (+):
       + PRIMER_WT_GC_PERCENT_LT *
            ( PRIMER_OPT_GC_PERCENT - PRIMER_LEFT_4_GC_PERCENT )
   If masking is used (PRIMER_MASK_TEMPLATE=1), then this is added (+):
       + PRIMER_WT_MASK_FAILURE_RATE * PRIMER_LEFT_4_MASK_FAILURE_RATE
   The following section uses <primer length> as part of
   the term which is given as output in
   PRIMER_LEFT_4=position,<primer length>
   If <primer length> > PRIMER_OPT_SIZE then
       this is added (+):
       + PRIMER_WT_SIZE_GT *
            ( <primer length> - PRIMER_OPT_SIZE )
   If <primer length> < PRIMER_OPT_SIZE then
       this is added (+):
       + PRIMER_WT_SIZE_LT *
            ( PRIMER_OPT_SIZE - <primer length> )
   If the primer does not overlap a target then
       this is added (+):
       + PRIMER_WT_POS_PENALTY * PRIMER_LEFT_4_POSITION_PENALTY
   These are allways added (+) to the penalty
   (if the thermodynamic approach is used then the part in italic
      is substituted with text below this calculation):
    + PRIMER_WT_SELF_ANY * PRIMER_LEFT_4_SELF_ANY
       + PRIMER_WT_SELF_END * PRIMER_LEFT_4_SELF_END
       + PRIMER_WT_TEMPLATE_MISPRIMING *
            PRIMER_LEFT_4_TEMPLATE_MISPRIMING
       + PRIMER_WT_END_STABILITY * PRIMER_LEFT_4_END_STABILITY
       + PRIMER_WT_NUM_NS * <numbers of N in the selected primer>
       + PRIMER_WT_LIBRARY_MISPRIMING * PRIMER_LEFT_4_LIBRARY_MISPRIMING
       + PRIMER_WT_SEQ_QUAL *
            ( PRIMER_QUALITY_RANGE_MAX -
              PRIMER_LEFT_4_MIN_SEQ_QUALITY )
      If the thermodynamic approach is used then the part of italic in
          the above calculation is replaced by this:

     If ((PRIMER_LEFT_4_TM - 5) ≤ PRIMER_LEFT_4_SELF_ANY_TH) then is added (+):
      + PRIMER_WT_SELF_ANY_TH *
                  (PRIMER_LEFT_4_SELF_ANY_TH - (PRIMER_LEFT_4_TM - 5 - 1))
    else if ((PRIMER_LEFT_4_TM - 5) > PRIMER_LEFT_4_SELF_ANY_TH) then is added (+):
      + PRIMER_WT_SELF_ANY_TH *
            (1/(PRIMER_LEFT_4_TM - 5 + 1 - PRIMER_LEFT_4_SELF_ANY_TH));
    If ((PRIMER_LEFT_4_TM - 5) ≤ PRIMER_LEFT_4_SELF_END_TH) then is added (+):
     + PRIMER_WT_SELF_END_TH *
               (PRIMER_LEFT_4_SELF_END_TH - (PRIMER_LEFT_4_TM - 5 - 1))
    else if ((PRIMER_LEFT_4_TM - 5) > PRIMER_LEFT_4_SELF_END_TH) then is added (+):
     + PRIMER_WT_SELF_END_TH *
       (1/(PRIMER_LEFT_4_TM - 5 + 1 - PRIMER_LEFT_4_SELF_ANY_TH));
    If ((PRIMER_LEFT_4_TM - 5) ≤ PRIMER_LEFT_4_TEMPLATE_MISPRIMING_TH) then is added (+):
     + PRIMER_WT_TEMPLATE_MISPRIMING_TH *
       (PRIMER_LEFT_4_TEMPLATE_MISPRIMING_TH - (PRIMER_LEFT_4_TM - 5 - 1))
    else if ((PRIMER_LEFT_4_TM - 5) > PRIMER_LEFT_4_TEMPLATE_MISPRIMING_TH) then is added (+):
     + PRIMER_WT_TEMPLATE_MISPRIMING_TH *
      (1/(PRIMER_LEFT_4_TM - 5 + 1 - PRIMER_LEFT_4_TEMPLATE_MISPRIMING_TH));
    If ((PRIMER_LEFT_4_TM - 5) ≤ PRIMER_LEFT_4_HAIRPIN_TH) then is added (+):
      + PRIMER_WT_HAIRPIN_TH *
             (PRIMER_LEFT_4_HAIRPIN_TH - (PRIMER_LEFT_4_TM - 5 - 1))
    else if ((PRIMER_LEFT_4_TM - 5) > PRIMER_LEFT_4_HAIRPIN_TH) then is added (+):
      + PRIMER_WT_HAIRPIN_TH *
            (1/(PRIMER_LEFT_4_TM - 5 + 1 - PRIMER_LEFT_4_HAIRPIN_TH));

Right Primers (identical to Left Primers):
PRIMER_RIGHT_4_PENALTY =
   If PRIMER_RIGHT_4_TM > PRIMER_OPT_TM then
       this is added (+):
       + PRIMER_WT_TM_GT * ( PRIMER_RIGHT_4_TM - PRIMER_OPT_TM )
   If PRIMER_RIGHT_4_TM < PRIMER_OPT_TM then
       this is added (+):
       + PRIMER_WT_TM_LT * ( PRIMER_OPT_TM - PRIMER_RIGHT_4_TM )
   If PRIMER_RIGHT_4_GC_PERCENT > PRIMER_OPT_GC_PERCENT then
       this is added (+):
       + PRIMER_WT_GC_PERCENT_GT *
            ( PRIMER_RIGHT_4_GC_PERCENT - PRIMER_OPT_GC_PERCENT )
   If PRIMER_RIGHT_4_GC_PERCENT < PRIMER_OPT_GC_PERCENT then
       this is added (+):
       + PRIMER_WT_GC_PERCENT_LT *
            ( PRIMER_OPT_GC_PERCENT - PRIMER_RIGHT_4_GC_PERCENT )
   If masking is used (PRIMER_MASK_TEMPLATE=1), then this is added (+):
       + PRIMER_WT_MASK_FAILURE_RATE * PRIMER_RIGHT_4_MASK_FAILURE_RATE
   The following section uses <primer length> as part of
   the term which is given as output in
   PRIMER_RIGHT_4=position,<primer length>
   If <primer length> > PRIMER_OPT_SIZE then
       this is added (+):
       + PRIMER_WT_SIZE_GT *
            ( <primer length> - PRIMER_OPT_SIZE )
   If <primer length> < PRIMER_OPT_SIZE then
       this is added (+):
       + PRIMER_WT_SIZE_LT *
            ( PRIMER_OPT_SIZE - <primer length> )
   If the primer does not overlap a target then
       this is added (+):
       + PRIMER_WT_POS_PENALTY * PRIMER_RIGHT_4_POSITION_PENALTY
   These are allways added (+) to the penalty
   (if the thermodynamic approach is used then the part in italic
      is substituted with text below this calculation):
    + PRIMER_WT_SELF_ANY * PRIMER_RIGHT_4_SELF_ANY
       + PRIMER_WT_SELF_END * PRIMER_RIGHT_4_SELF_END
       + PRIMER_WT_TEMPLATE_MISPRIMING *
            PRIMER_RIGHT_4_TEMPLATE_MISPRIMING
       + PRIMER_WT_END_STABILITY * PRIMER_RIGHT_4_END_STABILITY
       + PRIMER_WT_NUM_NS * <numbers of N in the selected primer>
       + PRIMER_WT_LIBRARY_MISPRIMING * PRIMER_RIGHT_4_LIBRARY_MISPRIMING
       + PRIMER_WT_SEQ_QUAL *
            ( PRIMER_QUALITY_RANGE_MAX -
              PRIMER_RIGHT_4_MIN_SEQ_QUALITY )
     If the thermodynamic approach is used then the part of italic in
         the above calculation is replaced by this:

    If ((PRIMER_RIGHT_4_TM - 5) ≤ PRIMER_RIGHT_4_SELF_ANY_TH) then is added (+):
      + PRIMER_WT_SELF_ANY_TH *
                  (PRIMER_RIGHT_4_SELF_ANY_TH - (PRIMER_RIGHT_4_TM - 5 - 1))
    else if ((PRIMER_RIGHT_4_TM - 5) > PRIMER_RIGHT_4_SELF_ANY_TH) then is added (+):
      + PRIMER_WT_SELF_ANY_TH *
            (1/(PRIMER_RIGHT_4_TM - 5 + 1 - PRIMER_RIGHT_4_SELF_ANY_TH));
    If ((PRIMER_RIGHT_4_TM - 5) ≤ PRIMER_RIGHT_4_SELF_END_TH) then is added (+):
     + PRIMER_WT_SELF_END_TH *
               (PRIMER_RIGHT_4_SELF_END_TH - (PRIMER_RIGHT_4_TM - 5 - 1))
    else if ((PRIMER_RIGHT_4_TM - 5) > PRIMER_RIGHT_4_SELF_END_TH) then is added (+):
     + PRIMER_WT_SELF_END_TH *
               (1/(PRIMER_RIGHT_4_TM - 5 + 1 - PRIMER_RIGHT_4_SELF_ANY_TH));
    If ((PRIMER_RIGHT_4_TM - 5) ≤ PRIMER_RIGHT_4_TEMPLATE_MISPRIMING_TH) then is added (+):
      + PRIMER_WT_TEMPLATE_MISPRIMING_TH *
       (PRIMER_RIGHT_4_TEMPLATE_MISPRIMING_TH - (PRIMER_RIGHT_4_TM - 5 - 1))
    else if ((PRIMER_RIGHT_4_TM - 5) > PRIMER_RIGHT_4_TEMPLATE_MISPRIMING_TH) then is added (+):
      + PRIMER_WT_TEMPLATE_MISPRIMING_TH *
      (1/(PRIMER_RIGHT_4_TM - 5 + 1 - PRIMER_RIGHT_4_TEMPLATE_MISPRIMING_TH));
    If ((PRIMER_RIGHT_4_TM - 5) ≤ PRIMER_RIGHT_4_HAIRPIN_TH) then is added (+):
      + PRIMER_WT_HAIRPIN_TH *
             (PRIMER_RIGHT_4_HAIRPIN_TH - (PRIMER_RIGHT_4_TM - 5 - 1))
    else if ((PRIMER_RIGHT_4_TM - 5) > PRIMER_RIGHT_4_HAIRPIN_TH) then is added (+):
      + PRIMER_WT_HAIRPIN_TH *
            (1/(PRIMER_RIGHT_4_TM - 5 + 1 - PRIMER_RIGHT_4_HAIRPIN_TH));

Internal Oligos:
PRIMER_INTERNAL_4_PENALTY =
   If PRIMER_INTERNAL_4_TM > PRIMER_INTERNAL_OPT_TM then
       this is added (+):
       + PRIMER_INTERNAL_WT_TM_GT *
            ( PRIMER_INTERNAL_4_TM - PRIMER_INTERNAL_OPT_TM )
   If PRIMER_INTERNAL_4_TM < PRIMER_INTERNAL_OPT_TM then
       this is added (+):
       + PRIMER_INTERNAL_WT_TM_LT *
            ( PRIMER_INTERNAL_OPT_TM - PRIMER_INTERNAL_4_TM )
   If PRIMER_INTERNAL_4_GC_PERCENT > PRIMER_INTERNAL_OPT_GC_PERCENT
       then this is added (+):
       + PRIMER_INTERNAL_WT_GC_PERCENT_GT *
            ( PRIMER_INTERNAL_4_GC_PERCENT -
              PRIMER_INTERNAL_OPT_GC_PERCENT )
   If PRIMER_INTERNAL_4_GC_PERCENT < PRIMER_INTERNAL_OPT_GC_PERCENT
       then this is added (+):
       + PRIMER_INTERNAL_WT_GC_PERCENT_LT *
            ( PRIMER_INTERNAL_OPT_GC_PERCENT -
              PRIMER_INTERNAL_4_GC_PERCENT )
   The following section uses <primer length> as part of
   the term which is given as output in
   PRIMER_INTERNAL_4=position,<primer length>
   If <primer length> > PRIMER_INTERNAL_OPT_SIZE then
       this is added (+):
       + PRIMER_INTERNAL_WT_SIZE_GT *
            ( <primer length> - PRIMER_INTERNAL_OPT_SIZE )
   If <primer length> < PRIMER_INTERNAL_OPT_SIZE then
       this is added (+):
       + PRIMER_INTERNAL_WT_SIZE_LT *
            ( PRIMER_INTERNAL_OPT_SIZE - <primer length> )
   These are always added (+) to the penalty:
   (if the thermodynamic approach is used then the part in italic
      is substituted with text below this calculation):
  + PRIMER_INTERNAL_WT_SELF_ANY * PRIMER_INTERNAL_4_SELF_ANY
     + PRIMER_INTERNAL_WT_SELF_END * PRIMER_INTERNAL_4_SELF_END
     + PRIMER_INTERNAL_WT_NUM_NS *
          <numbers of N in the selected primer>
     + PRIMER_INTERNAL_WT_LIBRARY_MISHYB *
          PRIMER_INTERNAL_4_LIBRARY_MISHYB
     + PRIMER_INTERNAL_WT_SEQ_QUAL *
          ( PRIMER_QUALITY_RANGE_MAX -
            PRIMER_INTERNAL_4_MIN_SEQ_QUALITY )
   If the thermodynamic approach is used then the part of italic in
   the above calculation is replaced by this:

   If ((PRIMER_INTERNAL_4_TM - 5) ≤ PRIMER_INTERNAL_4_SELF_ANY_TH) then is added (+):
    + PRIMER_INTERNAL_WT_SELF_ANY_TH *
        (PRIMER_INTERNAL_4_SELF_ANY_TH - (PRIMER_INTERNAL_4_TM - 5 - 1))
    else if ((PRIMER_INTERNAL_4_TM - 5) > PRIMER_INTERNAL_4_SELF_ANY_TH) then is added (+):
    + PRIMER_INTERNAL_WT_SELF_ANY_TH *
        (1/(PRIMER_INTERNAL_4_TM - 5 + 1 - PRIMER_INTERNAL_4_SELF_ANY_TH));
    If ((PRIMER_INTERNAL_4_TM - 5) ≤ PRIMER_INTERNAL_4_SELF_END_TH) then is added (+):
     + PRIMER_INTERNAL_WT_SELF_END_TH *
         (PRIMER_INTERNAL_4_SELF_END_TH - (PRIMER_INTERNAL_4_TM - 5 - 1))
    else if ((PRIMER_INTERNAL_4_TM - 5) > PRIMER_INTERNAL_4_SELF_END_TH) then is added (+):
      + PRIMER_INTERNAL_WT_SELF_END_TH *
          (1/(PRIMER_INTERNAL_4_TM - 5 + 1 - PRIMER_INTERNAL_4_SELF_ANY_TH));
    If ((PRIMER_INTERNAL_4_TM - 5) ≤ PRIMER_INTERNAL_4_HAIRPIN_TH) then is added (+):
      + PRIMER_INTERNAL_WT_HAIRPIN_TH *
        (PRIMER_INTERNAL_4_HAIRPIN_TH - (PRIMER_INTERNAL_4_TM - 5 - 1))
    else if ((PRIMER_INTERNAL_4_TM - 5) > PRIMER_INTERNAL_4_HAIRPIN_TH) then is added (+):
      + PRIMER_INTERNAL_WT_HAIRPIN_TH *
        (1/(PRIMER_INTERNAL_4_TM - 5 + 1 - PRIMER_INTERNAL_4_HAIRPIN_TH));

The primers are then sorted by penalty and Primer3 tries to pick the primers with the lowest penalty. For the PRIMER_TASK

pick_primer_list
or
pick_sequencing_primers
the selection ends at this point. If primer pairs have to be selected, a PRIMER_PAIR_4_PENALTY is calculated:
PRIMER_PAIR_4_PENALTY =
   To the pair penalty are at first the single primer penalties
   added (+):
       + PRIMER_PAIR_WT_PR_PENALTY *
            ( PRIMER_LEFT_4_PENALTY + PRIMER_RIGHT_4_PENALTY )
   If internal oligo is picked then this is added (+):
       + PRIMER_PAIR_WT_IO_PENALTY * PRIMER_INTERNAL_4_PENALTY
   If PRIMER_PAIR_4_PRODUCT_TM > PRIMER_PRODUCT_OPT_TM then
       this is added (+):
       + PRIMER_PAIR_WT_PRODUCT_TM_GT *
            ( PRIMER_PAIR_4_PRODUCT_TM - PRIMER_PRODUCT_OPT_TM )
   If PRIMER_PAIR_4_PRODUCT_TM < PRIMER_PRODUCT_OPT_TM then
       this is added (+):
       + PRIMER_PAIR_WT_PRODUCT_TM_LT *
            ( PRIMER_PRODUCT_OPT_TM - PRIMER_PAIR_4_PRODUCT_TM )
   If PRIMER_PAIR_4_PRODUCT_SIZE > PRIMER_PRODUCT_OPT_SIZE then
       this is added (+):
       + PRIMER_PAIR_WT_PRODUCT_SIZE_GT *
            ( PRIMER_PAIR_4_PRODUCT_SIZE - PRIMER_PRODUCT_OPT_SIZE )
   If PRIMER_PAIR_4_PRODUCT_SIZE < PRIMER_PRODUCT_OPT_SIZE then
       this is added (+):
       + PRIMER_PAIR_WT_PRODUCT_SIZE_LT *
            ( PRIMER_PRODUCT_OPT_SIZE - PRIMER_PAIR_4_PRODUCT_SIZE )
   These are allways added (+) to the penalty:
   (if the thermodynamic approach is used then the part in italic
       is substituted with text below this calculation):
     + PRIMER_PAIR_WT_DIFF_TM *
          <difference in Tm between the left and the right primer>
  + PRIMER_PAIR_WT_COMPL_ANY * PRIMER_PAIR_4_COMPL_ANY
     + PRIMER_PAIR_WT_COMPL_END * PRIMER_PAIR_4_COMPL_END
     + PRIMER_PAIR_WT_LIBRARY_MISPRIMING * PRIMER_PAIR_4_LIBRARY_MISPRIMING
     + PRIMER_PAIR_WT_TEMPLATE_MISPRIMING *
          PRIMER_PAIR_4_TEMPLATE_MISPRIMING
     If the thermodynamic approach is used then the part of italic in
     the above calculation is replaced by this:

   If ((min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM) - 5) ≤ PRIMER_PAIR_4_COMPL_ANY_TH) then is added (+):
   + PRIMER_PAIR_WT_COMPL_ANY_TH *
       (PRIMER_PAIR_4_COMPL_ANY_TH - (min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM) - 5 - 1))
  else if ((min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM) - 5) > PRIMER_PAIR_4_COMPL_ANY_TH) then is added (+):
   + PRIMER_PAIR_WT_COMPL_ANY_TH *
      (1/(min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM - 5 + 1 - PRIMER_PAIR_4_COMPL_ANY_TH));
   If ((min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM - 5) ≤ PRIMER_PAIR_4_COMPL_END_TH) then is added (+):
   + PRIMER_PAIR_WT_COMPL_END_TH *
       (PRIMER_PAIR_4_COMPL_END_TH - (min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM) - 5 - 1))
  else if ((min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM - 5) > PRIMER_PAIR_4_COMPL_END_TH) then is added (+):
    + PRIMER_PAIR_WT_COMPL_END_TH *
         (1/(min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM - 5 + 1 - PRIMER_PAIR_4_COMPL_ANY_TH));
  If ((min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM - 5) ≤ PRIMER_PAIR_4_TEMPLATE_MISPRIMING_TH) then is added (+):
   + PRIMER_PAIR_WT_TEMPLATE_MISPRIMING_TH *
    (PRIMER_PAIR_4_TEMPLATE_MISPRIMING_TH - (min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM - 5 - 1))
  else if ((min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM - 5) > PRIMER_PAIR_4_TEMPLATE_MISPRIMING_TH) then is added (+):
   + PRIMER_PAIR_WT_TEMPLATE_MISPRIMING_TH *
     (1/(min(PRIMER_LEFT_4_TM,PRIMER_RIGHT_4_TM - 5 + 1 - PRIMER_PAIR_4_TEMPLATE_MISPRIMING_TH));

Primer3 tries to select pairs with the lowest penalty which still fulfill all necessary requirements like non-redundancy or product size limits.

9. CAUTIONS
Some of the most important issues in primer picking can be addressed only before using Primer3. These are sequence quality (including making sure the sequence is not vector and not chimeric) and avoiding repetitive elements.

Techniques for avoiding problems include a thorough understanding of possible vector contaminants and cloning artifacts coupled with database searches using blast, Fasta, or other similarity searching program to screen for vector contaminants and possible repeats. Repbase (J. Jurka, A.F.A. Smit, C. Pethiyagoda, and others, 1995-1996, ftp://ftp.ncbi.nih.gov/repository/repbase/) is an excellent source of repeat sequences and pointers to the literature. (The Repbase files need to be converted to Fasta format before they can be used by Primer3.) Primer3 now allows you to screen candidate oligos against a Mispriming Library (or a Mishyb Library in the case of internal oligos).

Sequence quality can be controlled by manual trace viewing and quality clipping or automatic quality clipping programs. Low- quality bases should be changed to N's or can be made part of Excluded Regions. The beginning of a sequencing read is often problematic because of primer peaks, and the end of the read often contains many low-quality or even meaningless called bases. Therefore, when picking primers from single-pass sequence it is often best to use the SEQUENCE_INCLUDED_REGION parameter to ensure that Primer3 chooses primers in the high quality region of the read.

In addition, Primer3 takes as input a SEQUENCE_QUALITY list for use with those base calling programs (e.g. Phred) that output this information.

10. PROVIDED MISPRIMING LIBRARIES
This selection indicates what mispriming library (if any) Primer3 should use to screen for interspersed repeats or for other sequence to avoid as a location for primers. The human and rodent libraries on the web page are adapted from Repbase (J. Jurka, A.F.A. Smit, C. Pethiyagoda, et al., 1995-1996) ftp://ftp.ncbi.nih.gov/repository/repbase/). The human library is humrep.ref concatenated with simple.ref, translated to FASTA format. There are two rodent libraries. One is rodrep.ref translated to FASTA format, and the other is rodrep.ref concatenated with simple.ref, translated to FASTA format.

The Drosophila library is the concatenation of two libraries from the Berkeley Drosophila Genome Project:

1. A library of transposable elements The transposable elements of the Drosophila melanogaster euchromatin - a genomics perspective J.S. Kaminker, C.M. Bergman, B. Kronmiller, J. Carlson, R. Svirskas, S. Patel, E. Frise, D.A. Wheeler, S.E. Lewis, G.M. Rubin, M. Ashburner and S.E. Celniker Genome Biology (2002) 3(12):research0084.1-0084.20, http://www.fruitfly.org/data/p_disrupt/datasets/ASHBURNER/D_mel_transposon_sequence_set.fasta

2. A library of repetitive DNA sequences http://www.fruitfly.org/sequence/sequence_db/na_re.dros.

Both were downloaded 6/23/04.
The contents of the libraries can be viewed at the following links:
HUMAN + SIMPLE (contains microsatellites)
RODENT (does not contain microsatellites)
RODENT + SIMPLE (contains microsatellites)
DROSOPHILA (ontains transposons)

11. WHAT TO DO IF PRIMER3 CANNOT FIND ANY PRIMERS?
Try relaxing various parameters, including the self-complementarity parameters and max and min oligo melting temperatures. For example, for very A-T-rich regions you might have to increase maximum primer size or decrease minimum melting temperature. It is usually unwise to reduce the minimum primer size if your template is complex (e.g. a mammalian genome), since small primers are more likely to be non-specific. Make sure that there are adequate stretches of non-Ns in the regions in which you wish to pick primers. If necessary you can also allow an N in your primer and use an oligo mixture containing all four bases at that position.

Try setting the PRIMER_EXPLAIN_FLAG input tag.

12. ADVICE FOR PICKING PRIMERS
We suggest consulting: Wojciech Rychlik (1993) "Selection of Primers for Polymerase Chain Reaction" in BA White, Ed., "Methods in Molecular Biology, Vol. 15: PCR Protocols: Current Methods and Applications", pp 31-40, Humana Press, Totowa NJ.

13. PRIMER3 WWW INTERFACES
There are two web interfaces available :
The Bioinformatics workgroup at University of Tartu provides a basic web-based interface to Primer3 named Primer3Web at http://primer3.ut.ee/

A Primer3Plus web services is at http://primer3plus.com


Web interface code is available on GitHub: https://github.com/primer3-org.

14. ACKNOWLEDGMENTS
Initial development of Primer3 was funded by Howard Hughes Medical Institute and by the National Institutes of Health, National Human Genome Research Institute under grants R01-HG00257 (to David C. Page) and P50-HG00098 (to Eric S. Lander), but ongoing development and maintenance are not currently funded.

Primer3 was originally written by Helen J. Skaletsky (Howard Hughes Medical Institute, Whitehead Institute) and Steve Rozen (Duke-NUS Graduate Medical School Singapore, formerly at Whitehead Institute) based on the design of earlier versions, notably Primer 0.5 (Steve Lincoln, Mark Daly, and Eric S. Lander). The original web interface was designed by Richard Resnick. Lincoln Stein designed the Boulder-IO format in the days before XML and RDF, and championed the idea of making Primer3 a software component, which has been key to its wide utility.

In addition, among others, Ernst Molitor, Carl Foeller, and James Bonfield contributed to the early design of Primer3. Brant Faircloth has helped with ensuring that Primer3 runs on Windows and MacOS and with the Primer3 web site. Triinu Koressaar and Maido Remm modernized the melting temperature calculations in 2008. Triinu Koressaar added secondary structure, primer-dimer, and template mispriming based on a thermodynamic model in 2.2.0. Ioana Cutcutache is responsible for most of the remaining improvements in 2.2.0, including performance enhancements, modern command line arguments, and new input tags to control primer location (with the "overlap junction" tags initially implemented by Andreas Untergasser). Jian Ye patiently provided new requirements.

Harm Nijveen and Andreas Untergasser developed the webinterface Primer3Plus in 2006-2009. Currently Primer3Plus is maintained by Andreas Untergasser.

Primer3 is an open software development project hosted on GitHub: https://github.com/primer3-org.