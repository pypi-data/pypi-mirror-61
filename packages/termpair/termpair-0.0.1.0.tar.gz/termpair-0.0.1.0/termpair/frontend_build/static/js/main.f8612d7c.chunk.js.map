{"version":3,"sources":["encryption.js","logo.png","App.js","index.js"],"names":["IV_LENGTH","getSecretKey","_getSecretKey","apply","this","arguments","_callee","b64EncodedKey","keyData","_home_csmith_git_termpair_termpair_frontend_src_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","window","location","hash","substring","length","Buffer","from","crypto","subtle","importKey","name","abrupt","sent","t0","console","error","stop","decrypt","_x","_x2","_decrypt","_callee2","secretKey","encryptedPayloadB64","ivAndPayload","iv","encryptedTerminalOutput","decryptedTerminalOutput","_context2","subarray","t1","call","toString","encrypt","_x3","_x4","_encrypt","_callee3","utf8Payload","encryptedArrayBuffer","ivAndEncryptedPayload","base64EncryptedString","_context3","getRandomValues","Uint8Array","TextEncoder","encode","_combineBuffers","_arrayBufferToBase64","buffer1","buffer2","tmp","byteLength","set","buffer","bytes","binary","len","i","String","fromCharCode","btoa","module","exports","__webpack_require__","p","Led","props","react_default","createElement","className","concat","color","text","BottomBar","id","href","TopBar","height","src","logo","alt","StatusBar","status","allow_browser_control","num_clients","moment","broadcast_start_time_iso","format","Terminal","ref","terminalRef","current","BroadcastInstructions","host","protocol","hostname","pathname","termpair_version","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","terminal_id","secretEncryptionKey","xterm","Xterm","cursorBlink","macOptionIsMeta","scrollback","React","createRef","resize","cols","rows","body","assign","App_Terminal","style","display","flexDirection","handleWebsocketMessage","message","data","encryptedBase64Payload","decryptedPayload","regenerator_default","JSON","parse","event","payload","write","clearTimeout","resizeTimeout","setTimeout","setState","open","document","getElementById","writeln","ws_protocol","webSocket","WebSocket","port","on","_ref","asyncToGenerator","mark","pressedKey","ev","send","addEventListener","_this2","bind","Component","ReactDOM","render","src_App_0","initial_data"],"mappings":"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","file":"static/js/main.f8612d7c.chunk.js","sourcesContent":["// Symmetric encryption with aes gcm\n// https://github.com/mdn/dom-examples/blob/master/web-crypto/encrypt-decrypt/aes-gcm.js\n\nconst IV_LENGTH = 12;\n\nexport async function getSecretKey() {\n  try {\n    const b64EncodedKey = window.location.hash.substring(\n      1, // skip the '#' symbol\n      window.location.hash.length - 1\n    );\n    const keyData = Buffer.from(b64EncodedKey, \"base64\");\n    return await window.crypto.subtle.importKey(\n      \"raw\",\n      keyData,\n      {\n        name: \"AES-GCM\"\n      },\n      false, // extractable\n      [\"encrypt\", \"decrypt\"]\n    );\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function decrypt(secretKey, encryptedPayloadB64) {\n  // decode base64 data to unencrypted iv and encrypted data\n  const ivAndPayload = Buffer.from(encryptedPayloadB64, \"base64\");\n\n  // iv is prepended to encrypted payload\n  const iv = ivAndPayload.subarray(0, IV_LENGTH);\n\n  // remaining bytes are encrypted utf-8 output of terminal\n  const encryptedTerminalOutput = ivAndPayload.subarray(IV_LENGTH);\n\n  const decryptedTerminalOutput = Buffer.from(\n    await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iv\n      },\n      secretKey,\n      encryptedTerminalOutput\n    )\n  ).toString(\"utf-8\");\n  return decryptedTerminalOutput;\n}\n\nexport async function encrypt(secretKey, utf8Payload) {\n  // The same iv must never be reused with a given key\n  const iv = window.crypto.getRandomValues(new Uint8Array(IV_LENGTH));\n  const encryptedArrayBuffer = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv\n    },\n    secretKey,\n    new TextEncoder().encode(utf8Payload)\n  );\n  // prepend unencrypted iv to encrypted payload\n  const ivAndEncryptedPayload = _combineBuffers(iv, encryptedArrayBuffer);\n\n  // send as ascii\n  // TODO send as binary\n  const base64EncryptedString = _arrayBufferToBase64(ivAndEncryptedPayload);\n  return base64EncryptedString;\n}\n\nfunction _combineBuffers(buffer1, buffer2) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n}\n\nfunction _arrayBufferToBase64(buffer) {\n  const bytes = new Uint8Array(buffer);\n  let binary = \"\";\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    // returns a utf-16 character, considered \"binary\"\n    binary += String.fromCharCode(bytes[i]);\n  }\n  // \"binary to ascii\"\n  return window.btoa(binary);\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.74cdedb8.png\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.png\"; // logomakr.com/4N54oK\nimport { Terminal as Xterm } from \"xterm\";\nimport moment from \"moment\";\nimport { getSecretKey, decrypt, encrypt } from \"./encryption\";\nfunction Led(props) {\n  return (\n    <div className=\"flexnowrap\">\n      <div className={`led led-${props.color}`} />\n      <div>{props.text}</div>\n    </div>\n  );\n}\n\nfunction BottomBar() {\n  return (\n    <div id=\"bottom\">\n      <div>\n        A <a href=\"https://grassfedcode.com\">Chad Smith</a> project\n      </div>\n      <div>\n        <a href=\"https://github.com/cs01\">GitHub</a>\n      </div>\n      <div>\n        <a href=\"https://twitter.com/grassfedcode\">Twitter</a>\n      </div>\n    </div>\n  );\n}\nfunction TopBar(props) {\n  return (\n    <div id=\"top\">\n      <a href=\"https://github.com/cs01/termpair\">\n        <img height=\"30px\" src={logo} alt=\"logo\" />\n      </a>\n    </div>\n  );\n}\nfunction StatusBar(props) {\n  return (\n    <div id=\"statusbar\">\n      {\" \"}\n      <div>\n        {props.status === \"connected\" ? (\n          <Led color=\"green\" text={props.status} />\n        ) : (\n          <Led color=\"red\" text={props.status} />\n        )}\n      </div>\n      <div>\n        {props.allow_browser_control ? (\n          <Led color=\"green\" text=\"can type\" />\n        ) : (\n          <Led color=\"orange\" text=\"cannot type\" />\n        )}\n      </div>\n      <div>{props.num_clients ? props.num_clients : \"0\"} Connected Clients</div>\n      <div>\n        Started at{\" \"}\n        {moment(props.broadcast_start_time_iso).format(\n          \"h:mm:ss a on MMM Do YYYY\"\n        )}\n      </div>\n    </div>\n  );\n}\nfunction Terminal(props) {\n  return (\n    <div\n      id=\"terminal\"\n      className={props.status}\n      ref={props.terminalRef.current}\n    />\n  );\n}\n\nfunction BroadcastInstructions(props) {\n  const host = `${window.location.protocol}//${window.location.hostname}${window.location.pathname}`;\n  return (\n    <div id=\"terminal-entry\">\n      <p>{props.error}</p>\n      <p>To broadcast a terminal, run</p>\n      <pre>\n        pipx run termpair=={props.termpair_version} share --host \"{host}\"\n      </pre>\n      <p>then open the link printed to the terminal.</p>\n    </div>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status:\n        props.terminal_id && window.crypto != null\n          ? \"connection-pending\"\n          : \"disconnected\",\n      num_clients: this.props.num_clients,\n      terminal_id: this.props.terminal_id,\n      secretEncryptionKey: \"pending\"\n    };\n    this.xterm = new Xterm({\n      cursorBlink: true,\n      macOptionIsMeta: true,\n      scrollback: 1000\n    });\n    this.terminalRef = React.createRef();\n    this.xterm.resize(props.cols || 60, props.rows || 20);\n  }\n  render() {\n    const hasEncryption = window.crypto != null;\n    let body;\n    if (!hasEncryption) {\n      body = (\n        <BroadcastInstructions\n          error={\n            \"This domain is not secure and thus cannot perform in-browser encryption/decryption.\"\n          }\n          {...this.props}\n        />\n      );\n    } else if (!this.state.terminal_id) {\n      body = (\n        <BroadcastInstructions\n          {...this.props}\n          error={\"Valid terminal id not provided.\"}\n        />\n      );\n    } else if (this.state.secretEncryptionKey == null) {\n      body = (\n        <BroadcastInstructions\n          {...this.props}\n          error={\"Encryption key is invalid or missing\"}\n        />\n      );\n    } else {\n      body = <Terminal {...this.props} terminalRef={this.terminalRef} />;\n    }\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <TopBar {...this.props} {...this.state} />\n        {body}\n        <StatusBar {...this.props} {...this.state} />\n        <BottomBar />\n      </div>\n    );\n  }\n\n  async componentDidMount() {\n    if (!this.state.terminal_id) {\n      return;\n    }\n    const secretEncryptionKey = await getSecretKey();\n    this.setState({ secretEncryptionKey });\n    const xterm = this.xterm;\n\n    xterm.open(document.getElementById(\"terminal\"));\n    xterm.writeln(`Welcome to TermPair! https://github.com/cs01/termpair`);\n    if (!this.state.terminal_id || !secretEncryptionKey) {\n      xterm.writeln(\"\");\n      xterm.writeln(\"A valid terminal id and e2ee key must be provided.\");\n      xterm.writeln(\"To view or broadcast a terminal, see instructions at\");\n      xterm.writeln(\"https://github.com/cs01/termpair\");\n      this.setState({ status: \"disconnected\" });\n      return;\n    }\n    const ws_protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const webSocket = new WebSocket(\n      `${ws_protocol}://${window.location.hostname}:${window.location.port}${window.location.pathname}connect_browser_to_terminal?terminal_id=${this.state.terminal_id}`\n    );\n\n    xterm.on(\"key\", async (pressedKey, ev) => {\n      webSocket.send(await encrypt(secretEncryptionKey, pressedKey));\n    });\n\n    webSocket.addEventListener(\"open\", event => {\n      this.setState({ status: \"connected\" });\n      xterm.writeln(\"Connection established with end-to-end encryption,\");\n      xterm.writeln(\n        \"which means the termpair server and third parties can't read transmitted data.\"\n      );\n    });\n\n    webSocket.addEventListener(\"close\", event => {\n      if (this.state.status === \"connected\") {\n        xterm.writeln(\"Connection ended\");\n      } else {\n        xterm.writeln(\n          \"Failed to establish connection. Ensure you have a valid url.\"\n        );\n        xterm.writeln(\"To view or broadcast a terminal, see instructions at\");\n        xterm.writeln(\"https://github.com/cs01/termpair\");\n      }\n      this.setState({ status: \"disconnected\" });\n      this.setState({ num_clients: 0 });\n    });\n\n    async function handleWebsocketMessage(message) {\n      const data = JSON.parse(message.data);\n      if (data.event === \"new_output\") {\n        const encryptedBase64Payload = data.payload;\n        const decryptedPayload = await decrypt(\n          secretEncryptionKey,\n          encryptedBase64Payload\n        );\n        xterm.write(decryptedPayload);\n      } else if (data.event === \"resize\") {\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(() => {\n          xterm.resize(data.payload.cols, data.payload.rows);\n        }, 500);\n      } else if (data.event === \"num_clients\") {\n        this.setState({ num_clients: data.payload });\n      } else {\n        console.error(\"unknown event type\", data);\n      }\n    }\n    webSocket.addEventListener(\"message\", handleWebsocketMessage.bind(this));\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App {...window.initial_data} />, document.getElementById('root'));\n\n"],"sourceRoot":""}