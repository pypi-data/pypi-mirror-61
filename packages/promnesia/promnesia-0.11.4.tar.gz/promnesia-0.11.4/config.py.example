from typing import List, Tuple, Optional
from promnesia.indexers.plaintext import extract_from_path
import pytz

# TODO FIXME these are quite outdated...

"""
This directory keeps backups of chrome history databases (~/.config/google-chrome/Default/History).
The script is just scanning it based on mime type and populating from the databases it finds, so you are free to store them in any layout you prefer.
Note that it CAN'T be ~/.config/google-chrome, since SQLITE will refuse connection for an open (by Chrome) database.

You can use the helper script in scripts/backup-chrome-history-db.py, e.g. add it to cron to run every week or something. 

If not set, the script will just skip it.

# TODO update desctiption
[(tag, path)]
"""
CHROME_HISTORY_DBS: Optional[List[Tuple[str, str]]] = None

"""
This is the source for takeout.google.com
The path is one of the following:
- Unpacked takeout dir (so GOOGLE_TAKEOUT_PATH/My Activity/ is expected to exist)
- Takeout zip 
- Path which contains takeout zips (in which case the latest takeout will be processed)
If not set, the script will just skip it.
"""
GOOGLE_TAKEOUT_PATH: Optional[str] = None


"""
Specify commands which just output urls line by line
"""
CUSTOM_EXTRACTORS = [
    (
        'tag',
        extract_from_path("/home/user/Documents"),
    ),
    (
        'im-history',
        "some_custom_command_to_extract_from_im",
    )
]

"""
This directory contains output which is to be consumed by the plugin.
"""
OUTPUT_DIR: str

"""
Custom regexes for filtering out URLS. Can be a regex or a predicate returning True if the URL has to be filtered

e.g.
FILTERS = [
        'mail.google.com',
        lambda u: len(u) > 100,
]
"""
FILTERS = [
]


# TODO just keep CACHE_DIR as /tmp/promnesia in default config