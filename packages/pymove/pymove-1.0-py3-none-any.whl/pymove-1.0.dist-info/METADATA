Metadata-Version: 2.1
Name: pymove
Version: 1.0
Summary: A lib python to processing and visualization of trajectories and other spatial-temporal data
Home-page: https://github.com/InsightLab/PyMove
Author: Insight Data Science Lab
Author-email: insightlab@dc.ufc.br
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: tqdm
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: scipy
Requires-Dist: geojson
Requires-Dist: matplotlib
Requires-Dist: shapely
Requires-Dist: folium
Requires-Dist: mplleaflet
Requires-Dist: IPython
Requires-Dist: psutil
Requires-Dist: ipywidgets
Requires-Dist: resource
Requires-Dist: dask

# Use PyMove and go much further...

---
# What is PyMove?

PyMove is a Python library to processing and visualization of trajectories and other spatial-temporal data.

We will also release wrappers to some useful Java libraries frequently used in the mobility domain.

---

# Main Features

PyMove **proposes**:
-  A familiar and similar syntax to Pandas;
-  Clear documentation;
-  Extensibility, since you can implement your main data structure by manipulating other data structures such as Dask DataFrame, numpy arrays, etc., in addition to adding new modules;
-  Flexibility, as the user can switch between different data structures;
-  Operations for data preprocessing, pattern mining and data visualization.

---

# Examples

You can access examples of how to use PyMove [here](https://github.com/InsightLab/PyMove/tree/developer/examples)

---

# Useful list of related libraries and links
- [Handling GPS Data with Python](https://github.com/FlorianWilhelm/gps_data_with_python/tree/master/notebooks)
- [mplleaflet - Easily convert matplotlib plots from Python into interactive Leaflet web maps](https://github.com/jwass/mplleaflet)
- [Pykalman](https://github.com/pykalman/pykalman)
- [Ramer-Douglas-Peucker algorithm](https://github.com/fhirschmann/rdp)
- [Knee point detection in Python](https://github.com/arvkevi/kneed)
- [TrajSuite Java Library](https://github.com/lukehb/TrajSuite)
- [GraphHopper Map-Matching Java Library](https://github.com/graphhopper/map-matching)


