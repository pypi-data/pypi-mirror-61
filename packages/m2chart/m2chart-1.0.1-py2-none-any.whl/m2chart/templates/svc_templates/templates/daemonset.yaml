{{- if eq .Values.workloadType "daemonset" }}
{{- $root := . -}}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ include "app.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "app.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ include "app.name" . }}
      app.instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "app.name" . }}
        app.instance: {{ .Release.Name }}
        {{- if .Values.image.tag }}
        app.image.version: {{ .Values.image.tag | quote }}
        {{- end }}
      annotations:
    {{- if .Values.istioInject }}
        sidecar.istio.io/inject: "true"
    {{- else }}
        sidecar.istio.io/inject: "false"
    {{- end }}
    {{- with .Values.podAnnotations }}
    {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}{{ if .Values.image.tag }}{{ printf ":%s" .Values.image.tag }}{{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: PRO_ENV
            value: {{ .Values.global.gitbranch }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 10 -}}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /data
            name: data
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          {{- if .Values.usingCmpAgent }}
          - mountPath: /CMP_CONFIG
            name: config
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 10 -}}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 -}}
          {{- end }}
      {{- if .Values.usingCmpAgent }}
      initContainers:
      - env:
        - name: PRO_NAME
          value: {{ .Values.global.projectname }}
        - name: PRO_ENV
          value: {{ .Values.global.gitbranch }}
        image: "{{ .Values.global.init.image.repository }}:{{ .Values.global.init.image.tag }}"
        imagePullPolicy: {{ .Values.global.init.image.pullPolicy }}
        name: cmp-agent
        volumeMounts:
        - mountPath: /CMP_CONFIG
          name: config
      {{- end }}
      tolerations:
      - operator: Exists
      serviceAccount: {{ include "app.name" . }}
      serviceAccountName: {{ include "app.name" . }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - hostPath:
          path: /var/log
          type: ""
        name: varlog
      - hostPath:
          path: /data
          type: ""
        name: data
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
    {{- if .Values.usingCmpAgent }}
      - name: config
        emptyDir: {}
    {{- end }}
    {{- with .Values.volumes }}
        {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- range .Values.persistence }}
      - persistentVolumeClaim:
          claimName: {{ include "app.fullname" $root }}-{{ .name }}
        name: {{ .name }}
    {{- end }}
{{- end }}
