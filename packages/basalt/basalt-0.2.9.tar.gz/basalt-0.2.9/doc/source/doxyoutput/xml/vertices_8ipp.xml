<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="vertices_8ipp" kind="file" language="C++">
    <compoundname>vertices.ipp</compoundname>
    <includes local="no">sstream</includes>
    <includes refid="graph_8hpp" local="no">basalt/graph.hpp</includes>
    <includes refid="status_8hpp" local="no">basalt/status.hpp</includes>
    <includedby refid="vertices_8hpp" local="no">/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertices.hpp</includedby>
    <incdepgraph>
      <node id="110">
        <label>basalt/status.hpp</label>
        <link refid="status_8hpp_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>limits</label>
      </node>
      <node id="105">
        <label>string</label>
      </node>
      <node id="98">
        <label>/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertices.ipp</label>
        <link refid="vertices_8ipp"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>basalt/graph.hpp</label>
        <link refid="graph_8hpp_source"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>fstream</label>
      </node>
      <node id="107">
        <label>vector</label>
      </node>
      <node id="106">
        <label>utility</label>
      </node>
      <node id="99">
        <label>sstream</label>
      </node>
      <node id="108">
        <label>basalt/fwd.hpp</label>
        <link refid="fwd_8hpp_source"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>iosfwd</label>
      </node>
      <node id="109">
        <label>cstddef</label>
      </node>
      <node id="104">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="112">
        <label>/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertices.hpp</label>
        <link refid="vertices_8hpp_source"/>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertices.ipp</label>
        <link refid="vertices_8ipp"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>/goinfre/src/github.com/BlueBrain/basalt/include/basalt/basalt.hpp</label>
        <link refid="basalt_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacebasalt">basalt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;basalt/graph.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;basalt/status.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">basalt<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;EdgeOrientation<sp/>Orientation&gt;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Payload&gt;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">Status<sp/><ref refid="classbasalt_1_1Vertices_1ab5200c83faccbfb9ae12277e3a7a50eb" kindref="member">Vertices&lt;Orientation&gt;::insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vertex_uid_t&amp;<sp/>vertex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Payload&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>commit)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>data.serialize(oss);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\fixme<sp/>TCL<sp/>get<sp/>buffer<sp/>beginning<sp/>and<sp/>length<sp/>from<sp/>ostringstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>extra<sp/>std::string<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>raw(oss.str());</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>insert(vertex,<sp/>raw.c_str(),<sp/>raw.size(),<sp/>commit);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;EdgeOrientation<sp/>Orientation&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">Status<sp/><ref refid="classbasalt_1_1Vertices_1ab21ae091857ee1e5c1614cfd617f615d" kindref="member">Vertices&lt;Orientation&gt;::get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vertex_uid_t&amp;<sp/>vertex,<sp/>T&amp;<sp/>payload)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>data;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>status<sp/>=<sp/>get(vertex,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>istr;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istr.rdbuf()-&gt;pubsetbuf(const_cast&lt;char*&gt;(data.c_str()),<sp/>static_cast&lt;long&gt;(data.size()));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payload.deserialize(istr);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>basalt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertices.ipp"/>
  </compounddef>
</doxygen>
