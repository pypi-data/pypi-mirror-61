<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classbasalt_1_1VertexIterator" kind="class" language="C++" prot="public">
    <compoundname>basalt::VertexIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::iterator&lt; std::input_iterator_tag, const vertex_uid_t &gt;</basecompoundref>
    <includes refid="vertex__iterator_8hpp" local="no">vertex_iterator.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classbasalt_1_1VertexIterator_1ae0934dc22997b03e14e6bf105ad9318b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EdgeOrientation</type>
            <declname>Orientation</declname>
            <defname>Orientation</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>basalt::VertexIterator::VertexIterator</definition>
        <argsstring>(const GraphImpl&lt; Orientation &gt; &amp;pimpl, size_t from)</argsstring>
        <name>VertexIterator</name>
        <param>
          <type>const <ref refid="classbasalt_1_1GraphImpl" kindref="compound">GraphImpl</ref>&lt; Orientation &gt; &amp;</type>
          <declname>pimpl</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Ctors and dtors. </para>
        </briefdescription>
        <detaileddescription>
<para>Create an iterator over vertices <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pimpl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to implementation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Move iterator at specified index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classbasalt_1_1VertexIterator_1ab8694c25414617f897046a4875ed2bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>basalt::VertexIterator::VertexIterator</definition>
        <argsstring>(const VertexIterator &amp;other)</argsstring>
        <name>VertexIterator</name>
        <param>
          <type>const <ref refid="classbasalt_1_1VertexIterator" kindref="compound">VertexIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other iterator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="36" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classbasalt_1_1VertexIterator_1ad65aa5570cd0583ce7350c7ff506d03d" prot="public" static="no">
        <type>std::shared_ptr&lt; VertexIteratorImpl &gt;</type>
        <definition>using basalt::VertexIterator::VertexIteratorImpl_ptr =  std::shared_ptr&lt;VertexIteratorImpl&gt;</definition>
        <argsstring></argsstring>
        <name>VertexIteratorImpl_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="64" column="1" bodyfile="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbasalt_1_1VertexIterator_1aaac73669f18c2c9d19fcbcc8b9310562" prot="private" static="no" mutable="no">
        <type>VertexIteratorImpl_ptr</type>
        <definition>VertexIteratorImpl_ptr basalt::VertexIterator::pimpl_</definition>
        <argsstring></argsstring>
        <name>pimpl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="67" column="1" bodyfile="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbasalt_1_1VertexIterator_1a2cc22c42f7d46b898dcc33717bb13f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbasalt_1_1VertexIterator" kindref="compound">VertexIterator</ref> &amp;</type>
        <definition>VertexIterator&amp; basalt::VertexIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Move iterator to next element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>this instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classbasalt_1_1VertexIterator_1a168d2f5e84a2eabc10d495b9184eaeb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classbasalt_1_1VertexIterator" kindref="compound">VertexIterator</ref></type>
        <definition>const VertexIterator basalt::VertexIterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Advance the iterator by specified element positions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>copy of the iterator before the operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classbasalt_1_1VertexIterator_1ab281567fba02e2876f92f14b3fd843fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool basalt::VertexIterator::operator==</definition>
        <argsstring>(const VertexIterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classbasalt_1_1VertexIterator" kindref="compound">VertexIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>compare 2 vertex iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classbasalt_1_1VertexIterator_1acf67973805df7c722ad324851919083e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool basalt::VertexIterator::operator!=</definition>
        <argsstring>(const VertexIterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classbasalt_1_1VertexIterator" kindref="compound">VertexIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>compare 2 vertex iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classbasalt_1_1VertexIterator_1af3a1416d1a6cba66587ba10af4b53710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const value_type &amp;</type>
        <definition>const value_type&amp; basalt::VertexIterator::operator *</definition>
        <argsstring>()</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get vertex at the current iterator position <simplesect kind="return"><para>constant reference to element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="62" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator class for vertices. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12">
        <label>basalt::VertexIterator</label>
        <link refid="classbasalt_1_1VertexIterator"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::iterator&lt; std::input_iterator_tag, const vertex_uid_t &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14">
        <label>basalt::VertexIterator</label>
        <link refid="classbasalt_1_1VertexIterator"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>std::iterator&lt; std::input_iterator_tag, const vertex_uid_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" line="17" column="1" bodyfile="/goinfre/src/github.com/BlueBrain/basalt/include/basalt/vertex_iterator.hpp" bodystart="17" bodyend="68"/>
    <listofallmembers>
      <member refid="classbasalt_1_1VertexIterator_1af3a1416d1a6cba66587ba10af4b53710" prot="public" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>operator *</name></member>
      <member refid="classbasalt_1_1VertexIterator_1acf67973805df7c722ad324851919083e" prot="public" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>operator!=</name></member>
      <member refid="classbasalt_1_1VertexIterator_1a2cc22c42f7d46b898dcc33717bb13f12" prot="public" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>operator++</name></member>
      <member refid="classbasalt_1_1VertexIterator_1a168d2f5e84a2eabc10d495b9184eaeb9" prot="public" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>operator++</name></member>
      <member refid="classbasalt_1_1VertexIterator_1ab281567fba02e2876f92f14b3fd843fc" prot="public" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>operator==</name></member>
      <member refid="classbasalt_1_1VertexIterator_1aaac73669f18c2c9d19fcbcc8b9310562" prot="private" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>pimpl_</name></member>
      <member refid="classbasalt_1_1VertexIterator_1ae0934dc22997b03e14e6bf105ad9318b" prot="public" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>VertexIterator</name></member>
      <member refid="classbasalt_1_1VertexIterator_1ab8694c25414617f897046a4875ed2bb4" prot="public" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>VertexIterator</name></member>
      <member refid="classbasalt_1_1VertexIterator_1ad65aa5570cd0583ce7350c7ff506d03d" prot="public" virt="non-virtual"><scope>basalt::VertexIterator</scope><name>VertexIteratorImpl_ptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
