Metadata-Version: 2.1
Name: ethz-iam-webservice
Version: 0.0.4
Summary: Manage users, groups and services of the ETH Identity and Access Management system (IAM)
Home-page: https://gitlab.ethz.ch/vermeul/ethz-iam-webservice
Author: Swen Vermeul |  ID SIS | ETH ZÃ¼rich
Author-email: swen@ethz.ch
License: Apache Software License Version 2.0
Description: # ETHZ IAM Webservice
        
        Manage users, groups and services of the ETH Identity and Access Management system (IAM)
        
        ## Synopsis
        
        ```
        import ethz_iam_webservice
        import getpass
        
        e = ethz_iam_webservice.login('admin4iam', getpass.getpass())
        
        ########
        # Person
        ########
        person = e.get_person('name@example.com')
        person = e.get_person('some_username')
        person = e.get_person(123456) # npid, the identifer of every person
        
        person.usernames     # an array of dicts of usernames
        person.data          # the whole response
        person.firstname
        person.familyname
        person.email
        # etc.
        
        ######
        # User
        ######
        user = person.new_user('username', 'password', 'description')
        user = e.get_user('username')
        user.services        # returns an array of dicts of services
        
        user.grant_service("LDAPS")
        user.grant_service("Active Directory")
        user.grant_service("WLAN_VPN")
        
        user.revoke_service("LDAP")
        # etc.
        
        user.delete()  # Method currently not allowed
        user.add_to_group('groupname')
        user.remove_from_group('groupname')
        
        #########################
        # Group and Group Members
        #########################
        group = e.get_group('groupname')
        group.data          # all data received from webservice
        group.members       # returns array of usernames or group-names
        group.gidNumber
        ...
        group.add_members(['some', 'new', 'members'])
        group.set_members(['just', 'these'])
        group.del_members(['remove', 'these', 'members'])
        
        groups = e.get_groups(agroup='ID SIS')
        groups = e.get_groups(name='starts_with*')
        groups = e.get_groups(agroup='ID SIS', name='starts_with*')
        
        ```
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
