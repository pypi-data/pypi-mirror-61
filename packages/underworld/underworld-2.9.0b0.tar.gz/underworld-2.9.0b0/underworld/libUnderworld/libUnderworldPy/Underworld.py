# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _Underworld.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_Underworld')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_Underworld')
    _Underworld = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_Underworld', [dirname(__file__)])
        except ImportError:
            import _Underworld
            return _Underworld
        if fp is not None:
            try:
                _mod = imp.load_module('_Underworld', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _Underworld = swig_import_helper()
    del swig_import_helper
else:
    import _Underworld
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import underworld.libUnderworld.libUnderworldPy.StGermain
import underworld.libUnderworld.libUnderworldPy.StgDomain
import underworld.libUnderworld.libUnderworldPy.StgFEM
import underworld.libUnderworld.libUnderworldPy.PICellerator
import underworld.libUnderworld.libUnderworldPy.Function
class ConstitutiveMatrix(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.ConstitutiveMatrix__sizeOfSelf_get, _Underworld.ConstitutiveMatrix__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.ConstitutiveMatrix__deleteSelf_get, _Underworld.ConstitutiveMatrix__deleteSelf_set)
    type = _swig_property(_Underworld.ConstitutiveMatrix_type_get, _Underworld.ConstitutiveMatrix_type_set)
    nRefs = _swig_property(_Underworld.ConstitutiveMatrix_nRefs_get, _Underworld.ConstitutiveMatrix_nRefs_set)
    locked = _swig_property(_Underworld.ConstitutiveMatrix_locked_get, _Underworld.ConstitutiveMatrix_locked_set)
    _delete = _swig_property(_Underworld.ConstitutiveMatrix__delete_get, _Underworld.ConstitutiveMatrix__delete_set)
    _print = _swig_property(_Underworld.ConstitutiveMatrix__print_get, _Underworld.ConstitutiveMatrix__print_set)
    _copy = _swig_property(_Underworld.ConstitutiveMatrix__copy_get, _Underworld.ConstitutiveMatrix__copy_set)
    name = _swig_property(_Underworld.ConstitutiveMatrix_name_get, _Underworld.ConstitutiveMatrix_name_set)
    nameAllocationType = _swig_property(_Underworld.ConstitutiveMatrix_nameAllocationType_get, _Underworld.ConstitutiveMatrix_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.ConstitutiveMatrix__defaultConstructor_get, _Underworld.ConstitutiveMatrix__defaultConstructor_set)
    _construct = _swig_property(_Underworld.ConstitutiveMatrix__construct_get, _Underworld.ConstitutiveMatrix__construct_set)
    _build = _swig_property(_Underworld.ConstitutiveMatrix__build_get, _Underworld.ConstitutiveMatrix__build_set)
    _initialise = _swig_property(_Underworld.ConstitutiveMatrix__initialise_get, _Underworld.ConstitutiveMatrix__initialise_set)
    _execute = _swig_property(_Underworld.ConstitutiveMatrix__execute_get, _Underworld.ConstitutiveMatrix__execute_set)
    _destroy = _swig_property(_Underworld.ConstitutiveMatrix__destroy_get, _Underworld.ConstitutiveMatrix__destroy_set)
    isConstructed = _swig_property(_Underworld.ConstitutiveMatrix_isConstructed_get, _Underworld.ConstitutiveMatrix_isConstructed_set)
    isBuilt = _swig_property(_Underworld.ConstitutiveMatrix_isBuilt_get, _Underworld.ConstitutiveMatrix_isBuilt_set)
    isInitialised = _swig_property(_Underworld.ConstitutiveMatrix_isInitialised_get, _Underworld.ConstitutiveMatrix_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.ConstitutiveMatrix_hasExecuted_get, _Underworld.ConstitutiveMatrix_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.ConstitutiveMatrix_isDestroyed_get, _Underworld.ConstitutiveMatrix_isDestroyed_set)
    constructType = _swig_property(_Underworld.ConstitutiveMatrix_constructType_get, _Underworld.ConstitutiveMatrix_constructType_set)
    buildType = _swig_property(_Underworld.ConstitutiveMatrix_buildType_get, _Underworld.ConstitutiveMatrix_buildType_set)
    initialiseType = _swig_property(_Underworld.ConstitutiveMatrix_initialiseType_get, _Underworld.ConstitutiveMatrix_initialiseType_set)
    executeType = _swig_property(_Underworld.ConstitutiveMatrix_executeType_get, _Underworld.ConstitutiveMatrix_executeType_set)
    destroyType = _swig_property(_Underworld.ConstitutiveMatrix_destroyType_get, _Underworld.ConstitutiveMatrix_destroyType_set)
    context = _swig_property(_Underworld.ConstitutiveMatrix_context_get, _Underworld.ConstitutiveMatrix_context_set)
    _assembleElement = _swig_property(_Underworld.ConstitutiveMatrix__assembleElement_get, _Underworld.ConstitutiveMatrix__assembleElement_set)
    debug = _swig_property(_Underworld.ConstitutiveMatrix_debug_get, _Underworld.ConstitutiveMatrix_debug_set)
    integrationSwarm = _swig_property(_Underworld.ConstitutiveMatrix_integrationSwarm_get, _Underworld.ConstitutiveMatrix_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.ConstitutiveMatrix_extraInfo_get, _Underworld.ConstitutiveMatrix_extraInfo_set)
    stiffnessMatrix = _swig_property(_Underworld.ConstitutiveMatrix_stiffnessMatrix_get, _Underworld.ConstitutiveMatrix_stiffnessMatrix_set)
    GNx = _swig_property(_Underworld.ConstitutiveMatrix_GNx_get, _Underworld.ConstitutiveMatrix_GNx_set)
    N = _swig_property(_Underworld.ConstitutiveMatrix_N_get, _Underworld.ConstitutiveMatrix_N_set)
    max_nElNodes = _swig_property(_Underworld.ConstitutiveMatrix_max_nElNodes_get, _Underworld.ConstitutiveMatrix_max_nElNodes_set)
    _setValue = _swig_property(_Underworld.ConstitutiveMatrix__setValue_get, _Underworld.ConstitutiveMatrix__setValue_set)
    _getViscosity = _swig_property(_Underworld.ConstitutiveMatrix__getViscosity_get, _Underworld.ConstitutiveMatrix__getViscosity_set)
    _isotropicCorrection = _swig_property(_Underworld.ConstitutiveMatrix__isotropicCorrection_get, _Underworld.ConstitutiveMatrix__isotropicCorrection_set)
    _setSecondViscosity = _swig_property(_Underworld.ConstitutiveMatrix__setSecondViscosity_get, _Underworld.ConstitutiveMatrix__setSecondViscosity_set)
    _assemble_D_B = _swig_property(_Underworld.ConstitutiveMatrix__assemble_D_B_get, _Underworld.ConstitutiveMatrix__assemble_D_B_set)
    _calculateStress = _swig_property(_Underworld.ConstitutiveMatrix__calculateStress_get, _Underworld.ConstitutiveMatrix__calculateStress_set)
    matrixData = _swig_property(_Underworld.ConstitutiveMatrix_matrixData_get, _Underworld.ConstitutiveMatrix_matrixData_set)
    derivs = _swig_property(_Underworld.ConstitutiveMatrix_derivs_get, _Underworld.ConstitutiveMatrix_derivs_set)
    dim = _swig_property(_Underworld.ConstitutiveMatrix_dim_get, _Underworld.ConstitutiveMatrix_dim_set)
    isSwarmTypeIntegrationPointsSwarm = _swig_property(_Underworld.ConstitutiveMatrix_isSwarmTypeIntegrationPointsSwarm_get, _Underworld.ConstitutiveMatrix_isSwarmTypeIntegrationPointsSwarm_set)
    isDiagonal = _swig_property(_Underworld.ConstitutiveMatrix_isDiagonal_get, _Underworld.ConstitutiveMatrix_isDiagonal_set)
    columnSize = _swig_property(_Underworld.ConstitutiveMatrix_columnSize_get, _Underworld.ConstitutiveMatrix_columnSize_set)
    rowSize = _swig_property(_Underworld.ConstitutiveMatrix_rowSize_get, _Underworld.ConstitutiveMatrix_rowSize_set)
    previousSolutionExists = _swig_property(_Underworld.ConstitutiveMatrix_previousSolutionExists_get, _Underworld.ConstitutiveMatrix_previousSolutionExists_set)
    restartUsingPreviousStokesSol = _swig_property(_Underworld.ConstitutiveMatrix_restartUsingPreviousStokesSol_get, _Underworld.ConstitutiveMatrix_restartUsingPreviousStokesSol_set)
    currentParticleIndex = _swig_property(_Underworld.ConstitutiveMatrix_currentParticleIndex_get, _Underworld.ConstitutiveMatrix_currentParticleIndex_set)
    sle = _swig_property(_Underworld.ConstitutiveMatrix_sle_get, _Underworld.ConstitutiveMatrix_sle_set)
    sleNonLinearIteration_I = _swig_property(_Underworld.ConstitutiveMatrix_sleNonLinearIteration_I_get, _Underworld.ConstitutiveMatrix_sleNonLinearIteration_I_set)
    storeConstitutiveMatrix = _swig_property(_Underworld.ConstitutiveMatrix_storeConstitutiveMatrix_get, _Underworld.ConstitutiveMatrix_storeConstitutiveMatrix_set)
    storedConstHandle = _swig_property(_Underworld.ConstitutiveMatrix_storedConstHandle_get, _Underworld.ConstitutiveMatrix_storedConstHandle_set)
    storedConstSwarmVar = _swig_property(_Underworld.ConstitutiveMatrix_storedConstSwarmVar_get, _Underworld.ConstitutiveMatrix_storedConstSwarmVar_set)

    def __init__(self):
        _Underworld.ConstitutiveMatrix_swiginit(self, _Underworld.new_ConstitutiveMatrix())
    __swig_destroy__ = _Underworld.delete_ConstitutiveMatrix
ConstitutiveMatrix_swigregister = _Underworld.ConstitutiveMatrix_swigregister
ConstitutiveMatrix_swigregister(ConstitutiveMatrix)
cvar = _Underworld.cvar
ConstitutiveMatrix_Type = cvar.ConstitutiveMatrix_Type


def _ConstitutiveMatrix_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'StiffnessMatrixTerm_AssembleElementFunction *', _setValue: 'ConstitutiveMatrix_SetValueFunc *', _getViscosity: 'ConstitutiveMatrix_GetValueFunc *', _isotropicCorrection: 'ConstitutiveMatrix_SetValueFunc *', _setSecondViscosity: 'ConstitutiveMatrix_SetSecondViscosityFunc *', _assemble_D_B: 'ConstitutiveMatrix_Assemble_D_B_Func *', _calculateStress: 'ConstitutiveMatrix_CalculateStressFunc *') -> "ConstitutiveMatrix *":
    return _Underworld._ConstitutiveMatrix_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement, _setValue, _getViscosity, _isotropicCorrection, _setSecondViscosity, _assemble_D_B, _calculateStress)
_ConstitutiveMatrix_New = _Underworld._ConstitutiveMatrix_New

def _ConstitutiveMatrix_Delete(constitutiveMatrix: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrix_Delete(constitutiveMatrix)
_ConstitutiveMatrix_Delete = _Underworld._ConstitutiveMatrix_Delete

def _ConstitutiveMatrix_Print(constitutiveMatrix: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._ConstitutiveMatrix_Print(constitutiveMatrix, stream)
_ConstitutiveMatrix_Print = _Underworld._ConstitutiveMatrix_Print

def _ConstitutiveMatrix_Copy(constitutiveMatrix: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _Underworld._ConstitutiveMatrix_Copy(constitutiveMatrix, dest, deep, nameExt, ptrMap)
_ConstitutiveMatrix_Copy = _Underworld._ConstitutiveMatrix_Copy

def _ConstitutiveMatrix_AssignFromXML(constitutiveMatrix: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrix_AssignFromXML(constitutiveMatrix, cf, data)
_ConstitutiveMatrix_AssignFromXML = _Underworld._ConstitutiveMatrix_AssignFromXML

def _ConstitutiveMatrix_Build(constitutiveMatrix: 'void *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrix_Build(constitutiveMatrix, data)
_ConstitutiveMatrix_Build = _Underworld._ConstitutiveMatrix_Build

def _ConstitutiveMatrix_Initialise(constitutiveMatrix: 'void *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrix_Initialise(constitutiveMatrix, data)
_ConstitutiveMatrix_Initialise = _Underworld._ConstitutiveMatrix_Initialise

def _ConstitutiveMatrix_Execute(constitutiveMatrix: 'void *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrix_Execute(constitutiveMatrix, data)
_ConstitutiveMatrix_Execute = _Underworld._ConstitutiveMatrix_Execute

def _ConstitutiveMatrix_Destroy(constitutiveMatrix: 'void *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrix_Destroy(constitutiveMatrix, data)
_ConstitutiveMatrix_Destroy = _Underworld._ConstitutiveMatrix_Destroy

def _ConstitutiveMatrix_Init(arg1: 'ConstitutiveMatrix', dim: 'Dimension_Index', storeConstitutiveMatrix: 'Bool', restartUsingPreviousStokesSol: 'Bool') -> "void":
    return _Underworld._ConstitutiveMatrix_Init(arg1, dim, storeConstitutiveMatrix, restartUsingPreviousStokesSol)
_ConstitutiveMatrix_Init = _Underworld._ConstitutiveMatrix_Init

def ConstitutiveMatrix_MultiplyByValue(constitutiveMatrix: 'void *', factor: 'double') -> "void":
    return _Underworld.ConstitutiveMatrix_MultiplyByValue(constitutiveMatrix, factor)
ConstitutiveMatrix_MultiplyByValue = _Underworld.ConstitutiveMatrix_MultiplyByValue

def ConstitutiveMatrix_PrintContents(constitutiveMatrix: 'void *', stream: 'Stream *') -> "void":
    return _Underworld.ConstitutiveMatrix_PrintContents(constitutiveMatrix, stream)
ConstitutiveMatrix_PrintContents = _Underworld.ConstitutiveMatrix_PrintContents

def ConstitutiveMatrix_ZeroMatrix(constitutiveMatrix: 'void *') -> "void":
    return _Underworld.ConstitutiveMatrix_ZeroMatrix(constitutiveMatrix)
ConstitutiveMatrix_ZeroMatrix = _Underworld.ConstitutiveMatrix_ZeroMatrix

def ConstitutiveMatrix_SetIsotropicViscosity(constitutiveMatrix: 'void *', viscosity: 'double') -> "void":
    return _Underworld.ConstitutiveMatrix_SetIsotropicViscosity(constitutiveMatrix, viscosity)
ConstitutiveMatrix_SetIsotropicViscosity = _Underworld.ConstitutiveMatrix_SetIsotropicViscosity

def ConstitutiveMatrix_Assemble(constitutiveMatrix: 'void *', lElement_I: 'Element_LocalIndex', particleIndex: 'int', particle: 'IntegrationPoint *') -> "void":
    return _Underworld.ConstitutiveMatrix_Assemble(constitutiveMatrix, lElement_I, particleIndex, particle)
ConstitutiveMatrix_Assemble = _Underworld.ConstitutiveMatrix_Assemble
class ConstitutiveMatrixCartesian_cppdata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    func_visc1 = _swig_property(_Underworld.ConstitutiveMatrixCartesian_cppdata_func_visc1_get, _Underworld.ConstitutiveMatrixCartesian_cppdata_func_visc1_set)
    func_visc2 = _swig_property(_Underworld.ConstitutiveMatrixCartesian_cppdata_func_visc2_get, _Underworld.ConstitutiveMatrixCartesian_cppdata_func_visc2_set)
    func_director = _swig_property(_Underworld.ConstitutiveMatrixCartesian_cppdata_func_director_get, _Underworld.ConstitutiveMatrixCartesian_cppdata_func_director_set)
    input = _swig_property(_Underworld.ConstitutiveMatrixCartesian_cppdata_input_get, _Underworld.ConstitutiveMatrixCartesian_cppdata_input_set)

    def __init__(self):
        _Underworld.ConstitutiveMatrixCartesian_cppdata_swiginit(self, _Underworld.new_ConstitutiveMatrixCartesian_cppdata())
    __swig_destroy__ = _Underworld.delete_ConstitutiveMatrixCartesian_cppdata
ConstitutiveMatrixCartesian_cppdata_swigregister = _Underworld.ConstitutiveMatrixCartesian_cppdata_swigregister
ConstitutiveMatrixCartesian_cppdata_swigregister(ConstitutiveMatrixCartesian_cppdata)


def _ConstitutiveMatrixCartesian_Set_Fn_Visc1(_self: 'void *', fn_visc1: 'Function') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Set_Fn_Visc1(_self, fn_visc1)
_ConstitutiveMatrixCartesian_Set_Fn_Visc1 = _Underworld._ConstitutiveMatrixCartesian_Set_Fn_Visc1

def _ConstitutiveMatrixCartesian_Set_Fn_Visc2(_self: 'void *', fn_visc2: 'Function') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Set_Fn_Visc2(_self, fn_visc2)
_ConstitutiveMatrixCartesian_Set_Fn_Visc2 = _Underworld._ConstitutiveMatrixCartesian_Set_Fn_Visc2

def _ConstitutiveMatrixCartesian_Set_Fn_Director(_self: 'void *', fn_director: 'Function') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Set_Fn_Director(_self, fn_director)
_ConstitutiveMatrixCartesian_Set_Fn_Director = _Underworld._ConstitutiveMatrixCartesian_Set_Fn_Director
class ConstitutiveMatrixCartesian(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.ConstitutiveMatrixCartesian__sizeOfSelf_get, _Underworld.ConstitutiveMatrixCartesian__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.ConstitutiveMatrixCartesian__deleteSelf_get, _Underworld.ConstitutiveMatrixCartesian__deleteSelf_set)
    type = _swig_property(_Underworld.ConstitutiveMatrixCartesian_type_get, _Underworld.ConstitutiveMatrixCartesian_type_set)
    nRefs = _swig_property(_Underworld.ConstitutiveMatrixCartesian_nRefs_get, _Underworld.ConstitutiveMatrixCartesian_nRefs_set)
    locked = _swig_property(_Underworld.ConstitutiveMatrixCartesian_locked_get, _Underworld.ConstitutiveMatrixCartesian_locked_set)
    _delete = _swig_property(_Underworld.ConstitutiveMatrixCartesian__delete_get, _Underworld.ConstitutiveMatrixCartesian__delete_set)
    _print = _swig_property(_Underworld.ConstitutiveMatrixCartesian__print_get, _Underworld.ConstitutiveMatrixCartesian__print_set)
    _copy = _swig_property(_Underworld.ConstitutiveMatrixCartesian__copy_get, _Underworld.ConstitutiveMatrixCartesian__copy_set)
    name = _swig_property(_Underworld.ConstitutiveMatrixCartesian_name_get, _Underworld.ConstitutiveMatrixCartesian_name_set)
    nameAllocationType = _swig_property(_Underworld.ConstitutiveMatrixCartesian_nameAllocationType_get, _Underworld.ConstitutiveMatrixCartesian_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.ConstitutiveMatrixCartesian__defaultConstructor_get, _Underworld.ConstitutiveMatrixCartesian__defaultConstructor_set)
    _construct = _swig_property(_Underworld.ConstitutiveMatrixCartesian__construct_get, _Underworld.ConstitutiveMatrixCartesian__construct_set)
    _build = _swig_property(_Underworld.ConstitutiveMatrixCartesian__build_get, _Underworld.ConstitutiveMatrixCartesian__build_set)
    _initialise = _swig_property(_Underworld.ConstitutiveMatrixCartesian__initialise_get, _Underworld.ConstitutiveMatrixCartesian__initialise_set)
    _execute = _swig_property(_Underworld.ConstitutiveMatrixCartesian__execute_get, _Underworld.ConstitutiveMatrixCartesian__execute_set)
    _destroy = _swig_property(_Underworld.ConstitutiveMatrixCartesian__destroy_get, _Underworld.ConstitutiveMatrixCartesian__destroy_set)
    isConstructed = _swig_property(_Underworld.ConstitutiveMatrixCartesian_isConstructed_get, _Underworld.ConstitutiveMatrixCartesian_isConstructed_set)
    isBuilt = _swig_property(_Underworld.ConstitutiveMatrixCartesian_isBuilt_get, _Underworld.ConstitutiveMatrixCartesian_isBuilt_set)
    isInitialised = _swig_property(_Underworld.ConstitutiveMatrixCartesian_isInitialised_get, _Underworld.ConstitutiveMatrixCartesian_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.ConstitutiveMatrixCartesian_hasExecuted_get, _Underworld.ConstitutiveMatrixCartesian_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.ConstitutiveMatrixCartesian_isDestroyed_get, _Underworld.ConstitutiveMatrixCartesian_isDestroyed_set)
    constructType = _swig_property(_Underworld.ConstitutiveMatrixCartesian_constructType_get, _Underworld.ConstitutiveMatrixCartesian_constructType_set)
    buildType = _swig_property(_Underworld.ConstitutiveMatrixCartesian_buildType_get, _Underworld.ConstitutiveMatrixCartesian_buildType_set)
    initialiseType = _swig_property(_Underworld.ConstitutiveMatrixCartesian_initialiseType_get, _Underworld.ConstitutiveMatrixCartesian_initialiseType_set)
    executeType = _swig_property(_Underworld.ConstitutiveMatrixCartesian_executeType_get, _Underworld.ConstitutiveMatrixCartesian_executeType_set)
    destroyType = _swig_property(_Underworld.ConstitutiveMatrixCartesian_destroyType_get, _Underworld.ConstitutiveMatrixCartesian_destroyType_set)
    context = _swig_property(_Underworld.ConstitutiveMatrixCartesian_context_get, _Underworld.ConstitutiveMatrixCartesian_context_set)
    _assembleElement = _swig_property(_Underworld.ConstitutiveMatrixCartesian__assembleElement_get, _Underworld.ConstitutiveMatrixCartesian__assembleElement_set)
    debug = _swig_property(_Underworld.ConstitutiveMatrixCartesian_debug_get, _Underworld.ConstitutiveMatrixCartesian_debug_set)
    integrationSwarm = _swig_property(_Underworld.ConstitutiveMatrixCartesian_integrationSwarm_get, _Underworld.ConstitutiveMatrixCartesian_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.ConstitutiveMatrixCartesian_extraInfo_get, _Underworld.ConstitutiveMatrixCartesian_extraInfo_set)
    stiffnessMatrix = _swig_property(_Underworld.ConstitutiveMatrixCartesian_stiffnessMatrix_get, _Underworld.ConstitutiveMatrixCartesian_stiffnessMatrix_set)
    GNx = _swig_property(_Underworld.ConstitutiveMatrixCartesian_GNx_get, _Underworld.ConstitutiveMatrixCartesian_GNx_set)
    N = _swig_property(_Underworld.ConstitutiveMatrixCartesian_N_get, _Underworld.ConstitutiveMatrixCartesian_N_set)
    max_nElNodes = _swig_property(_Underworld.ConstitutiveMatrixCartesian_max_nElNodes_get, _Underworld.ConstitutiveMatrixCartesian_max_nElNodes_set)
    _setValue = _swig_property(_Underworld.ConstitutiveMatrixCartesian__setValue_get, _Underworld.ConstitutiveMatrixCartesian__setValue_set)
    _getViscosity = _swig_property(_Underworld.ConstitutiveMatrixCartesian__getViscosity_get, _Underworld.ConstitutiveMatrixCartesian__getViscosity_set)
    _isotropicCorrection = _swig_property(_Underworld.ConstitutiveMatrixCartesian__isotropicCorrection_get, _Underworld.ConstitutiveMatrixCartesian__isotropicCorrection_set)
    _setSecondViscosity = _swig_property(_Underworld.ConstitutiveMatrixCartesian__setSecondViscosity_get, _Underworld.ConstitutiveMatrixCartesian__setSecondViscosity_set)
    _assemble_D_B = _swig_property(_Underworld.ConstitutiveMatrixCartesian__assemble_D_B_get, _Underworld.ConstitutiveMatrixCartesian__assemble_D_B_set)
    _calculateStress = _swig_property(_Underworld.ConstitutiveMatrixCartesian__calculateStress_get, _Underworld.ConstitutiveMatrixCartesian__calculateStress_set)
    matrixData = _swig_property(_Underworld.ConstitutiveMatrixCartesian_matrixData_get, _Underworld.ConstitutiveMatrixCartesian_matrixData_set)
    derivs = _swig_property(_Underworld.ConstitutiveMatrixCartesian_derivs_get, _Underworld.ConstitutiveMatrixCartesian_derivs_set)
    dim = _swig_property(_Underworld.ConstitutiveMatrixCartesian_dim_get, _Underworld.ConstitutiveMatrixCartesian_dim_set)
    isSwarmTypeIntegrationPointsSwarm = _swig_property(_Underworld.ConstitutiveMatrixCartesian_isSwarmTypeIntegrationPointsSwarm_get, _Underworld.ConstitutiveMatrixCartesian_isSwarmTypeIntegrationPointsSwarm_set)
    isDiagonal = _swig_property(_Underworld.ConstitutiveMatrixCartesian_isDiagonal_get, _Underworld.ConstitutiveMatrixCartesian_isDiagonal_set)
    columnSize = _swig_property(_Underworld.ConstitutiveMatrixCartesian_columnSize_get, _Underworld.ConstitutiveMatrixCartesian_columnSize_set)
    rowSize = _swig_property(_Underworld.ConstitutiveMatrixCartesian_rowSize_get, _Underworld.ConstitutiveMatrixCartesian_rowSize_set)
    previousSolutionExists = _swig_property(_Underworld.ConstitutiveMatrixCartesian_previousSolutionExists_get, _Underworld.ConstitutiveMatrixCartesian_previousSolutionExists_set)
    restartUsingPreviousStokesSol = _swig_property(_Underworld.ConstitutiveMatrixCartesian_restartUsingPreviousStokesSol_get, _Underworld.ConstitutiveMatrixCartesian_restartUsingPreviousStokesSol_set)
    currentParticleIndex = _swig_property(_Underworld.ConstitutiveMatrixCartesian_currentParticleIndex_get, _Underworld.ConstitutiveMatrixCartesian_currentParticleIndex_set)
    sle = _swig_property(_Underworld.ConstitutiveMatrixCartesian_sle_get, _Underworld.ConstitutiveMatrixCartesian_sle_set)
    sleNonLinearIteration_I = _swig_property(_Underworld.ConstitutiveMatrixCartesian_sleNonLinearIteration_I_get, _Underworld.ConstitutiveMatrixCartesian_sleNonLinearIteration_I_set)
    storeConstitutiveMatrix = _swig_property(_Underworld.ConstitutiveMatrixCartesian_storeConstitutiveMatrix_get, _Underworld.ConstitutiveMatrixCartesian_storeConstitutiveMatrix_set)
    storedConstHandle = _swig_property(_Underworld.ConstitutiveMatrixCartesian_storedConstHandle_get, _Underworld.ConstitutiveMatrixCartesian_storedConstHandle_set)
    storedConstSwarmVar = _swig_property(_Underworld.ConstitutiveMatrixCartesian_storedConstSwarmVar_get, _Underworld.ConstitutiveMatrixCartesian_storedConstSwarmVar_set)
    Dtilda_B = _swig_property(_Underworld.ConstitutiveMatrixCartesian_Dtilda_B_get, _Underworld.ConstitutiveMatrixCartesian_Dtilda_B_set)
    Ni = _swig_property(_Underworld.ConstitutiveMatrixCartesian_Ni_get, _Underworld.ConstitutiveMatrixCartesian_Ni_set)
    beenHere = _swig_property(_Underworld.ConstitutiveMatrixCartesian_beenHere_get, _Underworld.ConstitutiveMatrixCartesian_beenHere_set)
    cppdata = _swig_property(_Underworld.ConstitutiveMatrixCartesian_cppdata_get, _Underworld.ConstitutiveMatrixCartesian_cppdata_set)

    def __init__(self):
        _Underworld.ConstitutiveMatrixCartesian_swiginit(self, _Underworld.new_ConstitutiveMatrixCartesian())
    __swig_destroy__ = _Underworld.delete_ConstitutiveMatrixCartesian
ConstitutiveMatrixCartesian_swigregister = _Underworld.ConstitutiveMatrixCartesian_swigregister
ConstitutiveMatrixCartesian_swigregister(ConstitutiveMatrixCartesian)
ConstitutiveMatrixCartesian_Type = cvar.ConstitutiveMatrixCartesian_Type


def _ConstitutiveMatrixCartesian_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'StiffnessMatrixTerm_AssembleElementFunction *', _setValue: 'ConstitutiveMatrix_SetValueFunc *', _getViscosity: 'ConstitutiveMatrix_GetValueFunc *', _isotropicCorrection: 'ConstitutiveMatrix_SetValueFunc *', _setSecondViscosity: 'ConstitutiveMatrix_SetSecondViscosityFunc *', _assemble_D_B: 'ConstitutiveMatrix_Assemble_D_B_Func *', _calculateStress: 'ConstitutiveMatrix_CalculateStressFunc *') -> "ConstitutiveMatrixCartesian *":
    return _Underworld._ConstitutiveMatrixCartesian_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement, _setValue, _getViscosity, _isotropicCorrection, _setSecondViscosity, _assemble_D_B, _calculateStress)
_ConstitutiveMatrixCartesian_New = _Underworld._ConstitutiveMatrixCartesian_New

def _ConstitutiveMatrixCartesian_Delete(constitutiveMatrix: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Delete(constitutiveMatrix)
_ConstitutiveMatrixCartesian_Delete = _Underworld._ConstitutiveMatrixCartesian_Delete

def _ConstitutiveMatrixCartesian_Print(constitutiveMatrix: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Print(constitutiveMatrix, stream)
_ConstitutiveMatrixCartesian_Print = _Underworld._ConstitutiveMatrixCartesian_Print

def _ConstitutiveMatrixCartesian_Init(arg1: 'ConstitutiveMatrixCartesian') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Init(arg1)
_ConstitutiveMatrixCartesian_Init = _Underworld._ConstitutiveMatrixCartesian_Init

def _ConstitutiveMatrixCartesian_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._ConstitutiveMatrixCartesian_DefaultNew(name)
_ConstitutiveMatrixCartesian_DefaultNew = _Underworld._ConstitutiveMatrixCartesian_DefaultNew

def _ConstitutiveMatrixCartesian_AssignFromXML(constitutiveMatrix: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_AssignFromXML(constitutiveMatrix, cf, data)
_ConstitutiveMatrixCartesian_AssignFromXML = _Underworld._ConstitutiveMatrixCartesian_AssignFromXML

def _ConstitutiveMatrixCartesian_Build(constitutiveMatrix: 'void *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Build(constitutiveMatrix, data)
_ConstitutiveMatrixCartesian_Build = _Underworld._ConstitutiveMatrixCartesian_Build

def _ConstitutiveMatrixCartesian_Initialise(constitutiveMatrix: 'void *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Initialise(constitutiveMatrix, data)
_ConstitutiveMatrixCartesian_Initialise = _Underworld._ConstitutiveMatrixCartesian_Initialise

def _ConstitutiveMatrixCartesian_Execute(constitutiveMatrix: 'void *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Execute(constitutiveMatrix, data)
_ConstitutiveMatrixCartesian_Execute = _Underworld._ConstitutiveMatrixCartesian_Execute

def _ConstitutiveMatrixCartesian_Destroy(constitutiveMatrix: 'void *', data: 'void *') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_Destroy(constitutiveMatrix, data)
_ConstitutiveMatrixCartesian_Destroy = _Underworld._ConstitutiveMatrixCartesian_Destroy

def _ConstitutiveMatrixCartesian_AssembleElement(constitutiveMatrix: 'void *', stiffnessMatrix: 'StiffnessMatrix', lElement_I: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMat: 'double **') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian_AssembleElement(constitutiveMatrix, stiffnessMatrix, lElement_I, sle, context, elStiffMat)
_ConstitutiveMatrixCartesian_AssembleElement = _Underworld._ConstitutiveMatrixCartesian_AssembleElement

def _ConstitutiveMatrixCartesian2D_SetValueInAllEntries(constitutiveMatrix: 'void *', value: 'double') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian2D_SetValueInAllEntries(constitutiveMatrix, value)
_ConstitutiveMatrixCartesian2D_SetValueInAllEntries = _Underworld._ConstitutiveMatrixCartesian2D_SetValueInAllEntries

def _ConstitutiveMatrixCartesian3D_SetValueInAllEntries(constitutiveMatrix: 'void *', value: 'double') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian3D_SetValueInAllEntries(constitutiveMatrix, value)
_ConstitutiveMatrixCartesian3D_SetValueInAllEntries = _Underworld._ConstitutiveMatrixCartesian3D_SetValueInAllEntries

def _ConstitutiveMatrixCartesian2D_GetIsotropicViscosity(constitutiveMatrix: 'void *') -> "double":
    return _Underworld._ConstitutiveMatrixCartesian2D_GetIsotropicViscosity(constitutiveMatrix)
_ConstitutiveMatrixCartesian2D_GetIsotropicViscosity = _Underworld._ConstitutiveMatrixCartesian2D_GetIsotropicViscosity

def _ConstitutiveMatrixCartesian3D_GetIsotropicViscosity(constitutiveMatrix: 'void *') -> "double":
    return _Underworld._ConstitutiveMatrixCartesian3D_GetIsotropicViscosity(constitutiveMatrix)
_ConstitutiveMatrixCartesian3D_GetIsotropicViscosity = _Underworld._ConstitutiveMatrixCartesian3D_GetIsotropicViscosity

def _ConstitutiveMatrixCartesian2D_IsotropicCorrection(constitutiveMatrix: 'void *', isotropicCorrection: 'double') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian2D_IsotropicCorrection(constitutiveMatrix, isotropicCorrection)
_ConstitutiveMatrixCartesian2D_IsotropicCorrection = _Underworld._ConstitutiveMatrixCartesian2D_IsotropicCorrection

def _ConstitutiveMatrixCartesian3D_IsotropicCorrection(constitutiveMatrix: 'void *', isotropicCorrection: 'double') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian3D_IsotropicCorrection(constitutiveMatrix, isotropicCorrection)
_ConstitutiveMatrixCartesian3D_IsotropicCorrection = _Underworld._ConstitutiveMatrixCartesian3D_IsotropicCorrection

def _ConstitutiveMatrixCartesian2D_SetSecondViscosity(constitutiveMatrix: 'void *', deltaViscosity: 'double', director: 'XYZ const') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian2D_SetSecondViscosity(constitutiveMatrix, deltaViscosity, director)
_ConstitutiveMatrixCartesian2D_SetSecondViscosity = _Underworld._ConstitutiveMatrixCartesian2D_SetSecondViscosity

def _ConstitutiveMatrixCartesian3D_SetSecondViscosity(constitutiveMatrix: 'void *', deltaViscosity: 'double', director: 'XYZ const') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian3D_SetSecondViscosity(constitutiveMatrix, deltaViscosity, director)
_ConstitutiveMatrixCartesian3D_SetSecondViscosity = _Underworld._ConstitutiveMatrixCartesian3D_SetSecondViscosity

def _ConstitutiveMatrixCartesian2D_Assemble_D_B(constitutiveMatrix: 'void *', GNx: 'double **', node_I: 'Node_Index', D_B: 'double **') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian2D_Assemble_D_B(constitutiveMatrix, GNx, node_I, D_B)
_ConstitutiveMatrixCartesian2D_Assemble_D_B = _Underworld._ConstitutiveMatrixCartesian2D_Assemble_D_B

def _ConstitutiveMatrixCartesian3D_Assemble_D_B(constitutiveMatrix: 'void *', GNx: 'double **', node_I: 'Node_Index', D_B: 'double **') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian3D_Assemble_D_B(constitutiveMatrix, GNx, node_I, D_B)
_ConstitutiveMatrixCartesian3D_Assemble_D_B = _Underworld._ConstitutiveMatrixCartesian3D_Assemble_D_B

def _ConstitutiveMatrixCartesian2D_CalculateStress(constitutiveMatrix: 'void *', strainRate: 'SymmetricTensor', stress: 'SymmetricTensor') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian2D_CalculateStress(constitutiveMatrix, strainRate, stress)
_ConstitutiveMatrixCartesian2D_CalculateStress = _Underworld._ConstitutiveMatrixCartesian2D_CalculateStress

def _ConstitutiveMatrixCartesian3D_CalculateStress(constitutiveMatrix: 'void *', strainRate: 'SymmetricTensor', stress: 'SymmetricTensor') -> "void":
    return _Underworld._ConstitutiveMatrixCartesian3D_CalculateStress(constitutiveMatrix, strainRate, stress)
_ConstitutiveMatrixCartesian3D_CalculateStress = _Underworld._ConstitutiveMatrixCartesian3D_CalculateStress

def Underworld_fetestexcept() -> "int":
    return _Underworld.Underworld_fetestexcept()
Underworld_fetestexcept = _Underworld.Underworld_fetestexcept

def Underworld_feclearexcept() -> "int":
    return _Underworld.Underworld_feclearexcept()
Underworld_feclearexcept = _Underworld.Underworld_feclearexcept
class SUPGVectorTerm_NA__Fn_cppdata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fn = _swig_property(_Underworld.SUPGVectorTerm_NA__Fn_cppdata_fn_get, _Underworld.SUPGVectorTerm_NA__Fn_cppdata_fn_set)
    func = _swig_property(_Underworld.SUPGVectorTerm_NA__Fn_cppdata_func_get, _Underworld.SUPGVectorTerm_NA__Fn_cppdata_func_set)
    input = _swig_property(_Underworld.SUPGVectorTerm_NA__Fn_cppdata_input_get, _Underworld.SUPGVectorTerm_NA__Fn_cppdata_input_set)

    def __init__(self):
        _Underworld.SUPGVectorTerm_NA__Fn_cppdata_swiginit(self, _Underworld.new_SUPGVectorTerm_NA__Fn_cppdata())
    __swig_destroy__ = _Underworld.delete_SUPGVectorTerm_NA__Fn_cppdata
SUPGVectorTerm_NA__Fn_cppdata_swigregister = _Underworld.SUPGVectorTerm_NA__Fn_cppdata_swigregister
SUPGVectorTerm_NA__Fn_cppdata_swigregister(SUPGVectorTerm_NA__Fn_cppdata)

class AdvectionDiffusionSLE(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.AdvectionDiffusionSLE__sizeOfSelf_get, _Underworld.AdvectionDiffusionSLE__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.AdvectionDiffusionSLE__deleteSelf_get, _Underworld.AdvectionDiffusionSLE__deleteSelf_set)
    type = _swig_property(_Underworld.AdvectionDiffusionSLE_type_get, _Underworld.AdvectionDiffusionSLE_type_set)
    nRefs = _swig_property(_Underworld.AdvectionDiffusionSLE_nRefs_get, _Underworld.AdvectionDiffusionSLE_nRefs_set)
    locked = _swig_property(_Underworld.AdvectionDiffusionSLE_locked_get, _Underworld.AdvectionDiffusionSLE_locked_set)
    _delete = _swig_property(_Underworld.AdvectionDiffusionSLE__delete_get, _Underworld.AdvectionDiffusionSLE__delete_set)
    _print = _swig_property(_Underworld.AdvectionDiffusionSLE__print_get, _Underworld.AdvectionDiffusionSLE__print_set)
    _copy = _swig_property(_Underworld.AdvectionDiffusionSLE__copy_get, _Underworld.AdvectionDiffusionSLE__copy_set)
    name = _swig_property(_Underworld.AdvectionDiffusionSLE_name_get, _Underworld.AdvectionDiffusionSLE_name_set)
    nameAllocationType = _swig_property(_Underworld.AdvectionDiffusionSLE_nameAllocationType_get, _Underworld.AdvectionDiffusionSLE_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.AdvectionDiffusionSLE__defaultConstructor_get, _Underworld.AdvectionDiffusionSLE__defaultConstructor_set)
    _construct = _swig_property(_Underworld.AdvectionDiffusionSLE__construct_get, _Underworld.AdvectionDiffusionSLE__construct_set)
    _build = _swig_property(_Underworld.AdvectionDiffusionSLE__build_get, _Underworld.AdvectionDiffusionSLE__build_set)
    _initialise = _swig_property(_Underworld.AdvectionDiffusionSLE__initialise_get, _Underworld.AdvectionDiffusionSLE__initialise_set)
    _execute = _swig_property(_Underworld.AdvectionDiffusionSLE__execute_get, _Underworld.AdvectionDiffusionSLE__execute_set)
    _destroy = _swig_property(_Underworld.AdvectionDiffusionSLE__destroy_get, _Underworld.AdvectionDiffusionSLE__destroy_set)
    isConstructed = _swig_property(_Underworld.AdvectionDiffusionSLE_isConstructed_get, _Underworld.AdvectionDiffusionSLE_isConstructed_set)
    isBuilt = _swig_property(_Underworld.AdvectionDiffusionSLE_isBuilt_get, _Underworld.AdvectionDiffusionSLE_isBuilt_set)
    isInitialised = _swig_property(_Underworld.AdvectionDiffusionSLE_isInitialised_get, _Underworld.AdvectionDiffusionSLE_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.AdvectionDiffusionSLE_hasExecuted_get, _Underworld.AdvectionDiffusionSLE_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.AdvectionDiffusionSLE_isDestroyed_get, _Underworld.AdvectionDiffusionSLE_isDestroyed_set)
    constructType = _swig_property(_Underworld.AdvectionDiffusionSLE_constructType_get, _Underworld.AdvectionDiffusionSLE_constructType_set)
    buildType = _swig_property(_Underworld.AdvectionDiffusionSLE_buildType_get, _Underworld.AdvectionDiffusionSLE_buildType_set)
    initialiseType = _swig_property(_Underworld.AdvectionDiffusionSLE_initialiseType_get, _Underworld.AdvectionDiffusionSLE_initialiseType_set)
    executeType = _swig_property(_Underworld.AdvectionDiffusionSLE_executeType_get, _Underworld.AdvectionDiffusionSLE_executeType_set)
    destroyType = _swig_property(_Underworld.AdvectionDiffusionSLE_destroyType_get, _Underworld.AdvectionDiffusionSLE_destroyType_set)
    extensionManager = _swig_property(_Underworld.AdvectionDiffusionSLE_extensionManager_get, _Underworld.AdvectionDiffusionSLE_extensionManager_set)
    _LM_Setup = _swig_property(_Underworld.AdvectionDiffusionSLE__LM_Setup_get, _Underworld.AdvectionDiffusionSLE__LM_Setup_set)
    _matrixSetup = _swig_property(_Underworld.AdvectionDiffusionSLE__matrixSetup_get, _Underworld.AdvectionDiffusionSLE__matrixSetup_set)
    _vectorSetup = _swig_property(_Underworld.AdvectionDiffusionSLE__vectorSetup_get, _Underworld.AdvectionDiffusionSLE__vectorSetup_set)
    _updateSolutionOntoNodes = _swig_property(_Underworld.AdvectionDiffusionSLE__updateSolutionOntoNodes_get, _Underworld.AdvectionDiffusionSLE__updateSolutionOntoNodes_set)
    _mgSelectStiffMats = _swig_property(_Underworld.AdvectionDiffusionSLE__mgSelectStiffMats_get, _Underworld.AdvectionDiffusionSLE__mgSelectStiffMats_set)
    debug = _swig_property(_Underworld.AdvectionDiffusionSLE_debug_get, _Underworld.AdvectionDiffusionSLE_debug_set)
    info = _swig_property(_Underworld.AdvectionDiffusionSLE_info_get, _Underworld.AdvectionDiffusionSLE_info_set)
    convergenceStream = _swig_property(_Underworld.AdvectionDiffusionSLE_convergenceStream_get, _Underworld.AdvectionDiffusionSLE_convergenceStream_set)
    makeConvergenceFile = _swig_property(_Underworld.AdvectionDiffusionSLE_makeConvergenceFile_get, _Underworld.AdvectionDiffusionSLE_makeConvergenceFile_set)
    comm = _swig_property(_Underworld.AdvectionDiffusionSLE_comm_get, _Underworld.AdvectionDiffusionSLE_comm_set)
    stiffnessMatrices = _swig_property(_Underworld.AdvectionDiffusionSLE_stiffnessMatrices_get, _Underworld.AdvectionDiffusionSLE_stiffnessMatrices_set)
    forceVectors = _swig_property(_Underworld.AdvectionDiffusionSLE_forceVectors_get, _Underworld.AdvectionDiffusionSLE_forceVectors_set)
    solutionVectors = _swig_property(_Underworld.AdvectionDiffusionSLE_solutionVectors_get, _Underworld.AdvectionDiffusionSLE_solutionVectors_set)
    solver = _swig_property(_Underworld.AdvectionDiffusionSLE_solver_get, _Underworld.AdvectionDiffusionSLE_solver_set)
    context = _swig_property(_Underworld.AdvectionDiffusionSLE_context_get, _Underworld.AdvectionDiffusionSLE_context_set)
    executeEPName = _swig_property(_Underworld.AdvectionDiffusionSLE_executeEPName_get, _Underworld.AdvectionDiffusionSLE_executeEPName_set)
    executeEP = _swig_property(_Underworld.AdvectionDiffusionSLE_executeEP_get, _Underworld.AdvectionDiffusionSLE_executeEP_set)
    integrationSetupEPName = _swig_property(_Underworld.AdvectionDiffusionSLE_integrationSetupEPName_get, _Underworld.AdvectionDiffusionSLE_integrationSetupEPName_set)
    integrationSetupEP = _swig_property(_Underworld.AdvectionDiffusionSLE_integrationSetupEP_get, _Underworld.AdvectionDiffusionSLE_integrationSetupEP_set)
    entryPoint_Register = _swig_property(_Underworld.AdvectionDiffusionSLE_entryPoint_Register_get, _Underworld.AdvectionDiffusionSLE_entryPoint_Register_set)
    isNonLinear = _swig_property(_Underworld.AdvectionDiffusionSLE_isNonLinear_get, _Underworld.AdvectionDiffusionSLE_isNonLinear_set)
    linearExecute = _swig_property(_Underworld.AdvectionDiffusionSLE_linearExecute_get, _Underworld.AdvectionDiffusionSLE_linearExecute_set)
    nonLinearTolerance = _swig_property(_Underworld.AdvectionDiffusionSLE_nonLinearTolerance_get, _Underworld.AdvectionDiffusionSLE_nonLinearTolerance_set)
    nonLinearMaxIterations = _swig_property(_Underworld.AdvectionDiffusionSLE_nonLinearMaxIterations_get, _Underworld.AdvectionDiffusionSLE_nonLinearMaxIterations_set)
    nonLinearIteration_I = _swig_property(_Underworld.AdvectionDiffusionSLE_nonLinearIteration_I_get, _Underworld.AdvectionDiffusionSLE_nonLinearIteration_I_set)
    killNonConvergent = _swig_property(_Underworld.AdvectionDiffusionSLE_killNonConvergent_get, _Underworld.AdvectionDiffusionSLE_killNonConvergent_set)
    nonLinearMinIterations = _swig_property(_Underworld.AdvectionDiffusionSLE_nonLinearMinIterations_get, _Underworld.AdvectionDiffusionSLE_nonLinearMinIterations_set)
    curResidual = _swig_property(_Underworld.AdvectionDiffusionSLE_curResidual_get, _Underworld.AdvectionDiffusionSLE_curResidual_set)
    curSolveTime = _swig_property(_Underworld.AdvectionDiffusionSLE_curSolveTime_get, _Underworld.AdvectionDiffusionSLE_curSolveTime_set)
    nlSetupEPName = _swig_property(_Underworld.AdvectionDiffusionSLE_nlSetupEPName_get, _Underworld.AdvectionDiffusionSLE_nlSetupEPName_set)
    nlSetupEP = _swig_property(_Underworld.AdvectionDiffusionSLE_nlSetupEP_get, _Underworld.AdvectionDiffusionSLE_nlSetupEP_set)
    nlEPName = _swig_property(_Underworld.AdvectionDiffusionSLE_nlEPName_get, _Underworld.AdvectionDiffusionSLE_nlEPName_set)
    nlEP = _swig_property(_Underworld.AdvectionDiffusionSLE_nlEP_get, _Underworld.AdvectionDiffusionSLE_nlEP_set)
    postNlEPName = _swig_property(_Underworld.AdvectionDiffusionSLE_postNlEPName_get, _Underworld.AdvectionDiffusionSLE_postNlEPName_set)
    postNlEP = _swig_property(_Underworld.AdvectionDiffusionSLE_postNlEP_get, _Underworld.AdvectionDiffusionSLE_postNlEP_set)
    nlConvergedEPName = _swig_property(_Underworld.AdvectionDiffusionSLE_nlConvergedEPName_get, _Underworld.AdvectionDiffusionSLE_nlConvergedEPName_set)
    nlConvergedEP = _swig_property(_Underworld.AdvectionDiffusionSLE_nlConvergedEP_get, _Underworld.AdvectionDiffusionSLE_nlConvergedEP_set)
    nlFormJacobian = _swig_property(_Underworld.AdvectionDiffusionSLE_nlFormJacobian_get, _Underworld.AdvectionDiffusionSLE_nlFormJacobian_set)
    nlCurIterate = _swig_property(_Underworld.AdvectionDiffusionSLE_nlCurIterate_get, _Underworld.AdvectionDiffusionSLE_nlCurIterate_set)
    mgEnabled = _swig_property(_Underworld.AdvectionDiffusionSLE_mgEnabled_get, _Underworld.AdvectionDiffusionSLE_mgEnabled_set)
    mgUpdate = _swig_property(_Underworld.AdvectionDiffusionSLE_mgUpdate_get, _Underworld.AdvectionDiffusionSLE_mgUpdate_set)
    nMGHandles = _swig_property(_Underworld.AdvectionDiffusionSLE_nMGHandles_get, _Underworld.AdvectionDiffusionSLE_nMGHandles_set)
    mgHandles = _swig_property(_Underworld.AdvectionDiffusionSLE_mgHandles_get, _Underworld.AdvectionDiffusionSLE_mgHandles_set)
    nonLinearSolutionType = _swig_property(_Underworld.AdvectionDiffusionSLE_nonLinearSolutionType_get, _Underworld.AdvectionDiffusionSLE_nonLinearSolutionType_set)
    _buildF = _swig_property(_Underworld.AdvectionDiffusionSLE__buildF_get, _Underworld.AdvectionDiffusionSLE__buildF_set)
    _buildJ = _swig_property(_Underworld.AdvectionDiffusionSLE__buildJ_get, _Underworld.AdvectionDiffusionSLE__buildJ_set)
    buildFContext = _swig_property(_Underworld.AdvectionDiffusionSLE_buildFContext_get, _Underworld.AdvectionDiffusionSLE_buildFContext_set)
    buildJContext = _swig_property(_Underworld.AdvectionDiffusionSLE_buildJContext_get, _Underworld.AdvectionDiffusionSLE_buildJContext_set)
    nlSolver = _swig_property(_Underworld.AdvectionDiffusionSLE_nlSolver_get, _Underworld.AdvectionDiffusionSLE_nlSolver_set)
    linearSolveInitGuess = _swig_property(_Underworld.AdvectionDiffusionSLE_linearSolveInitGuess_get, _Underworld.AdvectionDiffusionSLE_linearSolveInitGuess_set)
    F = _swig_property(_Underworld.AdvectionDiffusionSLE_F_get, _Underworld.AdvectionDiffusionSLE_F_set)
    X = _swig_property(_Underworld.AdvectionDiffusionSLE_X_get, _Underworld.AdvectionDiffusionSLE_X_set)
    A = _swig_property(_Underworld.AdvectionDiffusionSLE_A_get, _Underworld.AdvectionDiffusionSLE_A_set)
    J = _swig_property(_Underworld.AdvectionDiffusionSLE_J_get, _Underworld.AdvectionDiffusionSLE_J_set)
    P = _swig_property(_Underworld.AdvectionDiffusionSLE_P_get, _Underworld.AdvectionDiffusionSLE_P_set)
    _setFFunc = _swig_property(_Underworld.AdvectionDiffusionSLE__setFFunc_get, _Underworld.AdvectionDiffusionSLE__setFFunc_set)
    _configureNLSolverFunc = _swig_property(_Underworld.AdvectionDiffusionSLE__configureNLSolverFunc_get, _Underworld.AdvectionDiffusionSLE__configureNLSolverFunc_set)
    _updateOldFields = _swig_property(_Underworld.AdvectionDiffusionSLE__updateOldFields_get, _Underworld.AdvectionDiffusionSLE__updateOldFields_set)
    optionsPrefix = _swig_property(_Underworld.AdvectionDiffusionSLE_optionsPrefix_get, _Underworld.AdvectionDiffusionSLE_optionsPrefix_set)
    picard_form_function_type = _swig_property(_Underworld.AdvectionDiffusionSLE_picard_form_function_type_get, _Underworld.AdvectionDiffusionSLE_picard_form_function_type_set)
    alpha = _swig_property(_Underworld.AdvectionDiffusionSLE_alpha_get, _Underworld.AdvectionDiffusionSLE_alpha_set)
    rtol = _swig_property(_Underworld.AdvectionDiffusionSLE_rtol_get, _Underworld.AdvectionDiffusionSLE_rtol_set)
    ttol = _swig_property(_Underworld.AdvectionDiffusionSLE_ttol_get, _Underworld.AdvectionDiffusionSLE_ttol_set)
    stol = _swig_property(_Underworld.AdvectionDiffusionSLE_stol_get, _Underworld.AdvectionDiffusionSLE_stol_set)
    abstol = _swig_property(_Underworld.AdvectionDiffusionSLE_abstol_get, _Underworld.AdvectionDiffusionSLE_abstol_set)
    picard_monitor = _swig_property(_Underworld.AdvectionDiffusionSLE_picard_monitor_get, _Underworld.AdvectionDiffusionSLE_picard_monitor_set)
    _sleFormFunction = _swig_property(_Underworld.AdvectionDiffusionSLE__sleFormFunction_get, _Underworld.AdvectionDiffusionSLE__sleFormFunction_set)
    runatExecutePhase = _swig_property(_Underworld.AdvectionDiffusionSLE_runatExecutePhase_get, _Underworld.AdvectionDiffusionSLE_runatExecutePhase_set)
    solver_callback = _swig_property(_Underworld.AdvectionDiffusionSLE_solver_callback_get, _Underworld.AdvectionDiffusionSLE_solver_callback_set)
    phiField = _swig_property(_Underworld.AdvectionDiffusionSLE_phiField_get, _Underworld.AdvectionDiffusionSLE_phiField_set)
    residual = _swig_property(_Underworld.AdvectionDiffusionSLE_residual_get, _Underworld.AdvectionDiffusionSLE_residual_set)
    massMatrix = _swig_property(_Underworld.AdvectionDiffusionSLE_massMatrix_get, _Underworld.AdvectionDiffusionSLE_massMatrix_set)
    dim = _swig_property(_Underworld.AdvectionDiffusionSLE_dim_get, _Underworld.AdvectionDiffusionSLE_dim_set)
    phiVector = _swig_property(_Underworld.AdvectionDiffusionSLE_phiVector_get, _Underworld.AdvectionDiffusionSLE_phiVector_set)
    phiDotField = _swig_property(_Underworld.AdvectionDiffusionSLE_phiDotField_get, _Underworld.AdvectionDiffusionSLE_phiDotField_set)
    phiDotDofLayout = _swig_property(_Underworld.AdvectionDiffusionSLE_phiDotDofLayout_get, _Underworld.AdvectionDiffusionSLE_phiDotDofLayout_set)
    phiDotVector = _swig_property(_Underworld.AdvectionDiffusionSLE_phiDotVector_get, _Underworld.AdvectionDiffusionSLE_phiDotVector_set)
    advDiffResidualForceTerm = _swig_property(_Underworld.AdvectionDiffusionSLE_advDiffResidualForceTerm_get, _Underworld.AdvectionDiffusionSLE_advDiffResidualForceTerm_set)
    currentDt = _swig_property(_Underworld.AdvectionDiffusionSLE_currentDt_get, _Underworld.AdvectionDiffusionSLE_currentDt_set)
    courantFactor = _swig_property(_Underworld.AdvectionDiffusionSLE_courantFactor_get, _Underworld.AdvectionDiffusionSLE_courantFactor_set)
    maxDiffusivity = _swig_property(_Underworld.AdvectionDiffusionSLE_maxDiffusivity_get, _Underworld.AdvectionDiffusionSLE_maxDiffusivity_set)
    variableReg = _swig_property(_Underworld.AdvectionDiffusionSLE_variableReg_get, _Underworld.AdvectionDiffusionSLE_variableReg_set)
    fieldVariableReg = _swig_property(_Underworld.AdvectionDiffusionSLE_fieldVariableReg_get, _Underworld.AdvectionDiffusionSLE_fieldVariableReg_set)
    pureDiffusion = _swig_property(_Underworld.AdvectionDiffusionSLE_pureDiffusion_get, _Underworld.AdvectionDiffusionSLE_pureDiffusion_set)
    cppdata = _swig_property(_Underworld.AdvectionDiffusionSLE_cppdata_get, _Underworld.AdvectionDiffusionSLE_cppdata_set)

    def __init__(self):
        _Underworld.AdvectionDiffusionSLE_swiginit(self, _Underworld.new_AdvectionDiffusionSLE())
    __swig_destroy__ = _Underworld.delete_AdvectionDiffusionSLE
AdvectionDiffusionSLE_swigregister = _Underworld.AdvectionDiffusionSLE_swigregister
AdvectionDiffusionSLE_swigregister(AdvectionDiffusionSLE)
AdvectionDiffusionSLE_Type = cvar.AdvectionDiffusionSLE_Type


def AdvectionDiffusionSLE_New(name: 'Name', context: 'FiniteElementContext *', solver: 'SLE_Solver', isNonLinear: 'Bool', nonLinearTolerance: 'double', nonLinearMaxIterations: 'Iteration_Index', killNonConvergent: 'Bool', entryPoint_Register: 'EntryPoint_Register *', comm: 'MPI_Comm', phiField: 'FeVariable', residual: 'ForceVector', massMatrix: 'Stg_Component *', dim: 'Dimension_Index', courantFactor: 'double', variable_Register: 'Variable_Register *', fieldVariable_Register: 'FieldVariable_Register *') -> "AdvectionDiffusionSLE *":
    return _Underworld.AdvectionDiffusionSLE_New(name, context, solver, isNonLinear, nonLinearTolerance, nonLinearMaxIterations, killNonConvergent, entryPoint_Register, comm, phiField, residual, massMatrix, dim, courantFactor, variable_Register, fieldVariable_Register)
AdvectionDiffusionSLE_New = _Underworld.AdvectionDiffusionSLE_New

def _AdvectionDiffusionSLE_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _LM_Setup: 'SystemLinearEquations_LM_SetupFunction *', _matrixSetup: 'SystemLinearEquations_MatrixSetupFunction *', _vectorSetup: 'SystemLinearEquations_VectorSetupFunction *', _updateSolutionOntoNodes: 'SystemLinearEquations_UpdateSolutionOntoNodesFunc *', _mgSelectStiffMats: 'SystemLinearEquations_MG_SelectStiffMatsFunc *') -> "AdvectionDiffusionSLE *":
    return _Underworld._AdvectionDiffusionSLE_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _LM_Setup, _matrixSetup, _vectorSetup, _updateSolutionOntoNodes, _mgSelectStiffMats)
_AdvectionDiffusionSLE_New = _Underworld._AdvectionDiffusionSLE_New

def _AdvectionDiffusionSLE_Init(sle: 'void *', phiField: 'FeVariable', residual: 'ForceVector', massMatrix: 'Stg_Component *', dim: 'Dimension_Index', courantFactor: 'double', variable_Register: 'Variable_Register *', fieldVariable_Register: 'FieldVariable_Register *') -> "void":
    return _Underworld._AdvectionDiffusionSLE_Init(sle, phiField, residual, massMatrix, dim, courantFactor, variable_Register, fieldVariable_Register)
_AdvectionDiffusionSLE_Init = _Underworld._AdvectionDiffusionSLE_Init

def __AdvDiffResidualForceTerm_UpdateLocalMemory(sle: 'AdvectionDiffusionSLE') -> "void":
    return _Underworld.__AdvDiffResidualForceTerm_UpdateLocalMemory(sle)
__AdvDiffResidualForceTerm_UpdateLocalMemory = _Underworld.__AdvDiffResidualForceTerm_UpdateLocalMemory

def _AdvectionDiffusionSLE_Delete(sle: 'void *') -> "void":
    return _Underworld._AdvectionDiffusionSLE_Delete(sle)
_AdvectionDiffusionSLE_Delete = _Underworld._AdvectionDiffusionSLE_Delete

def _AdvectionDiffusionSLE_Print(sle: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._AdvectionDiffusionSLE_Print(sle, stream)
_AdvectionDiffusionSLE_Print = _Underworld._AdvectionDiffusionSLE_Print

def _AdvectionDiffusionSLE_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._AdvectionDiffusionSLE_DefaultNew(name)
_AdvectionDiffusionSLE_DefaultNew = _Underworld._AdvectionDiffusionSLE_DefaultNew

def _AdvectionDiffusionSLE_AssignFromXML(sle: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._AdvectionDiffusionSLE_AssignFromXML(sle, cf, data)
_AdvectionDiffusionSLE_AssignFromXML = _Underworld._AdvectionDiffusionSLE_AssignFromXML

def _AdvectionDiffusionSLE_Build(sle: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvectionDiffusionSLE_Build(sle, data)
_AdvectionDiffusionSLE_Build = _Underworld._AdvectionDiffusionSLE_Build

def _AdvectionDiffusionSLE_Initialise(sle: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvectionDiffusionSLE_Initialise(sle, data)
_AdvectionDiffusionSLE_Initialise = _Underworld._AdvectionDiffusionSLE_Initialise

def _AdvectionDiffusionSLE_Execute(sle: 'void *', _context: 'void *') -> "void":
    return _Underworld._AdvectionDiffusionSLE_Execute(sle, _context)
_AdvectionDiffusionSLE_Execute = _Underworld._AdvectionDiffusionSLE_Execute

def _AdvectionDiffusionSLE_Destroy(sle: 'void *', _context: 'void *') -> "void":
    return _Underworld._AdvectionDiffusionSLE_Destroy(sle, _context)
_AdvectionDiffusionSLE_Destroy = _Underworld._AdvectionDiffusionSLE_Destroy

def _AdvectionDiffusionSLE_GetResidual(sle: 'void *', fv_I: 'Index') -> "Vec":
    return _Underworld._AdvectionDiffusionSLE_GetResidual(sle, fv_I)
_AdvectionDiffusionSLE_GetResidual = _Underworld._AdvectionDiffusionSLE_GetResidual

def AdvectionDiffusionSLE_ResetStoredValues(sle: 'void *') -> "void":
    return _Underworld.AdvectionDiffusionSLE_ResetStoredValues(sle)
AdvectionDiffusionSLE_ResetStoredValues = _Underworld.AdvectionDiffusionSLE_ResetStoredValues
class LumpedMassMatrixForceTerm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.LumpedMassMatrixForceTerm__sizeOfSelf_get, _Underworld.LumpedMassMatrixForceTerm__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.LumpedMassMatrixForceTerm__deleteSelf_get, _Underworld.LumpedMassMatrixForceTerm__deleteSelf_set)
    type = _swig_property(_Underworld.LumpedMassMatrixForceTerm_type_get, _Underworld.LumpedMassMatrixForceTerm_type_set)
    nRefs = _swig_property(_Underworld.LumpedMassMatrixForceTerm_nRefs_get, _Underworld.LumpedMassMatrixForceTerm_nRefs_set)
    locked = _swig_property(_Underworld.LumpedMassMatrixForceTerm_locked_get, _Underworld.LumpedMassMatrixForceTerm_locked_set)
    _delete = _swig_property(_Underworld.LumpedMassMatrixForceTerm__delete_get, _Underworld.LumpedMassMatrixForceTerm__delete_set)
    _print = _swig_property(_Underworld.LumpedMassMatrixForceTerm__print_get, _Underworld.LumpedMassMatrixForceTerm__print_set)
    _copy = _swig_property(_Underworld.LumpedMassMatrixForceTerm__copy_get, _Underworld.LumpedMassMatrixForceTerm__copy_set)
    name = _swig_property(_Underworld.LumpedMassMatrixForceTerm_name_get, _Underworld.LumpedMassMatrixForceTerm_name_set)
    nameAllocationType = _swig_property(_Underworld.LumpedMassMatrixForceTerm_nameAllocationType_get, _Underworld.LumpedMassMatrixForceTerm_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.LumpedMassMatrixForceTerm__defaultConstructor_get, _Underworld.LumpedMassMatrixForceTerm__defaultConstructor_set)
    _construct = _swig_property(_Underworld.LumpedMassMatrixForceTerm__construct_get, _Underworld.LumpedMassMatrixForceTerm__construct_set)
    _build = _swig_property(_Underworld.LumpedMassMatrixForceTerm__build_get, _Underworld.LumpedMassMatrixForceTerm__build_set)
    _initialise = _swig_property(_Underworld.LumpedMassMatrixForceTerm__initialise_get, _Underworld.LumpedMassMatrixForceTerm__initialise_set)
    _execute = _swig_property(_Underworld.LumpedMassMatrixForceTerm__execute_get, _Underworld.LumpedMassMatrixForceTerm__execute_set)
    _destroy = _swig_property(_Underworld.LumpedMassMatrixForceTerm__destroy_get, _Underworld.LumpedMassMatrixForceTerm__destroy_set)
    isConstructed = _swig_property(_Underworld.LumpedMassMatrixForceTerm_isConstructed_get, _Underworld.LumpedMassMatrixForceTerm_isConstructed_set)
    isBuilt = _swig_property(_Underworld.LumpedMassMatrixForceTerm_isBuilt_get, _Underworld.LumpedMassMatrixForceTerm_isBuilt_set)
    isInitialised = _swig_property(_Underworld.LumpedMassMatrixForceTerm_isInitialised_get, _Underworld.LumpedMassMatrixForceTerm_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.LumpedMassMatrixForceTerm_hasExecuted_get, _Underworld.LumpedMassMatrixForceTerm_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.LumpedMassMatrixForceTerm_isDestroyed_get, _Underworld.LumpedMassMatrixForceTerm_isDestroyed_set)
    constructType = _swig_property(_Underworld.LumpedMassMatrixForceTerm_constructType_get, _Underworld.LumpedMassMatrixForceTerm_constructType_set)
    buildType = _swig_property(_Underworld.LumpedMassMatrixForceTerm_buildType_get, _Underworld.LumpedMassMatrixForceTerm_buildType_set)
    initialiseType = _swig_property(_Underworld.LumpedMassMatrixForceTerm_initialiseType_get, _Underworld.LumpedMassMatrixForceTerm_initialiseType_set)
    executeType = _swig_property(_Underworld.LumpedMassMatrixForceTerm_executeType_get, _Underworld.LumpedMassMatrixForceTerm_executeType_set)
    destroyType = _swig_property(_Underworld.LumpedMassMatrixForceTerm_destroyType_get, _Underworld.LumpedMassMatrixForceTerm_destroyType_set)
    context = _swig_property(_Underworld.LumpedMassMatrixForceTerm_context_get, _Underworld.LumpedMassMatrixForceTerm_context_set)
    _assembleElement = _swig_property(_Underworld.LumpedMassMatrixForceTerm__assembleElement_get, _Underworld.LumpedMassMatrixForceTerm__assembleElement_set)
    debug = _swig_property(_Underworld.LumpedMassMatrixForceTerm_debug_get, _Underworld.LumpedMassMatrixForceTerm_debug_set)
    forceVector = _swig_property(_Underworld.LumpedMassMatrixForceTerm_forceVector_get, _Underworld.LumpedMassMatrixForceTerm_forceVector_set)
    integrationSwarm = _swig_property(_Underworld.LumpedMassMatrixForceTerm_integrationSwarm_get, _Underworld.LumpedMassMatrixForceTerm_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.LumpedMassMatrixForceTerm_extraInfo_get, _Underworld.LumpedMassMatrixForceTerm_extraInfo_set)

    def __init__(self):
        _Underworld.LumpedMassMatrixForceTerm_swiginit(self, _Underworld.new_LumpedMassMatrixForceTerm())
    __swig_destroy__ = _Underworld.delete_LumpedMassMatrixForceTerm
LumpedMassMatrixForceTerm_swigregister = _Underworld.LumpedMassMatrixForceTerm_swigregister
LumpedMassMatrixForceTerm_swigregister(LumpedMassMatrixForceTerm)
LumpedMassMatrixForceTerm_Type = cvar.LumpedMassMatrixForceTerm_Type


def LumpedMassMatrixForceTerm_New(name: 'Name', context: 'FiniteElementContext *', forceVector: 'ForceVector', integrationSwarm: 'Swarm') -> "LumpedMassMatrixForceTerm *":
    return _Underworld.LumpedMassMatrixForceTerm_New(name, context, forceVector, integrationSwarm)
LumpedMassMatrixForceTerm_New = _Underworld.LumpedMassMatrixForceTerm_New

def _LumpedMassMatrixForceTerm_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'ForceTerm_AssembleElementFunction *') -> "LumpedMassMatrixForceTerm *":
    return _Underworld._LumpedMassMatrixForceTerm_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_LumpedMassMatrixForceTerm_New = _Underworld._LumpedMassMatrixForceTerm_New

def _LumpedMassMatrixForceTerm_Init(forceTerm: 'void *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_Init(forceTerm)
_LumpedMassMatrixForceTerm_Init = _Underworld._LumpedMassMatrixForceTerm_Init

def _LumpedMassMatrixForceTerm_Delete(residual: 'void *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_Delete(residual)
_LumpedMassMatrixForceTerm_Delete = _Underworld._LumpedMassMatrixForceTerm_Delete

def _LumpedMassMatrixForceTerm_Print(residual: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_Print(residual, stream)
_LumpedMassMatrixForceTerm_Print = _Underworld._LumpedMassMatrixForceTerm_Print

def _LumpedMassMatrixForceTerm_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._LumpedMassMatrixForceTerm_DefaultNew(name)
_LumpedMassMatrixForceTerm_DefaultNew = _Underworld._LumpedMassMatrixForceTerm_DefaultNew

def _LumpedMassMatrixForceTerm_AssignFromXML(residual: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_AssignFromXML(residual, cf, data)
_LumpedMassMatrixForceTerm_AssignFromXML = _Underworld._LumpedMassMatrixForceTerm_AssignFromXML

def _LumpedMassMatrixForceTerm_Build(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_Build(residual, data)
_LumpedMassMatrixForceTerm_Build = _Underworld._LumpedMassMatrixForceTerm_Build

def _LumpedMassMatrixForceTerm_Initialise(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_Initialise(residual, data)
_LumpedMassMatrixForceTerm_Initialise = _Underworld._LumpedMassMatrixForceTerm_Initialise

def _LumpedMassMatrixForceTerm_Execute(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_Execute(residual, data)
_LumpedMassMatrixForceTerm_Execute = _Underworld._LumpedMassMatrixForceTerm_Execute

def _LumpedMassMatrixForceTerm_Destroy(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_Destroy(residual, data)
_LumpedMassMatrixForceTerm_Destroy = _Underworld._LumpedMassMatrixForceTerm_Destroy

def _LumpedMassMatrixForceTerm_AssembleElement(forceTerm: 'void *', forceVector: 'ForceVector', lElement_I: 'Element_LocalIndex', elForceVec: 'double *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_AssembleElement(forceTerm, forceVector, lElement_I, elForceVec)
_LumpedMassMatrixForceTerm_AssembleElement = _Underworld._LumpedMassMatrixForceTerm_AssembleElement

def _LumpedMassMatrixForceTerm_AssembleElement_General(forceTerm: 'void *', forceVector: 'ForceVector', lElement_I: 'Element_LocalIndex', elForceVector: 'double *') -> "void":
    return _Underworld._LumpedMassMatrixForceTerm_AssembleElement_General(forceTerm, forceVector, lElement_I, elForceVector)
_LumpedMassMatrixForceTerm_AssembleElement_General = _Underworld._LumpedMassMatrixForceTerm_AssembleElement_General
class AdvDiffMulticorrector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.AdvDiffMulticorrector__sizeOfSelf_get, _Underworld.AdvDiffMulticorrector__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.AdvDiffMulticorrector__deleteSelf_get, _Underworld.AdvDiffMulticorrector__deleteSelf_set)
    type = _swig_property(_Underworld.AdvDiffMulticorrector_type_get, _Underworld.AdvDiffMulticorrector_type_set)
    nRefs = _swig_property(_Underworld.AdvDiffMulticorrector_nRefs_get, _Underworld.AdvDiffMulticorrector_nRefs_set)
    locked = _swig_property(_Underworld.AdvDiffMulticorrector_locked_get, _Underworld.AdvDiffMulticorrector_locked_set)
    _delete = _swig_property(_Underworld.AdvDiffMulticorrector__delete_get, _Underworld.AdvDiffMulticorrector__delete_set)
    _print = _swig_property(_Underworld.AdvDiffMulticorrector__print_get, _Underworld.AdvDiffMulticorrector__print_set)
    _copy = _swig_property(_Underworld.AdvDiffMulticorrector__copy_get, _Underworld.AdvDiffMulticorrector__copy_set)
    name = _swig_property(_Underworld.AdvDiffMulticorrector_name_get, _Underworld.AdvDiffMulticorrector_name_set)
    nameAllocationType = _swig_property(_Underworld.AdvDiffMulticorrector_nameAllocationType_get, _Underworld.AdvDiffMulticorrector_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.AdvDiffMulticorrector__defaultConstructor_get, _Underworld.AdvDiffMulticorrector__defaultConstructor_set)
    _construct = _swig_property(_Underworld.AdvDiffMulticorrector__construct_get, _Underworld.AdvDiffMulticorrector__construct_set)
    _build = _swig_property(_Underworld.AdvDiffMulticorrector__build_get, _Underworld.AdvDiffMulticorrector__build_set)
    _initialise = _swig_property(_Underworld.AdvDiffMulticorrector__initialise_get, _Underworld.AdvDiffMulticorrector__initialise_set)
    _execute = _swig_property(_Underworld.AdvDiffMulticorrector__execute_get, _Underworld.AdvDiffMulticorrector__execute_set)
    _destroy = _swig_property(_Underworld.AdvDiffMulticorrector__destroy_get, _Underworld.AdvDiffMulticorrector__destroy_set)
    isConstructed = _swig_property(_Underworld.AdvDiffMulticorrector_isConstructed_get, _Underworld.AdvDiffMulticorrector_isConstructed_set)
    isBuilt = _swig_property(_Underworld.AdvDiffMulticorrector_isBuilt_get, _Underworld.AdvDiffMulticorrector_isBuilt_set)
    isInitialised = _swig_property(_Underworld.AdvDiffMulticorrector_isInitialised_get, _Underworld.AdvDiffMulticorrector_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.AdvDiffMulticorrector_hasExecuted_get, _Underworld.AdvDiffMulticorrector_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.AdvDiffMulticorrector_isDestroyed_get, _Underworld.AdvDiffMulticorrector_isDestroyed_set)
    constructType = _swig_property(_Underworld.AdvDiffMulticorrector_constructType_get, _Underworld.AdvDiffMulticorrector_constructType_set)
    buildType = _swig_property(_Underworld.AdvDiffMulticorrector_buildType_get, _Underworld.AdvDiffMulticorrector_buildType_set)
    initialiseType = _swig_property(_Underworld.AdvDiffMulticorrector_initialiseType_get, _Underworld.AdvDiffMulticorrector_initialiseType_set)
    executeType = _swig_property(_Underworld.AdvDiffMulticorrector_executeType_get, _Underworld.AdvDiffMulticorrector_executeType_set)
    destroyType = _swig_property(_Underworld.AdvDiffMulticorrector_destroyType_get, _Underworld.AdvDiffMulticorrector_destroyType_set)
    extensionManager = _swig_property(_Underworld.AdvDiffMulticorrector_extensionManager_get, _Underworld.AdvDiffMulticorrector_extensionManager_set)
    _solverSetup = _swig_property(_Underworld.AdvDiffMulticorrector__solverSetup_get, _Underworld.AdvDiffMulticorrector__solverSetup_set)
    _solve = _swig_property(_Underworld.AdvDiffMulticorrector__solve_get, _Underworld.AdvDiffMulticorrector__solve_set)
    _getResidual = _swig_property(_Underworld.AdvDiffMulticorrector__getResidual_get, _Underworld.AdvDiffMulticorrector__getResidual_set)
    _formResidual = _swig_property(_Underworld.AdvDiffMulticorrector__formResidual_get, _Underworld.AdvDiffMulticorrector__formResidual_set)
    _getRhs = _swig_property(_Underworld.AdvDiffMulticorrector__getRhs_get, _Underworld.AdvDiffMulticorrector__getRhs_set)
    _getSolution = _swig_property(_Underworld.AdvDiffMulticorrector__getSolution_get, _Underworld.AdvDiffMulticorrector__getSolution_set)
    debug = _swig_property(_Underworld.AdvDiffMulticorrector_debug_get, _Underworld.AdvDiffMulticorrector_debug_set)
    info = _swig_property(_Underworld.AdvDiffMulticorrector_info_get, _Underworld.AdvDiffMulticorrector_info_set)
    maxIterations = _swig_property(_Underworld.AdvDiffMulticorrector_maxIterations_get, _Underworld.AdvDiffMulticorrector_maxIterations_set)
    hasSolved = _swig_property(_Underworld.AdvDiffMulticorrector_hasSolved_get, _Underworld.AdvDiffMulticorrector_hasSolved_set)
    inneritsinitialtime = _swig_property(_Underworld.AdvDiffMulticorrector_inneritsinitialtime_get, _Underworld.AdvDiffMulticorrector_inneritsinitialtime_set)
    outeritsinitialtime = _swig_property(_Underworld.AdvDiffMulticorrector_outeritsinitialtime_get, _Underworld.AdvDiffMulticorrector_outeritsinitialtime_set)
    nonlinearitsinitialtime = _swig_property(_Underworld.AdvDiffMulticorrector_nonlinearitsinitialtime_get, _Underworld.AdvDiffMulticorrector_nonlinearitsinitialtime_set)
    inneritsendtime = _swig_property(_Underworld.AdvDiffMulticorrector_inneritsendtime_get, _Underworld.AdvDiffMulticorrector_inneritsendtime_set)
    outeritsendtime = _swig_property(_Underworld.AdvDiffMulticorrector_outeritsendtime_get, _Underworld.AdvDiffMulticorrector_outeritsendtime_set)
    nonlinearitsendtime = _swig_property(_Underworld.AdvDiffMulticorrector_nonlinearitsendtime_get, _Underworld.AdvDiffMulticorrector_nonlinearitsendtime_set)
    totalinneritstime = _swig_property(_Underworld.AdvDiffMulticorrector_totalinneritstime_get, _Underworld.AdvDiffMulticorrector_totalinneritstime_set)
    totalouteritstime = _swig_property(_Underworld.AdvDiffMulticorrector_totalouteritstime_get, _Underworld.AdvDiffMulticorrector_totalouteritstime_set)
    totalnonlinearitstime = _swig_property(_Underworld.AdvDiffMulticorrector_totalnonlinearitstime_get, _Underworld.AdvDiffMulticorrector_totalnonlinearitstime_set)
    totalnuminnerits = _swig_property(_Underworld.AdvDiffMulticorrector_totalnuminnerits_get, _Underworld.AdvDiffMulticorrector_totalnuminnerits_set)
    totalnumouterits = _swig_property(_Underworld.AdvDiffMulticorrector_totalnumouterits_get, _Underworld.AdvDiffMulticorrector_totalnumouterits_set)
    totalnumnonlinearits = _swig_property(_Underworld.AdvDiffMulticorrector_totalnumnonlinearits_get, _Underworld.AdvDiffMulticorrector_totalnumnonlinearits_set)
    avgnuminnerits = _swig_property(_Underworld.AdvDiffMulticorrector_avgnuminnerits_get, _Underworld.AdvDiffMulticorrector_avgnuminnerits_set)
    avgnumouterits = _swig_property(_Underworld.AdvDiffMulticorrector_avgnumouterits_get, _Underworld.AdvDiffMulticorrector_avgnumouterits_set)
    avgtimeinnerits = _swig_property(_Underworld.AdvDiffMulticorrector_avgtimeinnerits_get, _Underworld.AdvDiffMulticorrector_avgtimeinnerits_set)
    avgtimeouterits = _swig_property(_Underworld.AdvDiffMulticorrector_avgtimeouterits_get, _Underworld.AdvDiffMulticorrector_avgtimeouterits_set)
    avgtimenonlinearits = _swig_property(_Underworld.AdvDiffMulticorrector_avgtimenonlinearits_get, _Underworld.AdvDiffMulticorrector_avgtimenonlinearits_set)
    currenttimestep = _swig_property(_Underworld.AdvDiffMulticorrector_currenttimestep_get, _Underworld.AdvDiffMulticorrector_currenttimestep_set)
    previoustimestep = _swig_property(_Underworld.AdvDiffMulticorrector_previoustimestep_get, _Underworld.AdvDiffMulticorrector_previoustimestep_set)
    gamma = _swig_property(_Underworld.AdvDiffMulticorrector_gamma_get, _Underworld.AdvDiffMulticorrector_gamma_set)
    multiCorrectorIterations = _swig_property(_Underworld.AdvDiffMulticorrector_multiCorrectorIterations_get, _Underworld.AdvDiffMulticorrector_multiCorrectorIterations_set)
    matrixSolver = _swig_property(_Underworld.AdvDiffMulticorrector_matrixSolver_get, _Underworld.AdvDiffMulticorrector_matrixSolver_set)

    def __init__(self):
        _Underworld.AdvDiffMulticorrector_swiginit(self, _Underworld.new_AdvDiffMulticorrector())
    __swig_destroy__ = _Underworld.delete_AdvDiffMulticorrector
AdvDiffMulticorrector_swigregister = _Underworld.AdvDiffMulticorrector_swigregister
AdvDiffMulticorrector_swigregister(AdvDiffMulticorrector)
AdvDiffMulticorrector_Type = cvar.AdvDiffMulticorrector_Type


def AdvDiffMulticorrector_New(name: 'Name', gamma: 'double', multiCorrectorIterations: 'Iteration_Index') -> "AdvDiffMulticorrector *":
    return _Underworld.AdvDiffMulticorrector_New(name, gamma, multiCorrectorIterations)
AdvDiffMulticorrector_New = _Underworld.AdvDiffMulticorrector_New

def _AdvDiffMulticorrector_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _solverSetup: 'SLE_Solver_SolverSetupFunction *', _solve: 'SLE_Solver_SolveFunction *', _getResidual: 'SLE_Solver_GetResidualFunc *') -> "AdvDiffMulticorrector *":
    return _Underworld._AdvDiffMulticorrector_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _solverSetup, _solve, _getResidual)
_AdvDiffMulticorrector_New = _Underworld._AdvDiffMulticorrector_New

def _AdvDiffMulticorrector_Init(arg1: 'AdvDiffMulticorrector', gamma: 'double', multiCorrectorIterations: 'Iteration_Index') -> "void":
    return _Underworld._AdvDiffMulticorrector_Init(arg1, gamma, multiCorrectorIterations)
_AdvDiffMulticorrector_Init = _Underworld._AdvDiffMulticorrector_Init

def AdvDiffMulticorrector_InitAll(solver: 'void *', gamma: 'double', multiCorrectorIterations: 'Iteration_Index') -> "void":
    return _Underworld.AdvDiffMulticorrector_InitAll(solver, gamma, multiCorrectorIterations)
AdvDiffMulticorrector_InitAll = _Underworld.AdvDiffMulticorrector_InitAll

def _AdvDiffMulticorrector_Delete(solver: 'void *') -> "void":
    return _Underworld._AdvDiffMulticorrector_Delete(solver)
_AdvDiffMulticorrector_Delete = _Underworld._AdvDiffMulticorrector_Delete

def _AdvDiffMulticorrector_Print(solver: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._AdvDiffMulticorrector_Print(solver, stream)
_AdvDiffMulticorrector_Print = _Underworld._AdvDiffMulticorrector_Print

def _AdvDiffMulticorrector_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._AdvDiffMulticorrector_DefaultNew(name)
_AdvDiffMulticorrector_DefaultNew = _Underworld._AdvDiffMulticorrector_DefaultNew

def _AdvDiffMulticorrector_AssignFromXML(solver: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._AdvDiffMulticorrector_AssignFromXML(solver, cf, data)
_AdvDiffMulticorrector_AssignFromXML = _Underworld._AdvDiffMulticorrector_AssignFromXML

def _AdvDiffMulticorrector_Build(solver: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffMulticorrector_Build(solver, data)
_AdvDiffMulticorrector_Build = _Underworld._AdvDiffMulticorrector_Build

def _AdvDiffMulticorrector_Initialise(solver: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffMulticorrector_Initialise(solver, data)
_AdvDiffMulticorrector_Initialise = _Underworld._AdvDiffMulticorrector_Initialise

def _AdvDiffMulticorrector_Execute(solver: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffMulticorrector_Execute(solver, data)
_AdvDiffMulticorrector_Execute = _Underworld._AdvDiffMulticorrector_Execute

def _AdvDiffMulticorrector_Destroy(solver: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffMulticorrector_Destroy(solver, data)
_AdvDiffMulticorrector_Destroy = _Underworld._AdvDiffMulticorrector_Destroy

def _AdvDiffMulticorrector_SolverSetup(solver: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffMulticorrector_SolverSetup(solver, data)
_AdvDiffMulticorrector_SolverSetup = _Underworld._AdvDiffMulticorrector_SolverSetup

def _AdvDiffMulticorrector_Solve(solver: 'void *', _sle: 'void *') -> "void":
    return _Underworld._AdvDiffMulticorrector_Solve(solver, _sle)
_AdvDiffMulticorrector_Solve = _Underworld._AdvDiffMulticorrector_Solve

def AdvDiffMulticorrector_Predictors(arg1: 'AdvDiffMulticorrector', sle: 'AdvectionDiffusionSLE', dt: 'double') -> "void":
    return _Underworld.AdvDiffMulticorrector_Predictors(arg1, sle, dt)
AdvDiffMulticorrector_Predictors = _Underworld.AdvDiffMulticorrector_Predictors

def AdvDiffMulticorrector_Solution(arg1: 'AdvDiffMulticorrector', sle: 'AdvectionDiffusionSLE', deltaPhiDot: 'Vec') -> "void":
    return _Underworld.AdvDiffMulticorrector_Solution(arg1, sle, deltaPhiDot)
AdvDiffMulticorrector_Solution = _Underworld.AdvDiffMulticorrector_Solution

def AdvDiffMulticorrector_Correctors(arg1: 'AdvDiffMulticorrector', sle: 'AdvectionDiffusionSLE', deltaPhiDot: 'Vec', dt: 'double') -> "void":
    return _Underworld.AdvDiffMulticorrector_Correctors(arg1, sle, deltaPhiDot, dt)
AdvDiffMulticorrector_Correctors = _Underworld.AdvDiffMulticorrector_Correctors

def AdvDiffMulticorrector_CalculatePhiDot(arg1: 'AdvDiffMulticorrector', sle: 'AdvectionDiffusionSLE', deltaPhiDot: 'Vec') -> "void":
    return _Underworld.AdvDiffMulticorrector_CalculatePhiDot(arg1, sle, deltaPhiDot)
AdvDiffMulticorrector_CalculatePhiDot = _Underworld.AdvDiffMulticorrector_CalculatePhiDot

def _AdvDiffMulticorrector_CalculatePhiDot_Explicit(arg1: 'AdvDiffMulticorrector', sle: 'AdvectionDiffusionSLE', deltaPhiDot: 'Vec') -> "void":
    return _Underworld._AdvDiffMulticorrector_CalculatePhiDot_Explicit(arg1, sle, deltaPhiDot)
_AdvDiffMulticorrector_CalculatePhiDot_Explicit = _Underworld._AdvDiffMulticorrector_CalculatePhiDot_Explicit

def _AdvDiffMulticorrector_CalculatePhiDot_Implicit(arg1: 'AdvDiffMulticorrector', sle: 'AdvectionDiffusionSLE', deltaPhiDot: 'Vec') -> "void":
    return _Underworld._AdvDiffMulticorrector_CalculatePhiDot_Implicit(arg1, sle, deltaPhiDot)
_AdvDiffMulticorrector_CalculatePhiDot_Implicit = _Underworld._AdvDiffMulticorrector_CalculatePhiDot_Implicit

def _SUPGVectorTerm_NA__Fn_SetDiffusivityFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld._SUPGVectorTerm_NA__Fn_SetDiffusivityFn(_self, fn)
_SUPGVectorTerm_NA__Fn_SetDiffusivityFn = _Underworld._SUPGVectorTerm_NA__Fn_SetDiffusivityFn

def _SUPGVectorTerm_NA__Fn_SetSourceFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld._SUPGVectorTerm_NA__Fn_SetSourceFn(_self, fn)
_SUPGVectorTerm_NA__Fn_SetSourceFn = _Underworld._SUPGVectorTerm_NA__Fn_SetSourceFn
class AdvDiffResidualForceTerm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.AdvDiffResidualForceTerm__sizeOfSelf_get, _Underworld.AdvDiffResidualForceTerm__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.AdvDiffResidualForceTerm__deleteSelf_get, _Underworld.AdvDiffResidualForceTerm__deleteSelf_set)
    type = _swig_property(_Underworld.AdvDiffResidualForceTerm_type_get, _Underworld.AdvDiffResidualForceTerm_type_set)
    nRefs = _swig_property(_Underworld.AdvDiffResidualForceTerm_nRefs_get, _Underworld.AdvDiffResidualForceTerm_nRefs_set)
    locked = _swig_property(_Underworld.AdvDiffResidualForceTerm_locked_get, _Underworld.AdvDiffResidualForceTerm_locked_set)
    _delete = _swig_property(_Underworld.AdvDiffResidualForceTerm__delete_get, _Underworld.AdvDiffResidualForceTerm__delete_set)
    _print = _swig_property(_Underworld.AdvDiffResidualForceTerm__print_get, _Underworld.AdvDiffResidualForceTerm__print_set)
    _copy = _swig_property(_Underworld.AdvDiffResidualForceTerm__copy_get, _Underworld.AdvDiffResidualForceTerm__copy_set)
    name = _swig_property(_Underworld.AdvDiffResidualForceTerm_name_get, _Underworld.AdvDiffResidualForceTerm_name_set)
    nameAllocationType = _swig_property(_Underworld.AdvDiffResidualForceTerm_nameAllocationType_get, _Underworld.AdvDiffResidualForceTerm_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.AdvDiffResidualForceTerm__defaultConstructor_get, _Underworld.AdvDiffResidualForceTerm__defaultConstructor_set)
    _construct = _swig_property(_Underworld.AdvDiffResidualForceTerm__construct_get, _Underworld.AdvDiffResidualForceTerm__construct_set)
    _build = _swig_property(_Underworld.AdvDiffResidualForceTerm__build_get, _Underworld.AdvDiffResidualForceTerm__build_set)
    _initialise = _swig_property(_Underworld.AdvDiffResidualForceTerm__initialise_get, _Underworld.AdvDiffResidualForceTerm__initialise_set)
    _execute = _swig_property(_Underworld.AdvDiffResidualForceTerm__execute_get, _Underworld.AdvDiffResidualForceTerm__execute_set)
    _destroy = _swig_property(_Underworld.AdvDiffResidualForceTerm__destroy_get, _Underworld.AdvDiffResidualForceTerm__destroy_set)
    isConstructed = _swig_property(_Underworld.AdvDiffResidualForceTerm_isConstructed_get, _Underworld.AdvDiffResidualForceTerm_isConstructed_set)
    isBuilt = _swig_property(_Underworld.AdvDiffResidualForceTerm_isBuilt_get, _Underworld.AdvDiffResidualForceTerm_isBuilt_set)
    isInitialised = _swig_property(_Underworld.AdvDiffResidualForceTerm_isInitialised_get, _Underworld.AdvDiffResidualForceTerm_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.AdvDiffResidualForceTerm_hasExecuted_get, _Underworld.AdvDiffResidualForceTerm_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.AdvDiffResidualForceTerm_isDestroyed_get, _Underworld.AdvDiffResidualForceTerm_isDestroyed_set)
    constructType = _swig_property(_Underworld.AdvDiffResidualForceTerm_constructType_get, _Underworld.AdvDiffResidualForceTerm_constructType_set)
    buildType = _swig_property(_Underworld.AdvDiffResidualForceTerm_buildType_get, _Underworld.AdvDiffResidualForceTerm_buildType_set)
    initialiseType = _swig_property(_Underworld.AdvDiffResidualForceTerm_initialiseType_get, _Underworld.AdvDiffResidualForceTerm_initialiseType_set)
    executeType = _swig_property(_Underworld.AdvDiffResidualForceTerm_executeType_get, _Underworld.AdvDiffResidualForceTerm_executeType_set)
    destroyType = _swig_property(_Underworld.AdvDiffResidualForceTerm_destroyType_get, _Underworld.AdvDiffResidualForceTerm_destroyType_set)
    context = _swig_property(_Underworld.AdvDiffResidualForceTerm_context_get, _Underworld.AdvDiffResidualForceTerm_context_set)
    _assembleElement = _swig_property(_Underworld.AdvDiffResidualForceTerm__assembleElement_get, _Underworld.AdvDiffResidualForceTerm__assembleElement_set)
    debug = _swig_property(_Underworld.AdvDiffResidualForceTerm_debug_get, _Underworld.AdvDiffResidualForceTerm_debug_set)
    forceVector = _swig_property(_Underworld.AdvDiffResidualForceTerm_forceVector_get, _Underworld.AdvDiffResidualForceTerm_forceVector_set)
    integrationSwarm = _swig_property(_Underworld.AdvDiffResidualForceTerm_integrationSwarm_get, _Underworld.AdvDiffResidualForceTerm_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.AdvDiffResidualForceTerm_extraInfo_get, _Underworld.AdvDiffResidualForceTerm_extraInfo_set)
    _upwindParam = _swig_property(_Underworld.AdvDiffResidualForceTerm__upwindParam_get, _Underworld.AdvDiffResidualForceTerm__upwindParam_set)
    _getDiffusivityFromIntPoint = _swig_property(_Underworld.AdvDiffResidualForceTerm__getDiffusivityFromIntPoint_get, _Underworld.AdvDiffResidualForceTerm__getDiffusivityFromIntPoint_set)
    phiGrad = _swig_property(_Underworld.AdvDiffResidualForceTerm_phiGrad_get, _Underworld.AdvDiffResidualForceTerm_phiGrad_set)
    GNx = _swig_property(_Underworld.AdvDiffResidualForceTerm_GNx_get, _Underworld.AdvDiffResidualForceTerm_GNx_set)
    Ni = _swig_property(_Underworld.AdvDiffResidualForceTerm_Ni_get, _Underworld.AdvDiffResidualForceTerm_Ni_set)
    SUPGNi = _swig_property(_Underworld.AdvDiffResidualForceTerm_SUPGNi_get, _Underworld.AdvDiffResidualForceTerm_SUPGNi_set)
    incarray = _swig_property(_Underworld.AdvDiffResidualForceTerm_incarray_get, _Underworld.AdvDiffResidualForceTerm_incarray_set)
    velocityField = _swig_property(_Underworld.AdvDiffResidualForceTerm_velocityField_get, _Underworld.AdvDiffResidualForceTerm_velocityField_set)
    last_maxNodeCount = _swig_property(_Underworld.AdvDiffResidualForceTerm_last_maxNodeCount_get, _Underworld.AdvDiffResidualForceTerm_last_maxNodeCount_set)
    upwindParamType = _swig_property(_Underworld.AdvDiffResidualForceTerm_upwindParamType_get, _Underworld.AdvDiffResidualForceTerm_upwindParamType_set)
    diffFn = _swig_property(_Underworld.AdvDiffResidualForceTerm_diffFn_get, _Underworld.AdvDiffResidualForceTerm_diffFn_set)
    sourceFn = _swig_property(_Underworld.AdvDiffResidualForceTerm_sourceFn_get, _Underworld.AdvDiffResidualForceTerm_sourceFn_set)

    def __init__(self):
        _Underworld.AdvDiffResidualForceTerm_swiginit(self, _Underworld.new_AdvDiffResidualForceTerm())
    __swig_destroy__ = _Underworld.delete_AdvDiffResidualForceTerm
AdvDiffResidualForceTerm_swigregister = _Underworld.AdvDiffResidualForceTerm_swigregister
AdvDiffResidualForceTerm_swigregister(AdvDiffResidualForceTerm)


def AdvDiffResidualForceTerm_New(name: 'Name', context: 'FiniteElementContext *', forceVector: 'ForceVector', integrationSwarm: 'Swarm', sle: 'Stg_Component *', velocityField: 'FeVariable', upwindFuncType: 'AdvDiffResidualForceTerm_UpwindParamFuncType') -> "AdvDiffResidualForceTerm *":
    return _Underworld.AdvDiffResidualForceTerm_New(name, context, forceVector, integrationSwarm, sle, velocityField, upwindFuncType)
AdvDiffResidualForceTerm_New = _Underworld.AdvDiffResidualForceTerm_New

def _AdvDiffResidualForceTerm_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'ForceTerm_AssembleElementFunction *', _upwindParam: 'AdvDiffResidualForceTerm_UpwindParamFunction *') -> "AdvDiffResidualForceTerm *":
    return _Underworld._AdvDiffResidualForceTerm_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement, _upwindParam)
_AdvDiffResidualForceTerm_New = _Underworld._AdvDiffResidualForceTerm_New

def _AdvDiffResidualForceTerm_Init(residual: 'void *', velocityField: 'FeVariable', upwindFuncType: 'AdvDiffResidualForceTerm_UpwindParamFuncType') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_Init(residual, velocityField, upwindFuncType)
_AdvDiffResidualForceTerm_Init = _Underworld._AdvDiffResidualForceTerm_Init

def _AdvDiffResidualForceTerm_Delete(residual: 'void *') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_Delete(residual)
_AdvDiffResidualForceTerm_Delete = _Underworld._AdvDiffResidualForceTerm_Delete

def _AdvDiffResidualForceTerm_Print(residual: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_Print(residual, stream)
_AdvDiffResidualForceTerm_Print = _Underworld._AdvDiffResidualForceTerm_Print

def _AdvDiffResidualForceTerm_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._AdvDiffResidualForceTerm_DefaultNew(name)
_AdvDiffResidualForceTerm_DefaultNew = _Underworld._AdvDiffResidualForceTerm_DefaultNew

def _AdvDiffResidualForceTerm_AssignFromXML(residual: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_AssignFromXML(residual, cf, data)
_AdvDiffResidualForceTerm_AssignFromXML = _Underworld._AdvDiffResidualForceTerm_AssignFromXML

def _AdvDiffResidualForceTerm_Build(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_Build(residual, data)
_AdvDiffResidualForceTerm_Build = _Underworld._AdvDiffResidualForceTerm_Build

def _AdvDiffResidualForceTerm_Initialise(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_Initialise(residual, data)
_AdvDiffResidualForceTerm_Initialise = _Underworld._AdvDiffResidualForceTerm_Initialise

def _AdvDiffResidualForceTerm_Execute(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_Execute(residual, data)
_AdvDiffResidualForceTerm_Execute = _Underworld._AdvDiffResidualForceTerm_Execute

def _AdvDiffResidualForceTerm_Destroy(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_Destroy(residual, data)
_AdvDiffResidualForceTerm_Destroy = _Underworld._AdvDiffResidualForceTerm_Destroy

def _AdvDiffResidualForceTerm_AssembleElement(forceTerm: 'void *', forceVector: 'ForceVector', lElement_I: 'Element_LocalIndex', elementResidual: 'double *') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_AssembleElement(forceTerm, forceVector, lElement_I, elementResidual)
_AdvDiffResidualForceTerm_AssembleElement = _Underworld._AdvDiffResidualForceTerm_AssembleElement

def _AdvDiffResidualForceTerm_UpwindParam(residual: 'void *', pecletNumber: 'double') -> "double":
    return _Underworld._AdvDiffResidualForceTerm_UpwindParam(residual, pecletNumber)
_AdvDiffResidualForceTerm_UpwindParam = _Underworld._AdvDiffResidualForceTerm_UpwindParam

def AdvDiffResidualForceTerm_GetMaxDiffusivity(residual: 'void *') -> "double":
    return _Underworld.AdvDiffResidualForceTerm_GetMaxDiffusivity(residual)
AdvDiffResidualForceTerm_GetMaxDiffusivity = _Underworld.AdvDiffResidualForceTerm_GetMaxDiffusivity

def AdvDiffResidualForceTerm_UpwindDiffusivity(arg1: 'AdvDiffResidualForceTerm', sle: 'AdvectionDiffusionSLE', diffFn: 'void *', swarm: 'Swarm', mesh: 'FeMesh', lElement_I: 'Element_LocalIndex', dim: 'Dimension_Index') -> "double":
    return _Underworld.AdvDiffResidualForceTerm_UpwindDiffusivity(arg1, sle, diffFn, swarm, mesh, lElement_I, dim)
AdvDiffResidualForceTerm_UpwindDiffusivity = _Underworld.AdvDiffResidualForceTerm_UpwindDiffusivity

def AdvDiffResidualForceTerm_UpwindXiExact(residual: 'void *', pecletNumber: 'double') -> "double":
    return _Underworld.AdvDiffResidualForceTerm_UpwindXiExact(residual, pecletNumber)
AdvDiffResidualForceTerm_UpwindXiExact = _Underworld.AdvDiffResidualForceTerm_UpwindXiExact

def AdvDiffResidualForceTerm_UpwindXiDoublyAsymptoticAssumption(residual: 'void *', pecletNumber: 'double') -> "double":
    return _Underworld.AdvDiffResidualForceTerm_UpwindXiDoublyAsymptoticAssumption(residual, pecletNumber)
AdvDiffResidualForceTerm_UpwindXiDoublyAsymptoticAssumption = _Underworld.AdvDiffResidualForceTerm_UpwindXiDoublyAsymptoticAssumption

def AdvDiffResidualForceTerm_UpwindXiCriticalAssumption(residual: 'void *', pecletNumber: 'double') -> "double":
    return _Underworld.AdvDiffResidualForceTerm_UpwindXiCriticalAssumption(residual, pecletNumber)
AdvDiffResidualForceTerm_UpwindXiCriticalAssumption = _Underworld.AdvDiffResidualForceTerm_UpwindXiCriticalAssumption

def _AdvDiffResidualForceTerm_FreeLocalMemory(arg1: 'AdvDiffResidualForceTerm') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_FreeLocalMemory(arg1)
_AdvDiffResidualForceTerm_FreeLocalMemory = _Underworld._AdvDiffResidualForceTerm_FreeLocalMemory

def _AdvDiffResidualForceTerm_Allocate(arg1: 'AdvDiffResidualForceTerm', dim: 'int', max_elementNodeCount: 'int') -> "void":
    return _Underworld._AdvDiffResidualForceTerm_Allocate(arg1, dim, max_elementNodeCount)
_AdvDiffResidualForceTerm_Allocate = _Underworld._AdvDiffResidualForceTerm_Allocate

def AdvectionDiffusionSLE_CalculateDt(advectionDiffusionSLE: 'void *', context: 'FiniteElementContext *') -> "double":
    return _Underworld.AdvectionDiffusionSLE_CalculateDt(advectionDiffusionSLE, context)
AdvectionDiffusionSLE_CalculateDt = _Underworld.AdvectionDiffusionSLE_CalculateDt

def AdvectionDiffusionSLE_DiffusiveTimestep(_advectionDiffusionSolver: 'void *') -> "double":
    return _Underworld.AdvectionDiffusionSLE_DiffusiveTimestep(_advectionDiffusionSolver)
AdvectionDiffusionSLE_DiffusiveTimestep = _Underworld.AdvectionDiffusionSLE_DiffusiveTimestep

def AdvectionDiffusionSLE_AdvectiveTimestep(_advectionDiffusionSolver: 'void *') -> "double":
    return _Underworld.AdvectionDiffusionSLE_AdvectiveTimestep(_advectionDiffusionSolver)
AdvectionDiffusionSLE_AdvectiveTimestep = _Underworld.AdvectionDiffusionSLE_AdvectiveTimestep
Exact = _Underworld.Exact
DoublyAsymptoticAssumption = _Underworld.DoublyAsymptoticAssumption
CriticalAssumption = _Underworld.CriticalAssumption
class Fn_Integrate_cppdata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fn = _swig_property(_Underworld.Fn_Integrate_cppdata_fn_get, _Underworld.Fn_Integrate_cppdata_fn_set)
    sumLocal = _swig_property(_Underworld.Fn_Integrate_cppdata_sumLocal_get, _Underworld.Fn_Integrate_cppdata_sumLocal_set)
    sumGlobal = _swig_property(_Underworld.Fn_Integrate_cppdata_sumGlobal_get, _Underworld.Fn_Integrate_cppdata_sumGlobal_set)
    func = _swig_property(_Underworld.Fn_Integrate_cppdata_func_get, _Underworld.Fn_Integrate_cppdata_func_set)
    input = _swig_property(_Underworld.Fn_Integrate_cppdata_input_get, _Underworld.Fn_Integrate_cppdata_input_set)

    def __init__(self):
        _Underworld.Fn_Integrate_cppdata_swiginit(self, _Underworld.new_Fn_Integrate_cppdata())
    __swig_destroy__ = _Underworld.delete_Fn_Integrate_cppdata
Fn_Integrate_cppdata_swigregister = _Underworld.Fn_Integrate_cppdata_swigregister
Fn_Integrate_cppdata_swigregister(Fn_Integrate_cppdata)


def _Fn_Integrate_SetFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld._Fn_Integrate_SetFn(_self, fn)
_Fn_Integrate_SetFn = _Underworld._Fn_Integrate_SetFn

def Fn_Integrate_Integrate(fn_integrate: 'void *') -> "IO_double *":
    return _Underworld.Fn_Integrate_Integrate(fn_integrate)
Fn_Integrate_Integrate = _Underworld.Fn_Integrate_Integrate
class Fn_Integrate(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.Fn_Integrate__sizeOfSelf_get, _Underworld.Fn_Integrate__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.Fn_Integrate__deleteSelf_get, _Underworld.Fn_Integrate__deleteSelf_set)
    type = _swig_property(_Underworld.Fn_Integrate_type_get, _Underworld.Fn_Integrate_type_set)
    nRefs = _swig_property(_Underworld.Fn_Integrate_nRefs_get, _Underworld.Fn_Integrate_nRefs_set)
    locked = _swig_property(_Underworld.Fn_Integrate_locked_get, _Underworld.Fn_Integrate_locked_set)
    _delete = _swig_property(_Underworld.Fn_Integrate__delete_get, _Underworld.Fn_Integrate__delete_set)
    _print = _swig_property(_Underworld.Fn_Integrate__print_get, _Underworld.Fn_Integrate__print_set)
    _copy = _swig_property(_Underworld.Fn_Integrate__copy_get, _Underworld.Fn_Integrate__copy_set)
    name = _swig_property(_Underworld.Fn_Integrate_name_get, _Underworld.Fn_Integrate_name_set)
    nameAllocationType = _swig_property(_Underworld.Fn_Integrate_nameAllocationType_get, _Underworld.Fn_Integrate_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.Fn_Integrate__defaultConstructor_get, _Underworld.Fn_Integrate__defaultConstructor_set)
    _construct = _swig_property(_Underworld.Fn_Integrate__construct_get, _Underworld.Fn_Integrate__construct_set)
    _build = _swig_property(_Underworld.Fn_Integrate__build_get, _Underworld.Fn_Integrate__build_set)
    _initialise = _swig_property(_Underworld.Fn_Integrate__initialise_get, _Underworld.Fn_Integrate__initialise_set)
    _execute = _swig_property(_Underworld.Fn_Integrate__execute_get, _Underworld.Fn_Integrate__execute_set)
    _destroy = _swig_property(_Underworld.Fn_Integrate__destroy_get, _Underworld.Fn_Integrate__destroy_set)
    isConstructed = _swig_property(_Underworld.Fn_Integrate_isConstructed_get, _Underworld.Fn_Integrate_isConstructed_set)
    isBuilt = _swig_property(_Underworld.Fn_Integrate_isBuilt_get, _Underworld.Fn_Integrate_isBuilt_set)
    isInitialised = _swig_property(_Underworld.Fn_Integrate_isInitialised_get, _Underworld.Fn_Integrate_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.Fn_Integrate_hasExecuted_get, _Underworld.Fn_Integrate_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.Fn_Integrate_isDestroyed_get, _Underworld.Fn_Integrate_isDestroyed_set)
    constructType = _swig_property(_Underworld.Fn_Integrate_constructType_get, _Underworld.Fn_Integrate_constructType_set)
    buildType = _swig_property(_Underworld.Fn_Integrate_buildType_get, _Underworld.Fn_Integrate_buildType_set)
    initialiseType = _swig_property(_Underworld.Fn_Integrate_initialiseType_get, _Underworld.Fn_Integrate_initialiseType_set)
    executeType = _swig_property(_Underworld.Fn_Integrate_executeType_get, _Underworld.Fn_Integrate_executeType_set)
    destroyType = _swig_property(_Underworld.Fn_Integrate_destroyType_get, _Underworld.Fn_Integrate_destroyType_set)
    context = _swig_property(_Underworld.Fn_Integrate_context_get, _Underworld.Fn_Integrate_context_set)
    integrationSwarm = _swig_property(_Underworld.Fn_Integrate_integrationSwarm_get, _Underworld.Fn_Integrate_integrationSwarm_set)
    errorStream = _swig_property(_Underworld.Fn_Integrate_errorStream_get, _Underworld.Fn_Integrate_errorStream_set)
    functionLabel = _swig_property(_Underworld.Fn_Integrate_functionLabel_get, _Underworld.Fn_Integrate_functionLabel_set)
    gIntegral = _swig_property(_Underworld.Fn_Integrate_gIntegral_get, _Underworld.Fn_Integrate_gIntegral_set)
    cppdata = _swig_property(_Underworld.Fn_Integrate_cppdata_get, _Underworld.Fn_Integrate_cppdata_set)
    mesh = _swig_property(_Underworld.Fn_Integrate_mesh_get, _Underworld.Fn_Integrate_mesh_set)
    dim = _swig_property(_Underworld.Fn_Integrate_dim_get, _Underworld.Fn_Integrate_dim_set)
    isSurfaceIntegral = _swig_property(_Underworld.Fn_Integrate_isSurfaceIntegral_get, _Underworld.Fn_Integrate_isSurfaceIntegral_set)

    def __init__(self):
        _Underworld.Fn_Integrate_swiginit(self, _Underworld.new_Fn_Integrate())
    __swig_destroy__ = _Underworld.delete_Fn_Integrate
Fn_Integrate_swigregister = _Underworld.Fn_Integrate_swigregister
Fn_Integrate_swigregister(Fn_Integrate)
Fn_Integrate_Type = cvar.Fn_Integrate_Type


def _Fn_Integrate_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "Fn_Integrate *":
    return _Underworld._Fn_Integrate_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_Fn_Integrate_New = _Underworld._Fn_Integrate_New

def _Fn_Integrate_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._Fn_Integrate_DefaultNew(name)
_Fn_Integrate_DefaultNew = _Underworld._Fn_Integrate_DefaultNew

def _Fn_Integrate_AssignFromXML(residual: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._Fn_Integrate_AssignFromXML(residual, cf, data)
_Fn_Integrate_AssignFromXML = _Underworld._Fn_Integrate_AssignFromXML

def _Fn_Integrate_Build(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._Fn_Integrate_Build(residual, data)
_Fn_Integrate_Build = _Underworld._Fn_Integrate_Build

def _Fn_Integrate_Initialise(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._Fn_Integrate_Initialise(residual, data)
_Fn_Integrate_Initialise = _Underworld._Fn_Integrate_Initialise

def _Fn_Integrate_Execute(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._Fn_Integrate_Execute(residual, data)
_Fn_Integrate_Execute = _Underworld._Fn_Integrate_Execute

def _Fn_Integrate_Destroy(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._Fn_Integrate_Destroy(residual, data)
_Fn_Integrate_Destroy = _Underworld._Fn_Integrate_Destroy
class VectorAssemblyTerm_NA__Fn_cppdata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fn = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_cppdata_fn_get, _Underworld.VectorAssemblyTerm_NA__Fn_cppdata_fn_set)
    func = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_cppdata_func_get, _Underworld.VectorAssemblyTerm_NA__Fn_cppdata_func_set)
    input = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_cppdata_input_get, _Underworld.VectorAssemblyTerm_NA__Fn_cppdata_input_set)

    def __init__(self):
        _Underworld.VectorAssemblyTerm_NA__Fn_cppdata_swiginit(self, _Underworld.new_VectorAssemblyTerm_NA__Fn_cppdata())
    __swig_destroy__ = _Underworld.delete_VectorAssemblyTerm_NA__Fn_cppdata
VectorAssemblyTerm_NA__Fn_cppdata_swigregister = _Underworld.VectorAssemblyTerm_NA__Fn_cppdata_swigregister
VectorAssemblyTerm_NA__Fn_cppdata_swigregister(VectorAssemblyTerm_NA__Fn_cppdata)


def _VectorAssemblyTerm_NA__Fn_SetFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_SetFn(_self, fn)
_VectorAssemblyTerm_NA__Fn_SetFn = _Underworld._VectorAssemblyTerm_NA__Fn_SetFn
class VectorAssemblyTerm_NA__Fn(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__sizeOfSelf_get, _Underworld.VectorAssemblyTerm_NA__Fn__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__deleteSelf_get, _Underworld.VectorAssemblyTerm_NA__Fn__deleteSelf_set)
    type = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_type_get, _Underworld.VectorAssemblyTerm_NA__Fn_type_set)
    nRefs = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_nRefs_get, _Underworld.VectorAssemblyTerm_NA__Fn_nRefs_set)
    locked = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_locked_get, _Underworld.VectorAssemblyTerm_NA__Fn_locked_set)
    _delete = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__delete_get, _Underworld.VectorAssemblyTerm_NA__Fn__delete_set)
    _print = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__print_get, _Underworld.VectorAssemblyTerm_NA__Fn__print_set)
    _copy = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__copy_get, _Underworld.VectorAssemblyTerm_NA__Fn__copy_set)
    name = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_name_get, _Underworld.VectorAssemblyTerm_NA__Fn_name_set)
    nameAllocationType = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_nameAllocationType_get, _Underworld.VectorAssemblyTerm_NA__Fn_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__defaultConstructor_get, _Underworld.VectorAssemblyTerm_NA__Fn__defaultConstructor_set)
    _construct = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__construct_get, _Underworld.VectorAssemblyTerm_NA__Fn__construct_set)
    _build = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__build_get, _Underworld.VectorAssemblyTerm_NA__Fn__build_set)
    _initialise = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__initialise_get, _Underworld.VectorAssemblyTerm_NA__Fn__initialise_set)
    _execute = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__execute_get, _Underworld.VectorAssemblyTerm_NA__Fn__execute_set)
    _destroy = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__destroy_get, _Underworld.VectorAssemblyTerm_NA__Fn__destroy_set)
    isConstructed = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_isConstructed_get, _Underworld.VectorAssemblyTerm_NA__Fn_isConstructed_set)
    isBuilt = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_isBuilt_get, _Underworld.VectorAssemblyTerm_NA__Fn_isBuilt_set)
    isInitialised = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_isInitialised_get, _Underworld.VectorAssemblyTerm_NA__Fn_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_hasExecuted_get, _Underworld.VectorAssemblyTerm_NA__Fn_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_isDestroyed_get, _Underworld.VectorAssemblyTerm_NA__Fn_isDestroyed_set)
    constructType = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_constructType_get, _Underworld.VectorAssemblyTerm_NA__Fn_constructType_set)
    buildType = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_buildType_get, _Underworld.VectorAssemblyTerm_NA__Fn_buildType_set)
    initialiseType = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_initialiseType_get, _Underworld.VectorAssemblyTerm_NA__Fn_initialiseType_set)
    executeType = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_executeType_get, _Underworld.VectorAssemblyTerm_NA__Fn_executeType_set)
    destroyType = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_destroyType_get, _Underworld.VectorAssemblyTerm_NA__Fn_destroyType_set)
    context = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_context_get, _Underworld.VectorAssemblyTerm_NA__Fn_context_set)
    _assembleElement = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn__assembleElement_get, _Underworld.VectorAssemblyTerm_NA__Fn__assembleElement_set)
    debug = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_debug_get, _Underworld.VectorAssemblyTerm_NA__Fn_debug_set)
    forceVector = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_forceVector_get, _Underworld.VectorAssemblyTerm_NA__Fn_forceVector_set)
    integrationSwarm = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_integrationSwarm_get, _Underworld.VectorAssemblyTerm_NA__Fn_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_extraInfo_get, _Underworld.VectorAssemblyTerm_NA__Fn_extraInfo_set)
    cppdata = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_cppdata_get, _Underworld.VectorAssemblyTerm_NA__Fn_cppdata_set)
    geometryMesh = _swig_property(_Underworld.VectorAssemblyTerm_NA__Fn_geometryMesh_get, _Underworld.VectorAssemblyTerm_NA__Fn_geometryMesh_set)

    def __init__(self):
        _Underworld.VectorAssemblyTerm_NA__Fn_swiginit(self, _Underworld.new_VectorAssemblyTerm_NA__Fn())
    __swig_destroy__ = _Underworld.delete_VectorAssemblyTerm_NA__Fn
VectorAssemblyTerm_NA__Fn_swigregister = _Underworld.VectorAssemblyTerm_NA__Fn_swigregister
VectorAssemblyTerm_NA__Fn_swigregister(VectorAssemblyTerm_NA__Fn)
VectorAssemblyTerm_NA__Fn_Type = cvar.VectorAssemblyTerm_NA__Fn_Type


def _VectorAssemblyTerm_NA__Fn_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'ForceTerm_AssembleElementFunction *') -> "VectorAssemblyTerm_NA__Fn *":
    return _Underworld._VectorAssemblyTerm_NA__Fn_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_VectorAssemblyTerm_NA__Fn_New = _Underworld._VectorAssemblyTerm_NA__Fn_New

def _VectorAssemblyTerm_NA__Fn_Delete(residual: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_Delete(residual)
_VectorAssemblyTerm_NA__Fn_Delete = _Underworld._VectorAssemblyTerm_NA__Fn_Delete

def _VectorAssemblyTerm_NA__Fn_Print(residual: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_Print(residual, stream)
_VectorAssemblyTerm_NA__Fn_Print = _Underworld._VectorAssemblyTerm_NA__Fn_Print

def _VectorAssemblyTerm_NA__Fn_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._VectorAssemblyTerm_NA__Fn_DefaultNew(name)
_VectorAssemblyTerm_NA__Fn_DefaultNew = _Underworld._VectorAssemblyTerm_NA__Fn_DefaultNew

def _VectorAssemblyTerm_NA__Fn_AssignFromXML(residual: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_AssignFromXML(residual, cf, data)
_VectorAssemblyTerm_NA__Fn_AssignFromXML = _Underworld._VectorAssemblyTerm_NA__Fn_AssignFromXML

def _VectorAssemblyTerm_NA__Fn_Build(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_Build(residual, data)
_VectorAssemblyTerm_NA__Fn_Build = _Underworld._VectorAssemblyTerm_NA__Fn_Build

def _VectorAssemblyTerm_NA__Fn_Initialise(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_Initialise(residual, data)
_VectorAssemblyTerm_NA__Fn_Initialise = _Underworld._VectorAssemblyTerm_NA__Fn_Initialise

def _VectorAssemblyTerm_NA__Fn_Execute(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_Execute(residual, data)
_VectorAssemblyTerm_NA__Fn_Execute = _Underworld._VectorAssemblyTerm_NA__Fn_Execute

def _VectorAssemblyTerm_NA__Fn_Destroy(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_Destroy(residual, data)
_VectorAssemblyTerm_NA__Fn_Destroy = _Underworld._VectorAssemblyTerm_NA__Fn_Destroy

def _VectorAssemblyTerm_NA__Fn_AssembleElement(forceTerm: 'void *', forceVector: 'ForceVector', lElement_I: 'Element_LocalIndex', elForceVec: 'double *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA__Fn_AssembleElement(forceTerm, forceVector, lElement_I, elForceVec)
_VectorAssemblyTerm_NA__Fn_AssembleElement = _Underworld._VectorAssemblyTerm_NA__Fn_AssembleElement
class VectorAssemblyTerm_NA_i__Fn_i_cppdata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fn = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_fn_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_fn_set)
    func = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_func_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_func_set)
    input = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_input_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_input_set)

    def __init__(self):
        _Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_swiginit(self, _Underworld.new_VectorAssemblyTerm_NA_i__Fn_i_cppdata())
    __swig_destroy__ = _Underworld.delete_VectorAssemblyTerm_NA_i__Fn_i_cppdata
VectorAssemblyTerm_NA_i__Fn_i_cppdata_swigregister = _Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_swigregister
VectorAssemblyTerm_NA_i__Fn_i_cppdata_swigregister(VectorAssemblyTerm_NA_i__Fn_i_cppdata)


def _VectorAssemblyTerm_NA_i__Fn_i_SetFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_SetFn(_self, fn)
_VectorAssemblyTerm_NA_i__Fn_i_SetFn = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_SetFn
class VectorAssemblyTerm_NA_i__Fn_i(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__sizeOfSelf_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__deleteSelf_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__deleteSelf_set)
    type = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_type_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_type_set)
    nRefs = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_nRefs_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_nRefs_set)
    locked = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_locked_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_locked_set)
    _delete = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__delete_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__delete_set)
    _print = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__print_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__print_set)
    _copy = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__copy_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__copy_set)
    name = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_name_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_name_set)
    nameAllocationType = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_nameAllocationType_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__defaultConstructor_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__defaultConstructor_set)
    _construct = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__construct_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__construct_set)
    _build = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__build_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__build_set)
    _initialise = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__initialise_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__initialise_set)
    _execute = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__execute_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__execute_set)
    _destroy = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__destroy_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__destroy_set)
    isConstructed = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_isConstructed_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_isConstructed_set)
    isBuilt = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_isBuilt_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_isBuilt_set)
    isInitialised = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_isInitialised_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_hasExecuted_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_isDestroyed_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_isDestroyed_set)
    constructType = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_constructType_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_constructType_set)
    buildType = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_buildType_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_buildType_set)
    initialiseType = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_initialiseType_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_initialiseType_set)
    executeType = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_executeType_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_executeType_set)
    destroyType = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_destroyType_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_destroyType_set)
    context = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_context_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_context_set)
    _assembleElement = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i__assembleElement_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i__assembleElement_set)
    debug = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_debug_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_debug_set)
    forceVector = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_forceVector_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_forceVector_set)
    integrationSwarm = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_integrationSwarm_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_extraInfo_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_extraInfo_set)
    cppdata = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_cppdata_set)
    geometryMesh = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_geometryMesh_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_geometryMesh_set)
    GNx = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_GNx_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_GNx_set)
    maxNodesPerEl = _swig_property(_Underworld.VectorAssemblyTerm_NA_i__Fn_i_maxNodesPerEl_get, _Underworld.VectorAssemblyTerm_NA_i__Fn_i_maxNodesPerEl_set)

    def __init__(self):
        _Underworld.VectorAssemblyTerm_NA_i__Fn_i_swiginit(self, _Underworld.new_VectorAssemblyTerm_NA_i__Fn_i())
    __swig_destroy__ = _Underworld.delete_VectorAssemblyTerm_NA_i__Fn_i
VectorAssemblyTerm_NA_i__Fn_i_swigregister = _Underworld.VectorAssemblyTerm_NA_i__Fn_i_swigregister
VectorAssemblyTerm_NA_i__Fn_i_swigregister(VectorAssemblyTerm_NA_i__Fn_i)
VectorAssemblyTerm_NA_i__Fn_i_Type = cvar.VectorAssemblyTerm_NA_i__Fn_i_Type


def _VectorAssemblyTerm_NA_i__Fn_i_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'ForceTerm_AssembleElementFunction *') -> "VectorAssemblyTerm_NA_i__Fn_i *":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_VectorAssemblyTerm_NA_i__Fn_i_New = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_New

def _VectorAssemblyTerm_NA_i__Fn_i_Delete(residual: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Delete(residual)
_VectorAssemblyTerm_NA_i__Fn_i_Delete = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Delete

def _VectorAssemblyTerm_NA_i__Fn_i_Print(residual: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Print(residual, stream)
_VectorAssemblyTerm_NA_i__Fn_i_Print = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Print

def _VectorAssemblyTerm_NA_i__Fn_i_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_DefaultNew(name)
_VectorAssemblyTerm_NA_i__Fn_i_DefaultNew = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_DefaultNew

def _VectorAssemblyTerm_NA_i__Fn_i_AssignFromXML(residual: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_AssignFromXML(residual, cf, data)
_VectorAssemblyTerm_NA_i__Fn_i_AssignFromXML = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_AssignFromXML

def _VectorAssemblyTerm_NA_i__Fn_i_Build(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Build(residual, data)
_VectorAssemblyTerm_NA_i__Fn_i_Build = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Build

def _VectorAssemblyTerm_NA_i__Fn_i_Initialise(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Initialise(residual, data)
_VectorAssemblyTerm_NA_i__Fn_i_Initialise = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Initialise

def _VectorAssemblyTerm_NA_i__Fn_i_Execute(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Execute(residual, data)
_VectorAssemblyTerm_NA_i__Fn_i_Execute = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Execute

def _VectorAssemblyTerm_NA_i__Fn_i_Destroy(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Destroy(residual, data)
_VectorAssemblyTerm_NA_i__Fn_i_Destroy = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_Destroy

def _VectorAssemblyTerm_NA_i__Fn_i_AssembleElement(forceTerm: 'void *', forceVector: 'ForceVector', lElement_I: 'Element_LocalIndex', elForceVec: 'double *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_i__Fn_i_AssembleElement(forceTerm, forceVector, lElement_I, elForceVec)
_VectorAssemblyTerm_NA_i__Fn_i_AssembleElement = _Underworld._VectorAssemblyTerm_NA_i__Fn_i_AssembleElement

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_SetFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_SetFn(_self, fn)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_SetFn = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_SetFn
class VectorSurfaceAssemblyTerm_NA__Fn__ni(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__sizeOfSelf_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__deleteSelf_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__deleteSelf_set)
    type = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_type_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_type_set)
    nRefs = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_nRefs_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_nRefs_set)
    locked = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_locked_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_locked_set)
    _delete = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__delete_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__delete_set)
    _print = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__print_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__print_set)
    _copy = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__copy_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__copy_set)
    name = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_name_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_name_set)
    nameAllocationType = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_nameAllocationType_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__defaultConstructor_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__defaultConstructor_set)
    _construct = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__construct_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__construct_set)
    _build = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__build_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__build_set)
    _initialise = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__initialise_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__initialise_set)
    _execute = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__execute_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__execute_set)
    _destroy = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__destroy_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__destroy_set)
    isConstructed = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_isConstructed_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_isConstructed_set)
    isBuilt = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_isBuilt_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_isBuilt_set)
    isInitialised = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_isInitialised_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_hasExecuted_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_isDestroyed_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_isDestroyed_set)
    constructType = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_constructType_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_constructType_set)
    buildType = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_buildType_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_buildType_set)
    initialiseType = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_initialiseType_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_initialiseType_set)
    executeType = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_executeType_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_executeType_set)
    destroyType = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_destroyType_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_destroyType_set)
    context = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_context_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_context_set)
    _assembleElement = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__assembleElement_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni__assembleElement_set)
    debug = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_debug_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_debug_set)
    forceVector = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_forceVector_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_forceVector_set)
    integrationSwarm = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_integrationSwarm_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_extraInfo_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_extraInfo_set)
    cppdata = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_cppdata_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_cppdata_set)
    bNodes = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_bNodes_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_bNodes_set)
    inc = _swig_property(_Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_inc_get, _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_inc_set)

    def __init__(self):
        _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_swiginit(self, _Underworld.new_VectorSurfaceAssemblyTerm_NA__Fn__ni())
    __swig_destroy__ = _Underworld.delete_VectorSurfaceAssemblyTerm_NA__Fn__ni
VectorSurfaceAssemblyTerm_NA__Fn__ni_swigregister = _Underworld.VectorSurfaceAssemblyTerm_NA__Fn__ni_swigregister
VectorSurfaceAssemblyTerm_NA__Fn__ni_swigregister(VectorSurfaceAssemblyTerm_NA__Fn__ni)
VectorSurfaceAssemblyTerm_NA__Fn__ni_Type = cvar.VectorSurfaceAssemblyTerm_NA__Fn__ni_Type


def _VectorSurfaceAssemblyTerm_NA__Fn__ni_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'ForceTerm_AssembleElementFunction *') -> "VectorSurfaceAssemblyTerm_NA__Fn__ni *":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_New = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_New

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_Delete(residual: 'void *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Delete(residual)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_Delete = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Delete

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_Print(residual: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Print(residual, stream)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_Print = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Print

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_DefaultNew(name)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_DefaultNew = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_DefaultNew

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_AssignFromXML(residual: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_AssignFromXML(residual, cf, data)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_AssignFromXML = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_AssignFromXML

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_Build(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Build(residual, data)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_Build = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Build

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_Initialise(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Initialise(residual, data)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_Initialise = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Initialise

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_Execute(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Execute(residual, data)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_Execute = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Execute

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_Destroy(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Destroy(residual, data)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_Destroy = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_Destroy

def _VectorSurfaceAssemblyTerm_NA__Fn__ni_AssembleElement(forceTerm: 'void *', forceVector: 'ForceVector', lElement_I: 'Element_LocalIndex', elForceVec: 'double *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_AssembleElement(forceTerm, forceVector, lElement_I, elForceVec)
_VectorSurfaceAssemblyTerm_NA__Fn__ni_AssembleElement = _Underworld._VectorSurfaceAssemblyTerm_NA__Fn__ni_AssembleElement

def _VectorSurfaceAssemblyTerm_SetBNodes(_self: 'void *', _bNodes: 'void *') -> "void":
    return _Underworld._VectorSurfaceAssemblyTerm_SetBNodes(_self, _bNodes)
_VectorSurfaceAssemblyTerm_SetBNodes = _Underworld._VectorSurfaceAssemblyTerm_SetBNodes
class VectorAssemblyTerm_NA_j__Fn_ij_cppdata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fn = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_cppdata_fn_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_cppdata_fn_set)
    func = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_cppdata_func_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_cppdata_func_set)
    input = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_cppdata_input_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_cppdata_input_set)

    def __init__(self):
        _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_cppdata_swiginit(self, _Underworld.new_VectorAssemblyTerm_NA_j__Fn_ij_cppdata())
    __swig_destroy__ = _Underworld.delete_VectorAssemblyTerm_NA_j__Fn_ij_cppdata
VectorAssemblyTerm_NA_j__Fn_ij_cppdata_swigregister = _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_cppdata_swigregister
VectorAssemblyTerm_NA_j__Fn_ij_cppdata_swigregister(VectorAssemblyTerm_NA_j__Fn_ij_cppdata)


def _VectorAssemblyTerm_NA_j__Fn_ij_SetFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_SetFn(_self, fn)
_VectorAssemblyTerm_NA_j__Fn_ij_SetFn = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_SetFn
class VectorAssemblyTerm_NA_j__Fn_ij(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__sizeOfSelf_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__deleteSelf_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__deleteSelf_set)
    type = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_type_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_type_set)
    nRefs = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_nRefs_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_nRefs_set)
    locked = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_locked_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_locked_set)
    _delete = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__delete_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__delete_set)
    _print = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__print_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__print_set)
    _copy = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__copy_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__copy_set)
    name = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_name_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_name_set)
    nameAllocationType = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_nameAllocationType_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__defaultConstructor_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__defaultConstructor_set)
    _construct = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__construct_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__construct_set)
    _build = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__build_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__build_set)
    _initialise = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__initialise_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__initialise_set)
    _execute = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__execute_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__execute_set)
    _destroy = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__destroy_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__destroy_set)
    isConstructed = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_isConstructed_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_isConstructed_set)
    isBuilt = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_isBuilt_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_isBuilt_set)
    isInitialised = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_isInitialised_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_hasExecuted_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_isDestroyed_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_isDestroyed_set)
    constructType = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_constructType_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_constructType_set)
    buildType = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_buildType_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_buildType_set)
    initialiseType = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_initialiseType_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_initialiseType_set)
    executeType = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_executeType_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_executeType_set)
    destroyType = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_destroyType_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_destroyType_set)
    context = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_context_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_context_set)
    _assembleElement = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij__assembleElement_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij__assembleElement_set)
    debug = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_debug_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_debug_set)
    forceVector = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_forceVector_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_forceVector_set)
    integrationSwarm = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_integrationSwarm_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_extraInfo_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_extraInfo_set)
    funeForce = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_funeForce_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_funeForce_set)
    GNx = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_GNx_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_GNx_set)
    maxNodesPerEl = _swig_property(_Underworld.VectorAssemblyTerm_NA_j__Fn_ij_maxNodesPerEl_get, _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_maxNodesPerEl_set)

    def __init__(self):
        _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_swiginit(self, _Underworld.new_VectorAssemblyTerm_NA_j__Fn_ij())
    __swig_destroy__ = _Underworld.delete_VectorAssemblyTerm_NA_j__Fn_ij
VectorAssemblyTerm_NA_j__Fn_ij_swigregister = _Underworld.VectorAssemblyTerm_NA_j__Fn_ij_swigregister
VectorAssemblyTerm_NA_j__Fn_ij_swigregister(VectorAssemblyTerm_NA_j__Fn_ij)
VectorAssemblyTerm_NA_j__Fn_ij_Type = cvar.VectorAssemblyTerm_NA_j__Fn_ij_Type


def _VectorAssemblyTerm_NA_j__Fn_ij_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'ForceTerm_AssembleElementFunction *') -> "VectorAssemblyTerm_NA_j__Fn_ij *":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_VectorAssemblyTerm_NA_j__Fn_ij_New = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_New

def _VectorAssemblyTerm_NA_j__Fn_ij_Delete(residual: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Delete(residual)
_VectorAssemblyTerm_NA_j__Fn_ij_Delete = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Delete

def _VectorAssemblyTerm_NA_j__Fn_ij_Print(residual: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Print(residual, stream)
_VectorAssemblyTerm_NA_j__Fn_ij_Print = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Print

def _VectorAssemblyTerm_NA_j__Fn_ij_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_DefaultNew(name)
_VectorAssemblyTerm_NA_j__Fn_ij_DefaultNew = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_DefaultNew

def _VectorAssemblyTerm_NA_j__Fn_ij_AssignFromXML(residual: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_AssignFromXML(residual, cf, data)
_VectorAssemblyTerm_NA_j__Fn_ij_AssignFromXML = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_AssignFromXML

def _VectorAssemblyTerm_NA_j__Fn_ij_Build(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Build(residual, data)
_VectorAssemblyTerm_NA_j__Fn_ij_Build = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Build

def _VectorAssemblyTerm_NA_j__Fn_ij_Initialise(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Initialise(residual, data)
_VectorAssemblyTerm_NA_j__Fn_ij_Initialise = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Initialise

def _VectorAssemblyTerm_NA_j__Fn_ij_Execute(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Execute(residual, data)
_VectorAssemblyTerm_NA_j__Fn_ij_Execute = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Execute

def _VectorAssemblyTerm_NA_j__Fn_ij_Destroy(residual: 'void *', data: 'void *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Destroy(residual, data)
_VectorAssemblyTerm_NA_j__Fn_ij_Destroy = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_Destroy

def _VectorAssemblyTerm_NA_j__Fn_ij_AssembleElement(forceTerm: 'void *', forceVector: 'ForceVector', lElement_I: 'Element_LocalIndex', elForceVec: 'double *') -> "void":
    return _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_AssembleElement(forceTerm, forceVector, lElement_I, elForceVec)
_VectorAssemblyTerm_NA_j__Fn_ij_AssembleElement = _Underworld._VectorAssemblyTerm_NA_j__Fn_ij_AssembleElement
class MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fn = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_fn_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_fn_set)
    func = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_func_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_func_set)
    input = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_input_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_input_set)

    def __init__(self):
        _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_swiginit(self, _Underworld.new_MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata())
    __swig_destroy__ = _Underworld.delete_MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata
MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_swigregister = _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_swigregister
MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_swigregister(MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata)


def MatrixAssemblyTerm_NA_i__NB_i__Fn_SetFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_SetFn(_self, fn)
MatrixAssemblyTerm_NA_i__NB_i__Fn_SetFn = _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_SetFn
class MatrixAssemblyTerm_NA_i__NB_i__Fn(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__sizeOfSelf_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__deleteSelf_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__deleteSelf_set)
    type = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_type_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_type_set)
    nRefs = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_nRefs_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_nRefs_set)
    locked = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_locked_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_locked_set)
    _delete = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__delete_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__delete_set)
    _print = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__print_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__print_set)
    _copy = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__copy_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__copy_set)
    name = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_name_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_name_set)
    nameAllocationType = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_nameAllocationType_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__defaultConstructor_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__defaultConstructor_set)
    _construct = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__construct_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__construct_set)
    _build = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__build_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__build_set)
    _initialise = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__initialise_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__initialise_set)
    _execute = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__execute_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__execute_set)
    _destroy = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__destroy_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__destroy_set)
    isConstructed = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_isConstructed_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_isConstructed_set)
    isBuilt = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_isBuilt_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_isBuilt_set)
    isInitialised = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_isInitialised_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_hasExecuted_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_isDestroyed_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_isDestroyed_set)
    constructType = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_constructType_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_constructType_set)
    buildType = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_buildType_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_buildType_set)
    initialiseType = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_initialiseType_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_initialiseType_set)
    executeType = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_executeType_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_executeType_set)
    destroyType = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_destroyType_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_destroyType_set)
    context = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_context_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_context_set)
    _assembleElement = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__assembleElement_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn__assembleElement_set)
    debug = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_debug_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_debug_set)
    integrationSwarm = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_integrationSwarm_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_extraInfo_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_extraInfo_set)
    stiffnessMatrix = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_stiffnessMatrix_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_stiffnessMatrix_set)
    GNx = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_GNx_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_GNx_set)
    N = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_N_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_N_set)
    max_nElNodes = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_max_nElNodes_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_max_nElNodes_set)
    cppdata = _swig_property(_Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_get, _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_cppdata_set)

    def __init__(self):
        _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_swiginit(self, _Underworld.new_MatrixAssemblyTerm_NA_i__NB_i__Fn())
    __swig_destroy__ = _Underworld.delete_MatrixAssemblyTerm_NA_i__NB_i__Fn
MatrixAssemblyTerm_NA_i__NB_i__Fn_swigregister = _Underworld.MatrixAssemblyTerm_NA_i__NB_i__Fn_swigregister
MatrixAssemblyTerm_NA_i__NB_i__Fn_swigregister(MatrixAssemblyTerm_NA_i__NB_i__Fn)
MatrixAssemblyTerm_NA_i__NB_i__Fn_Type = cvar.MatrixAssemblyTerm_NA_i__NB_i__Fn_Type


def _MatrixAssemblyTerm_NA_i__NB_i__Fn_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'StiffnessMatrixTerm_AssembleElementFunction *') -> "MatrixAssemblyTerm_NA_i__NB_i__Fn *":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_New = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_New

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_Delete(matrixTerm: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Delete(matrixTerm)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_Delete = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Delete

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_Print(matrixTerm: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Print(matrixTerm, stream)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_Print = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Print

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_DefaultNew(name)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_DefaultNew = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_DefaultNew

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_AssignFromXML(matrixTerm: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_AssignFromXML(matrixTerm, cf, data)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_AssignFromXML = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_AssignFromXML

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_Build(matrixTerm: 'void *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Build(matrixTerm, data)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_Build = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Build

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_Initialise(matrixTerm: 'void *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Initialise(matrixTerm, data)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_Initialise = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Initialise

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_Execute(matrixTerm: 'void *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Execute(matrixTerm, data)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_Execute = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Execute

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_Destroy(matrixTerm: 'void *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Destroy(matrixTerm, data)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_Destroy = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_Destroy

def _MatrixAssemblyTerm_NA_i__NB_i__Fn_AssembleElement(matrixTerm: 'void *', stiffnessMatrix: 'StiffnessMatrix', lElement_I: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMat: 'double **') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_AssembleElement(matrixTerm, stiffnessMatrix, lElement_I, sle, context, elStiffMat)
_MatrixAssemblyTerm_NA_i__NB_i__Fn_AssembleElement = _Underworld._MatrixAssemblyTerm_NA_i__NB_i__Fn_AssembleElement
class MatrixAssemblyTerm_NA__NB__Fn_cppdata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fn = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_fn_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_fn_set)
    func = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_func_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_func_set)
    input = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_input_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_input_set)

    def __init__(self):
        _Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_swiginit(self, _Underworld.new_MatrixAssemblyTerm_NA__NB__Fn_cppdata())
    __swig_destroy__ = _Underworld.delete_MatrixAssemblyTerm_NA__NB__Fn_cppdata
MatrixAssemblyTerm_NA__NB__Fn_cppdata_swigregister = _Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_swigregister
MatrixAssemblyTerm_NA__NB__Fn_cppdata_swigregister(MatrixAssemblyTerm_NA__NB__Fn_cppdata)


def MatrixAssemblyTerm_NA__NB__Fn_SetFn(_self: 'void *', fn: 'Function') -> "void":
    return _Underworld.MatrixAssemblyTerm_NA__NB__Fn_SetFn(_self, fn)
MatrixAssemblyTerm_NA__NB__Fn_SetFn = _Underworld.MatrixAssemblyTerm_NA__NB__Fn_SetFn
class MatrixAssemblyTerm_NA__NB__Fn(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__sizeOfSelf_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__sizeOfSelf_set)
    _deleteSelf = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__deleteSelf_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__deleteSelf_set)
    type = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_type_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_type_set)
    nRefs = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_nRefs_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_nRefs_set)
    locked = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_locked_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_locked_set)
    _delete = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__delete_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__delete_set)
    _print = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__print_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__print_set)
    _copy = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__copy_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__copy_set)
    name = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_name_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_name_set)
    nameAllocationType = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_nameAllocationType_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_nameAllocationType_set)
    _defaultConstructor = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__defaultConstructor_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__defaultConstructor_set)
    _construct = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__construct_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__construct_set)
    _build = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__build_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__build_set)
    _initialise = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__initialise_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__initialise_set)
    _execute = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__execute_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__execute_set)
    _destroy = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__destroy_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__destroy_set)
    isConstructed = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_isConstructed_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_isConstructed_set)
    isBuilt = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_isBuilt_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_isBuilt_set)
    isInitialised = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_isInitialised_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_isInitialised_set)
    hasExecuted = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_hasExecuted_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_hasExecuted_set)
    isDestroyed = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_isDestroyed_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_isDestroyed_set)
    constructType = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_constructType_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_constructType_set)
    buildType = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_buildType_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_buildType_set)
    initialiseType = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_initialiseType_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_initialiseType_set)
    executeType = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_executeType_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_executeType_set)
    destroyType = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_destroyType_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_destroyType_set)
    context = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_context_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_context_set)
    _assembleElement = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn__assembleElement_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn__assembleElement_set)
    debug = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_debug_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_debug_set)
    integrationSwarm = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_integrationSwarm_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_integrationSwarm_set)
    extraInfo = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_extraInfo_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_extraInfo_set)
    stiffnessMatrix = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_stiffnessMatrix_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_stiffnessMatrix_set)
    GNx = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_GNx_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_GNx_set)
    N = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_N_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_N_set)
    max_nElNodes = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_max_nElNodes_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_max_nElNodes_set)
    cppdata = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_cppdata_set)
    geometryMesh = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_geometryMesh_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_geometryMesh_set)
    max_nElNodes_col = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_max_nElNodes_col_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_max_nElNodes_col_set)
    max_nElNodes_row = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_max_nElNodes_row_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_max_nElNodes_row_set)
    Ni = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_Ni_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_Ni_set)
    Mi = _swig_property(_Underworld.MatrixAssemblyTerm_NA__NB__Fn_Mi_get, _Underworld.MatrixAssemblyTerm_NA__NB__Fn_Mi_set)

    def __init__(self):
        _Underworld.MatrixAssemblyTerm_NA__NB__Fn_swiginit(self, _Underworld.new_MatrixAssemblyTerm_NA__NB__Fn())
    __swig_destroy__ = _Underworld.delete_MatrixAssemblyTerm_NA__NB__Fn
MatrixAssemblyTerm_NA__NB__Fn_swigregister = _Underworld.MatrixAssemblyTerm_NA__NB__Fn_swigregister
MatrixAssemblyTerm_NA__NB__Fn_swigregister(MatrixAssemblyTerm_NA__NB__Fn)
MatrixAssemblyTerm_NA__NB__Fn_Type = cvar.MatrixAssemblyTerm_NA__NB__Fn_Type


def _MatrixAssemblyTerm_NA__NB__Fn_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'StiffnessMatrixTerm_AssembleElementFunction *') -> "MatrixAssemblyTerm_NA__NB__Fn *":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_MatrixAssemblyTerm_NA__NB__Fn_New = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_New

def _MatrixAssemblyTerm_NA__NB__Fn_Delete(matrixTerm: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Delete(matrixTerm)
_MatrixAssemblyTerm_NA__NB__Fn_Delete = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Delete

def _MatrixAssemblyTerm_NA__NB__Fn_Print(matrixTerm: 'void *', stream: 'Stream *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Print(matrixTerm, stream)
_MatrixAssemblyTerm_NA__NB__Fn_Print = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Print

def _MatrixAssemblyTerm_NA__NB__Fn_DefaultNew(name: 'Name') -> "void *":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_DefaultNew(name)
_MatrixAssemblyTerm_NA__NB__Fn_DefaultNew = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_DefaultNew

def _MatrixAssemblyTerm_NA__NB__Fn_AssignFromXML(matrixTerm: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_AssignFromXML(matrixTerm, cf, data)
_MatrixAssemblyTerm_NA__NB__Fn_AssignFromXML = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_AssignFromXML

def _MatrixAssemblyTerm_NA__NB__Fn_Build(matrixTerm: 'void *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Build(matrixTerm, data)
_MatrixAssemblyTerm_NA__NB__Fn_Build = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Build

def _MatrixAssemblyTerm_NA__NB__Fn_Initialise(matrixTerm: 'void *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Initialise(matrixTerm, data)
_MatrixAssemblyTerm_NA__NB__Fn_Initialise = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Initialise

def _MatrixAssemblyTerm_NA__NB__Fn_Execute(matrixTerm: 'void *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Execute(matrixTerm, data)
_MatrixAssemblyTerm_NA__NB__Fn_Execute = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Execute

def _MatrixAssemblyTerm_NA__NB__Fn_Destroy(matrixTerm: 'void *', data: 'void *') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Destroy(matrixTerm, data)
_MatrixAssemblyTerm_NA__NB__Fn_Destroy = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_Destroy

def _MatrixAssemblyTerm_NA__NB__Fn_AssembleElement(matrixTerm: 'void *', stiffnessMatrix: 'StiffnessMatrix', lElement_I: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMat: 'double **') -> "void":
    return _Underworld._MatrixAssemblyTerm_NA__NB__Fn_AssembleElement(matrixTerm, stiffnessMatrix, lElement_I, sle, context, elStiffMat)
_MatrixAssemblyTerm_NA__NB__Fn_AssembleElement = _Underworld._MatrixAssemblyTerm_NA__NB__Fn_AssembleElement


