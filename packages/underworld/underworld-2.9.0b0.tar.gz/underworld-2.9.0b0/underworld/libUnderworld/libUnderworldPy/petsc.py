# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _petsc.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_petsc')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_petsc')
    _petsc = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_petsc', [dirname(__file__)])
        except ImportError:
            import _petsc
            return _petsc
        if fp is not None:
            try:
                _mod = imp.load_module('_petsc', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _petsc = swig_import_helper()
    del swig_import_helper
else:
    import _petsc
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def SetVec(vec: 'Vec', alpha: 'double') -> "void":
    return _petsc.SetVec(vec, alpha)
SetVec = _petsc.SetVec

def OptionsInsertString(string: 'char *') -> "void":
    return _petsc.OptionsInsertString(string)
OptionsInsertString = _petsc.OptionsInsertString

def OptionsPrint() -> "void":
    return _petsc.OptionsPrint()
OptionsPrint = _petsc.OptionsPrint

def OptionsClear() -> "void":
    return _petsc.OptionsClear()
OptionsClear = _petsc.OptionsClear

def OptionsSetValue(iname: 'char const []', value: 'char const []') -> "void":
    return _petsc.OptionsSetValue(iname, value)
OptionsSetValue = _petsc.OptionsSetValue

def OptionsClearValue(iname: 'char const []') -> "void":
    return _petsc.OptionsClearValue(iname)
OptionsClearValue = _petsc.OptionsClearValue

def OptionsInsertFile(file: 'char const []') -> "void":
    return _petsc.OptionsInsertFile(file)
OptionsInsertFile = _petsc.OptionsInsertFile


