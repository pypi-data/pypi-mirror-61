# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StgDomain.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StgDomain')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StgDomain')
    _StgDomain = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StgDomain', [dirname(__file__)])
        except ImportError:
            import _StgDomain
            return _StgDomain
        if fp is not None:
            try:
                _mod = imp.load_module('_StgDomain', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _StgDomain = swig_import_helper()
    del swig_import_helper
else:
    import _StgDomain
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import underworld.libUnderworld.libUnderworldPy.StGermain
I_AXIS = _StgDomain.I_AXIS
J_AXIS = _StgDomain.J_AXIS
K_AXIS = _StgDomain.K_AXIS
MAX_SYMMETRIC_TENSOR_COMPONENTS = _StgDomain.MAX_SYMMETRIC_TENSOR_COMPONENTS
MAX_TENSOR_COMPONENTS = _StgDomain.MAX_TENSOR_COMPONENTS
class Mesh(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.Mesh__sizeOfSelf_get, _StgDomain.Mesh__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.Mesh__deleteSelf_get, _StgDomain.Mesh__deleteSelf_set)
    type = _swig_property(_StgDomain.Mesh_type_get, _StgDomain.Mesh_type_set)
    nRefs = _swig_property(_StgDomain.Mesh_nRefs_get, _StgDomain.Mesh_nRefs_set)
    locked = _swig_property(_StgDomain.Mesh_locked_get, _StgDomain.Mesh_locked_set)
    _delete = _swig_property(_StgDomain.Mesh__delete_get, _StgDomain.Mesh__delete_set)
    _print = _swig_property(_StgDomain.Mesh__print_get, _StgDomain.Mesh__print_set)
    _copy = _swig_property(_StgDomain.Mesh__copy_get, _StgDomain.Mesh__copy_set)
    name = _swig_property(_StgDomain.Mesh_name_get, _StgDomain.Mesh_name_set)
    nameAllocationType = _swig_property(_StgDomain.Mesh_nameAllocationType_get, _StgDomain.Mesh_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.Mesh__defaultConstructor_get, _StgDomain.Mesh__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.Mesh__construct_get, _StgDomain.Mesh__construct_set)
    _build = _swig_property(_StgDomain.Mesh__build_get, _StgDomain.Mesh__build_set)
    _initialise = _swig_property(_StgDomain.Mesh__initialise_get, _StgDomain.Mesh__initialise_set)
    _execute = _swig_property(_StgDomain.Mesh__execute_get, _StgDomain.Mesh__execute_set)
    _destroy = _swig_property(_StgDomain.Mesh__destroy_get, _StgDomain.Mesh__destroy_set)
    isConstructed = _swig_property(_StgDomain.Mesh_isConstructed_get, _StgDomain.Mesh_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.Mesh_isBuilt_get, _StgDomain.Mesh_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.Mesh_isInitialised_get, _StgDomain.Mesh_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.Mesh_hasExecuted_get, _StgDomain.Mesh_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.Mesh_isDestroyed_get, _StgDomain.Mesh_isDestroyed_set)
    constructType = _swig_property(_StgDomain.Mesh_constructType_get, _StgDomain.Mesh_constructType_set)
    buildType = _swig_property(_StgDomain.Mesh_buildType_get, _StgDomain.Mesh_buildType_set)
    initialiseType = _swig_property(_StgDomain.Mesh_initialiseType_get, _StgDomain.Mesh_initialiseType_set)
    executeType = _swig_property(_StgDomain.Mesh_executeType_get, _StgDomain.Mesh_executeType_set)
    destroyType = _swig_property(_StgDomain.Mesh_destroyType_get, _StgDomain.Mesh_destroyType_set)
    topo = _swig_property(_StgDomain.Mesh_topo_get, _StgDomain.Mesh_topo_set)
    vertices = _swig_property(_StgDomain.Mesh_vertices_get, _StgDomain.Mesh_vertices_set)
    verticesVariable = _swig_property(_StgDomain.Mesh_verticesVariable_get, _StgDomain.Mesh_verticesVariable_set)
    elgid = _swig_property(_StgDomain.Mesh_elgid_get, _StgDomain.Mesh_elgid_set)
    eGlobalIdsVar = _swig_property(_StgDomain.Mesh_eGlobalIdsVar_get, _StgDomain.Mesh_eGlobalIdsVar_set)
    verticesgid = _swig_property(_StgDomain.Mesh_verticesgid_get, _StgDomain.Mesh_verticesgid_set)
    vGlobalIdsVar = _swig_property(_StgDomain.Mesh_vGlobalIdsVar_get, _StgDomain.Mesh_vGlobalIdsVar_set)
    e_n = _swig_property(_StgDomain.Mesh_e_n_get, _StgDomain.Mesh_e_n_set)
    enMapVar = _swig_property(_StgDomain.Mesh_enMapVar_get, _StgDomain.Mesh_enMapVar_set)
    nverts = _swig_property(_StgDomain.Mesh_nverts_get, _StgDomain.Mesh_nverts_set)
    dVerts = _swig_property(_StgDomain.Mesh_dVerts_get, _StgDomain.Mesh_dVerts_set)
    dEls = _swig_property(_StgDomain.Mesh_dEls_get, _StgDomain.Mesh_dEls_set)
    localtotalNodes = _swig_property(_StgDomain.Mesh_localtotalNodes_get, _StgDomain.Mesh_localtotalNodes_set)
    minSep = _swig_property(_StgDomain.Mesh_minSep_get, _StgDomain.Mesh_minSep_set)
    minAxialSep = _swig_property(_StgDomain.Mesh_minAxialSep_get, _StgDomain.Mesh_minAxialSep_set)
    minLocalCrd = _swig_property(_StgDomain.Mesh_minLocalCrd_get, _StgDomain.Mesh_minLocalCrd_set)
    maxLocalCrd = _swig_property(_StgDomain.Mesh_maxLocalCrd_get, _StgDomain.Mesh_maxLocalCrd_set)
    minDomainCrd = _swig_property(_StgDomain.Mesh_minDomainCrd_get, _StgDomain.Mesh_minDomainCrd_set)
    maxDomainCrd = _swig_property(_StgDomain.Mesh_maxDomainCrd_get, _StgDomain.Mesh_maxDomainCrd_set)
    minGlobalCrd = _swig_property(_StgDomain.Mesh_minGlobalCrd_get, _StgDomain.Mesh_minGlobalCrd_set)
    maxGlobalCrd = _swig_property(_StgDomain.Mesh_maxGlobalCrd_get, _StgDomain.Mesh_maxGlobalCrd_set)
    algorithms = _swig_property(_StgDomain.Mesh_algorithms_get, _StgDomain.Mesh_algorithms_set)
    nElTypes = _swig_property(_StgDomain.Mesh_nElTypes_get, _StgDomain.Mesh_nElTypes_set)
    elTypes = _swig_property(_StgDomain.Mesh_elTypes_get, _StgDomain.Mesh_elTypes_set)
    elTypeMap = _swig_property(_StgDomain.Mesh_elTypeMap_get, _StgDomain.Mesh_elTypeMap_set)
    topoDataSizes = _swig_property(_StgDomain.Mesh_topoDataSizes_get, _StgDomain.Mesh_topoDataSizes_set)
    topoDataInfos = _swig_property(_StgDomain.Mesh_topoDataInfos_get, _StgDomain.Mesh_topoDataInfos_set)
    topoDatas = _swig_property(_StgDomain.Mesh_topoDatas_get, _StgDomain.Mesh_topoDatas_set)
    info = _swig_property(_StgDomain.Mesh_info_get, _StgDomain.Mesh_info_set)
    vertGridId = _swig_property(_StgDomain.Mesh_vertGridId_get, _StgDomain.Mesh_vertGridId_set)
    elGridId = _swig_property(_StgDomain.Mesh_elGridId_get, _StgDomain.Mesh_elGridId_set)
    periodicId = _swig_property(_StgDomain.Mesh_periodicId_get, _StgDomain.Mesh_periodicId_set)
    localOriginId = _swig_property(_StgDomain.Mesh_localOriginId_get, _StgDomain.Mesh_localOriginId_set)
    localRangeId = _swig_property(_StgDomain.Mesh_localRangeId_get, _StgDomain.Mesh_localRangeId_set)
    isRegular = _swig_property(_StgDomain.Mesh_isRegular_get, _StgDomain.Mesh_isRegular_set)
    generator = _swig_property(_StgDomain.Mesh_generator_get, _StgDomain.Mesh_generator_set)
    isDeforming = _swig_property(_StgDomain.Mesh_isDeforming_get, _StgDomain.Mesh_isDeforming_set)
    emReg = _swig_property(_StgDomain.Mesh_emReg_get, _StgDomain.Mesh_emReg_set)
    parentMesh = _swig_property(_StgDomain.Mesh_parentMesh_get, _StgDomain.Mesh_parentMesh_set)

    def __init__(self):
        _StgDomain.Mesh_swiginit(self, _StgDomain.new_Mesh())
    __swig_destroy__ = _StgDomain.delete_Mesh
Mesh_swigregister = _StgDomain.Mesh_swigregister
Mesh_swigregister(Mesh)
cvar = _StgDomain.cvar
Mesh_Type = cvar.Mesh_Type


def Mesh_New(name: 'Name') -> "Mesh *":
    return _StgDomain.Mesh_New(name)
Mesh_New = _StgDomain.Mesh_New

def _Mesh_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "Mesh *":
    return _StgDomain._Mesh_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_Mesh_New = _StgDomain._Mesh_New

def _Mesh_Init(arg1: 'Mesh') -> "void":
    return _StgDomain._Mesh_Init(arg1)
_Mesh_Init = _StgDomain._Mesh_Init

def _Mesh_Delete(mesh: 'void *') -> "void":
    return _StgDomain._Mesh_Delete(mesh)
_Mesh_Delete = _StgDomain._Mesh_Delete

def _Mesh_Print(mesh: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._Mesh_Print(mesh, stream)
_Mesh_Print = _StgDomain._Mesh_Print

def _Mesh_AssignFromXML(mesh: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._Mesh_AssignFromXML(mesh, cf, data)
_Mesh_AssignFromXML = _StgDomain._Mesh_AssignFromXML

def _Mesh_Build(mesh: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Build(mesh, data)
_Mesh_Build = _StgDomain._Mesh_Build

def _Mesh_Initialise(mesh: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Initialise(mesh, data)
_Mesh_Initialise = _StgDomain._Mesh_Initialise

def _Mesh_Execute(mesh: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Execute(mesh, data)
_Mesh_Execute = _StgDomain._Mesh_Execute

def _Mesh_Destroy(mesh: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Destroy(mesh, data)
_Mesh_Destroy = _StgDomain._Mesh_Destroy

def Mesh_SetGenerator(mesh: 'void *', generator: 'void *') -> "void":
    return _StgDomain.Mesh_SetGenerator(mesh, generator)
Mesh_SetGenerator = _StgDomain.Mesh_SetGenerator

def Mesh_SetAlgorithms(mesh: 'void *', algorithms: 'void *') -> "void":
    return _StgDomain.Mesh_SetAlgorithms(mesh, algorithms)
Mesh_SetAlgorithms = _StgDomain.Mesh_SetAlgorithms

def Mesh_SetExtensionManagerRegister(mesh: 'void *', extMgrReg: 'void *') -> "void":
    return _StgDomain.Mesh_SetExtensionManagerRegister(mesh, extMgrReg)
Mesh_SetExtensionManagerRegister = _StgDomain.Mesh_SetExtensionManagerRegister

def Mesh_SetTopologyDataSize(mesh: 'void *', dim: 'MeshTopology_Dim', size: 'unsigned int') -> "void":
    return _StgDomain.Mesh_SetTopologyDataSize(mesh, dim, size)
Mesh_SetTopologyDataSize = _StgDomain.Mesh_SetTopologyDataSize

def Mesh_GetTopologyData(mesh: 'void *', dim: 'MeshTopology_Dim') -> "void *":
    return _StgDomain.Mesh_GetTopologyData(mesh, dim)
Mesh_GetTopologyData = _StgDomain.Mesh_GetTopologyData

def Mesh_GetDimSize(mesh: 'void *') -> "unsigned int":
    return _StgDomain.Mesh_GetDimSize(mesh)
Mesh_GetDimSize = _StgDomain.Mesh_GetDimSize

def Mesh_GetGlobalSize(mesh: 'void *', dim: 'MeshTopology_Dim') -> "unsigned int":
    return _StgDomain.Mesh_GetGlobalSize(mesh, dim)
Mesh_GetGlobalSize = _StgDomain.Mesh_GetGlobalSize

def Mesh_GetLocalSize(mesh: 'void *', dim: 'MeshTopology_Dim') -> "unsigned int":
    return _StgDomain.Mesh_GetLocalSize(mesh, dim)
Mesh_GetLocalSize = _StgDomain.Mesh_GetLocalSize

def Mesh_GetRemoteSize(mesh: 'void *', dim: 'MeshTopology_Dim') -> "unsigned int":
    return _StgDomain.Mesh_GetRemoteSize(mesh, dim)
Mesh_GetRemoteSize = _StgDomain.Mesh_GetRemoteSize

def Mesh_GetDomainSize(mesh: 'void *', dim: 'MeshTopology_Dim') -> "unsigned int":
    return _StgDomain.Mesh_GetDomainSize(mesh, dim)
Mesh_GetDomainSize = _StgDomain.Mesh_GetDomainSize

def Mesh_GetSharedSize(mesh: 'void *', dim: 'MeshTopology_Dim') -> "unsigned int":
    return _StgDomain.Mesh_GetSharedSize(mesh, dim)
Mesh_GetSharedSize = _StgDomain.Mesh_GetSharedSize

def Mesh_GetTopology(mesh: 'void *') -> "MeshTopology *":
    return _StgDomain.Mesh_GetTopology(mesh)
Mesh_GetTopology = _StgDomain.Mesh_GetTopology

def Mesh_GetSync(mesh: 'void *', dim: 'MeshTopology_Dim') -> "Sync *":
    return _StgDomain.Mesh_GetSync(mesh, dim)
Mesh_GetSync = _StgDomain.Mesh_GetSync

def Mesh_GlobalToDomain(mesh: 'void *', dim: 'MeshTopology_Dim', arg3: 'unsigned int', domain: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_GlobalToDomain(mesh, dim, arg3, domain)
Mesh_GlobalToDomain = _StgDomain.Mesh_GlobalToDomain

def Mesh_DomainToGlobal(mesh: 'void *', dim: 'MeshTopology_Dim', domain: 'unsigned int') -> "unsigned int":
    return _StgDomain.Mesh_DomainToGlobal(mesh, dim, domain)
Mesh_DomainToGlobal = _StgDomain.Mesh_DomainToGlobal

def Mesh_LocalToShared(meshTopology: 'void *', dim: 'MeshTopology_Dim', domain: 'unsigned int', shared: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_LocalToShared(meshTopology, dim, domain, shared)
Mesh_LocalToShared = _StgDomain.Mesh_LocalToShared

def Mesh_SharedToLocal(meshTopology: 'void *', dim: 'MeshTopology_Dim', shared: 'unsigned int') -> "unsigned int":
    return _StgDomain.Mesh_SharedToLocal(meshTopology, dim, shared)
Mesh_SharedToLocal = _StgDomain.Mesh_SharedToLocal

def Mesh_GetOwner(mesh: 'void *', dim: 'MeshTopology_Dim', remote: 'unsigned int') -> "unsigned int":
    return _StgDomain.Mesh_GetOwner(mesh, dim, remote)
Mesh_GetOwner = _StgDomain.Mesh_GetOwner

def Mesh_GetSharers(mesh: 'void *', dim: 'MeshTopology_Dim', shared: 'unsigned int', nSharers: 'unsigned int *', sharers: 'unsigned int **') -> "void":
    return _StgDomain.Mesh_GetSharers(mesh, dim, shared, nSharers, sharers)
Mesh_GetSharers = _StgDomain.Mesh_GetSharers

def Mesh_HasIncidence(mesh: 'void *', fromDim: 'MeshTopology_Dim', toDim: 'MeshTopology_Dim') -> "Bool":
    return _StgDomain.Mesh_HasIncidence(mesh, fromDim, toDim)
Mesh_HasIncidence = _StgDomain.Mesh_HasIncidence

def Mesh_GetIncidenceSize(mesh: 'void *', fromDim: 'MeshTopology_Dim', fromInd: 'unsigned int', toDim: 'MeshTopology_Dim') -> "unsigned int":
    return _StgDomain.Mesh_GetIncidenceSize(mesh, fromDim, fromInd, toDim)
Mesh_GetIncidenceSize = _StgDomain.Mesh_GetIncidenceSize

def Mesh_GetIncidence(mesh: 'void *', fromDim: 'MeshTopology_Dim', fromInd: 'unsigned int', toDim: 'MeshTopology_Dim', inc: 'IArray *') -> "void":
    return _StgDomain.Mesh_GetIncidence(mesh, fromDim, fromInd, toDim, inc)
Mesh_GetIncidence = _StgDomain.Mesh_GetIncidence

def Mesh_NearestVertex(mesh: 'void *', point: 'double *') -> "unsigned int":
    return _StgDomain.Mesh_NearestVertex(mesh, point)
Mesh_NearestVertex = _StgDomain.Mesh_NearestVertex

def Mesh_Search(mesh: 'void *', point: 'double *', dim: 'MeshTopology_Dim *', ind: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_Search(mesh, point, dim, ind)
Mesh_Search = _StgDomain.Mesh_Search

def Mesh_SearchElements(mesh: 'void *', point: 'double *', elInd: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_SearchElements(mesh, point, elInd)
Mesh_SearchElements = _StgDomain.Mesh_SearchElements

def Mesh_ElementHasPoint(mesh: 'void *', element: 'unsigned int', point: 'double *', dim: 'MeshTopology_Dim *', ind: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_ElementHasPoint(mesh, element, point, dim, ind)
Mesh_ElementHasPoint = _StgDomain.Mesh_ElementHasPoint

def Mesh_GetElementType(mesh: 'void *', element: 'unsigned int') -> "Mesh_ElementType *":
    return _StgDomain.Mesh_GetElementType(mesh, element)
Mesh_GetElementType = _StgDomain.Mesh_GetElementType

def Mesh_GetCommTopology(mesh: 'void *', dim: 'MeshTopology_Dim') -> "Comm *":
    return _StgDomain.Mesh_GetCommTopology(mesh, dim)
Mesh_GetCommTopology = _StgDomain.Mesh_GetCommTopology

def Mesh_GetVertex(mesh: 'void *', domain: 'unsigned int') -> "double *":
    return _StgDomain.Mesh_GetVertex(mesh, domain)
Mesh_GetVertex = _StgDomain.Mesh_GetVertex

def Mesh_HasExtension(mesh: 'void *', name: 'char const *') -> "Bool":
    return _StgDomain.Mesh_HasExtension(mesh, name)
Mesh_HasExtension = _StgDomain.Mesh_HasExtension

def _Mesh_GetExtension(mesh: 'void *', id: 'unsigned int const') -> "void *":
    return _StgDomain._Mesh_GetExtension(mesh, id)
_Mesh_GetExtension = _StgDomain._Mesh_GetExtension

def Mesh_GetMinimumSeparation(mesh: 'void *', minSep: 'double *', axial: 'double *') -> "void":
    return _StgDomain.Mesh_GetMinimumSeparation(mesh, minSep, axial)
Mesh_GetMinimumSeparation = _StgDomain.Mesh_GetMinimumSeparation

def Mesh_GetLocalCoordRange(mesh: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgDomain.Mesh_GetLocalCoordRange(mesh, min, max)
Mesh_GetLocalCoordRange = _StgDomain.Mesh_GetLocalCoordRange

def Mesh_GetDomainCoordRange(mesh: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgDomain.Mesh_GetDomainCoordRange(mesh, min, max)
Mesh_GetDomainCoordRange = _StgDomain.Mesh_GetDomainCoordRange

def Mesh_GetGlobalCoordRange(mesh: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgDomain.Mesh_GetGlobalCoordRange(mesh, min, max)
Mesh_GetGlobalCoordRange = _StgDomain.Mesh_GetGlobalCoordRange

def Mesh_DeformationUpdate(mesh: 'void *') -> "void":
    return _StgDomain.Mesh_DeformationUpdate(mesh)
Mesh_DeformationUpdate = _StgDomain.Mesh_DeformationUpdate

def Mesh_Sync(mesh: 'void *') -> "void":
    return _StgDomain.Mesh_Sync(mesh)
Mesh_Sync = _StgDomain.Mesh_Sync

def Mesh_GenerateVertices(mesh: 'void *', nVerts: 'unsigned int', nDims: 'unsigned int') -> "void":
    return _StgDomain.Mesh_GenerateVertices(mesh, nVerts, nDims)
Mesh_GenerateVertices = _StgDomain.Mesh_GenerateVertices

def Mesh_GenerateNodeGlobalIdVar(mesh: 'void *') -> "StgVariable *":
    return _StgDomain.Mesh_GenerateNodeGlobalIdVar(mesh)
Mesh_GenerateNodeGlobalIdVar = _StgDomain.Mesh_GenerateNodeGlobalIdVar

def Mesh_GenerateENMapVar(mesh: 'void *') -> "StgVariable *":
    return _StgDomain.Mesh_GenerateENMapVar(mesh)
Mesh_GenerateENMapVar = _StgDomain.Mesh_GenerateENMapVar

def Mesh_GenerateElGlobalIdVar(mesh: 'void *') -> "StgVariable *":
    return _StgDomain.Mesh_GenerateElGlobalIdVar(mesh)
Mesh_GenerateElGlobalIdVar = _StgDomain.Mesh_GenerateElGlobalIdVar

def Mesh_Destruct(arg1: 'Mesh') -> "void":
    return _StgDomain.Mesh_Destruct(arg1)
Mesh_Destruct = _StgDomain.Mesh_Destruct
class MeshGenerator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.MeshGenerator__sizeOfSelf_get, _StgDomain.MeshGenerator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.MeshGenerator__deleteSelf_get, _StgDomain.MeshGenerator__deleteSelf_set)
    type = _swig_property(_StgDomain.MeshGenerator_type_get, _StgDomain.MeshGenerator_type_set)
    nRefs = _swig_property(_StgDomain.MeshGenerator_nRefs_get, _StgDomain.MeshGenerator_nRefs_set)
    locked = _swig_property(_StgDomain.MeshGenerator_locked_get, _StgDomain.MeshGenerator_locked_set)
    _delete = _swig_property(_StgDomain.MeshGenerator__delete_get, _StgDomain.MeshGenerator__delete_set)
    _print = _swig_property(_StgDomain.MeshGenerator__print_get, _StgDomain.MeshGenerator__print_set)
    _copy = _swig_property(_StgDomain.MeshGenerator__copy_get, _StgDomain.MeshGenerator__copy_set)
    name = _swig_property(_StgDomain.MeshGenerator_name_get, _StgDomain.MeshGenerator_name_set)
    nameAllocationType = _swig_property(_StgDomain.MeshGenerator_nameAllocationType_get, _StgDomain.MeshGenerator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.MeshGenerator__defaultConstructor_get, _StgDomain.MeshGenerator__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.MeshGenerator__construct_get, _StgDomain.MeshGenerator__construct_set)
    _build = _swig_property(_StgDomain.MeshGenerator__build_get, _StgDomain.MeshGenerator__build_set)
    _initialise = _swig_property(_StgDomain.MeshGenerator__initialise_get, _StgDomain.MeshGenerator__initialise_set)
    _execute = _swig_property(_StgDomain.MeshGenerator__execute_get, _StgDomain.MeshGenerator__execute_set)
    _destroy = _swig_property(_StgDomain.MeshGenerator__destroy_get, _StgDomain.MeshGenerator__destroy_set)
    isConstructed = _swig_property(_StgDomain.MeshGenerator_isConstructed_get, _StgDomain.MeshGenerator_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.MeshGenerator_isBuilt_get, _StgDomain.MeshGenerator_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.MeshGenerator_isInitialised_get, _StgDomain.MeshGenerator_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.MeshGenerator_hasExecuted_get, _StgDomain.MeshGenerator_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.MeshGenerator_isDestroyed_get, _StgDomain.MeshGenerator_isDestroyed_set)
    constructType = _swig_property(_StgDomain.MeshGenerator_constructType_get, _StgDomain.MeshGenerator_constructType_set)
    buildType = _swig_property(_StgDomain.MeshGenerator_buildType_get, _StgDomain.MeshGenerator_buildType_set)
    initialiseType = _swig_property(_StgDomain.MeshGenerator_initialiseType_get, _StgDomain.MeshGenerator_initialiseType_set)
    executeType = _swig_property(_StgDomain.MeshGenerator_executeType_get, _StgDomain.MeshGenerator_executeType_set)
    destroyType = _swig_property(_StgDomain.MeshGenerator_destroyType_get, _StgDomain.MeshGenerator_destroyType_set)
    context = _swig_property(_StgDomain.MeshGenerator_context_get, _StgDomain.MeshGenerator_context_set)
    setDimSizeFunc = _swig_property(_StgDomain.MeshGenerator_setDimSizeFunc_get, _StgDomain.MeshGenerator_setDimSizeFunc_set)
    generateFunc = _swig_property(_StgDomain.MeshGenerator_generateFunc_get, _StgDomain.MeshGenerator_generateFunc_set)
    mpiComm = _swig_property(_StgDomain.MeshGenerator_mpiComm_get, _StgDomain.MeshGenerator_mpiComm_set)
    nMeshes = _swig_property(_StgDomain.MeshGenerator_nMeshes_get, _StgDomain.MeshGenerator_nMeshes_set)
    meshes = _swig_property(_StgDomain.MeshGenerator_meshes_get, _StgDomain.MeshGenerator_meshes_set)
    nDims = _swig_property(_StgDomain.MeshGenerator_nDims_get, _StgDomain.MeshGenerator_nDims_set)
    enabledDims = _swig_property(_StgDomain.MeshGenerator_enabledDims_get, _StgDomain.MeshGenerator_enabledDims_set)
    enabledInc = _swig_property(_StgDomain.MeshGenerator_enabledInc_get, _StgDomain.MeshGenerator_enabledInc_set)

    def __init__(self):
        _StgDomain.MeshGenerator_swiginit(self, _StgDomain.new_MeshGenerator())
    __swig_destroy__ = _StgDomain.delete_MeshGenerator
MeshGenerator_swigregister = _StgDomain.MeshGenerator_swigregister
MeshGenerator_swigregister(MeshGenerator)
MeshGenerator_Type = cvar.MeshGenerator_Type


def _MeshGenerator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setDimSizeFunc: 'MeshGenerator_SetDimSizeFunc *', generateFunc: 'MeshGenerator_GenerateFunc *') -> "MeshGenerator *":
    return _StgDomain._MeshGenerator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setDimSizeFunc, generateFunc)
_MeshGenerator_New = _StgDomain._MeshGenerator_New

def _MeshGenerator_Init(arg1: 'MeshGenerator', context: 'AbstractContext *') -> "void":
    return _StgDomain._MeshGenerator_Init(arg1, context)
_MeshGenerator_Init = _StgDomain._MeshGenerator_Init

def _MeshGenerator_Delete(meshGenerator: 'void *') -> "void":
    return _StgDomain._MeshGenerator_Delete(meshGenerator)
_MeshGenerator_Delete = _StgDomain._MeshGenerator_Delete

def _MeshGenerator_Print(meshGenerator: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._MeshGenerator_Print(meshGenerator, stream)
_MeshGenerator_Print = _StgDomain._MeshGenerator_Print

def _MeshGenerator_AssignFromXML(meshGenerator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._MeshGenerator_AssignFromXML(meshGenerator, cf, data)
_MeshGenerator_AssignFromXML = _StgDomain._MeshGenerator_AssignFromXML

def _MeshGenerator_Build(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgDomain._MeshGenerator_Build(meshGenerator, data)
_MeshGenerator_Build = _StgDomain._MeshGenerator_Build

def _MeshGenerator_Initialise(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgDomain._MeshGenerator_Initialise(meshGenerator, data)
_MeshGenerator_Initialise = _StgDomain._MeshGenerator_Initialise

def _MeshGenerator_Execute(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgDomain._MeshGenerator_Execute(meshGenerator, data)
_MeshGenerator_Execute = _StgDomain._MeshGenerator_Execute

def _MeshGenerator_Destroy(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgDomain._MeshGenerator_Destroy(meshGenerator, data)
_MeshGenerator_Destroy = _StgDomain._MeshGenerator_Destroy

def _MeshGenerator_SetDimSize(meshGenerator: 'void *', nDims: 'unsigned int') -> "void":
    return _StgDomain._MeshGenerator_SetDimSize(meshGenerator, nDims)
_MeshGenerator_SetDimSize = _StgDomain._MeshGenerator_SetDimSize

def MeshGenerator_SetMPIComm(meshGenerator: 'void *', mpiComm: 'MPI_Comm') -> "void":
    return _StgDomain.MeshGenerator_SetMPIComm(meshGenerator, mpiComm)
MeshGenerator_SetMPIComm = _StgDomain.MeshGenerator_SetMPIComm

def MeshGenerator_AddMesh(meshGenerator: 'void *', mesh: 'void *') -> "void":
    return _StgDomain.MeshGenerator_AddMesh(meshGenerator, mesh)
MeshGenerator_AddMesh = _StgDomain.MeshGenerator_AddMesh

def MeshGenerator_SetFullIncidence(meshGenerator: 'void *') -> "void":
    return _StgDomain.MeshGenerator_SetFullIncidence(meshGenerator)
MeshGenerator_SetFullIncidence = _StgDomain.MeshGenerator_SetFullIncidence

def MeshGenerator_SetDimState(meshGenerator: 'void *', dim: 'unsigned int', state: 'Bool') -> "void":
    return _StgDomain.MeshGenerator_SetDimState(meshGenerator, dim, state)
MeshGenerator_SetDimState = _StgDomain.MeshGenerator_SetDimState

def MeshGenerator_ClearIncidenceStates(meshGenerator: 'void *') -> "void":
    return _StgDomain.MeshGenerator_ClearIncidenceStates(meshGenerator)
MeshGenerator_ClearIncidenceStates = _StgDomain.MeshGenerator_ClearIncidenceStates

def MeshGenerator_SetIncidenceState(meshGenerator: 'void *', fromDim: 'unsigned int', toDim: 'unsigned int', state: 'Bool') -> "void":
    return _StgDomain.MeshGenerator_SetIncidenceState(meshGenerator, fromDim, toDim, state)
MeshGenerator_SetIncidenceState = _StgDomain.MeshGenerator_SetIncidenceState

def MeshGenerator_Destruct(arg1: 'MeshGenerator') -> "void":
    return _StgDomain.MeshGenerator_Destruct(arg1)
MeshGenerator_Destruct = _StgDomain.MeshGenerator_Destruct
class CartesianGenerator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.CartesianGenerator__sizeOfSelf_get, _StgDomain.CartesianGenerator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.CartesianGenerator__deleteSelf_get, _StgDomain.CartesianGenerator__deleteSelf_set)
    type = _swig_property(_StgDomain.CartesianGenerator_type_get, _StgDomain.CartesianGenerator_type_set)
    nRefs = _swig_property(_StgDomain.CartesianGenerator_nRefs_get, _StgDomain.CartesianGenerator_nRefs_set)
    locked = _swig_property(_StgDomain.CartesianGenerator_locked_get, _StgDomain.CartesianGenerator_locked_set)
    _delete = _swig_property(_StgDomain.CartesianGenerator__delete_get, _StgDomain.CartesianGenerator__delete_set)
    _print = _swig_property(_StgDomain.CartesianGenerator__print_get, _StgDomain.CartesianGenerator__print_set)
    _copy = _swig_property(_StgDomain.CartesianGenerator__copy_get, _StgDomain.CartesianGenerator__copy_set)
    name = _swig_property(_StgDomain.CartesianGenerator_name_get, _StgDomain.CartesianGenerator_name_set)
    nameAllocationType = _swig_property(_StgDomain.CartesianGenerator_nameAllocationType_get, _StgDomain.CartesianGenerator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.CartesianGenerator__defaultConstructor_get, _StgDomain.CartesianGenerator__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.CartesianGenerator__construct_get, _StgDomain.CartesianGenerator__construct_set)
    _build = _swig_property(_StgDomain.CartesianGenerator__build_get, _StgDomain.CartesianGenerator__build_set)
    _initialise = _swig_property(_StgDomain.CartesianGenerator__initialise_get, _StgDomain.CartesianGenerator__initialise_set)
    _execute = _swig_property(_StgDomain.CartesianGenerator__execute_get, _StgDomain.CartesianGenerator__execute_set)
    _destroy = _swig_property(_StgDomain.CartesianGenerator__destroy_get, _StgDomain.CartesianGenerator__destroy_set)
    isConstructed = _swig_property(_StgDomain.CartesianGenerator_isConstructed_get, _StgDomain.CartesianGenerator_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.CartesianGenerator_isBuilt_get, _StgDomain.CartesianGenerator_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.CartesianGenerator_isInitialised_get, _StgDomain.CartesianGenerator_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.CartesianGenerator_hasExecuted_get, _StgDomain.CartesianGenerator_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.CartesianGenerator_isDestroyed_get, _StgDomain.CartesianGenerator_isDestroyed_set)
    constructType = _swig_property(_StgDomain.CartesianGenerator_constructType_get, _StgDomain.CartesianGenerator_constructType_set)
    buildType = _swig_property(_StgDomain.CartesianGenerator_buildType_get, _StgDomain.CartesianGenerator_buildType_set)
    initialiseType = _swig_property(_StgDomain.CartesianGenerator_initialiseType_get, _StgDomain.CartesianGenerator_initialiseType_set)
    executeType = _swig_property(_StgDomain.CartesianGenerator_executeType_get, _StgDomain.CartesianGenerator_executeType_set)
    destroyType = _swig_property(_StgDomain.CartesianGenerator_destroyType_get, _StgDomain.CartesianGenerator_destroyType_set)
    context = _swig_property(_StgDomain.CartesianGenerator_context_get, _StgDomain.CartesianGenerator_context_set)
    setDimSizeFunc = _swig_property(_StgDomain.CartesianGenerator_setDimSizeFunc_get, _StgDomain.CartesianGenerator_setDimSizeFunc_set)
    generateFunc = _swig_property(_StgDomain.CartesianGenerator_generateFunc_get, _StgDomain.CartesianGenerator_generateFunc_set)
    mpiComm = _swig_property(_StgDomain.CartesianGenerator_mpiComm_get, _StgDomain.CartesianGenerator_mpiComm_set)
    nMeshes = _swig_property(_StgDomain.CartesianGenerator_nMeshes_get, _StgDomain.CartesianGenerator_nMeshes_set)
    meshes = _swig_property(_StgDomain.CartesianGenerator_meshes_get, _StgDomain.CartesianGenerator_meshes_set)
    nDims = _swig_property(_StgDomain.CartesianGenerator_nDims_get, _StgDomain.CartesianGenerator_nDims_set)
    enabledDims = _swig_property(_StgDomain.CartesianGenerator_enabledDims_get, _StgDomain.CartesianGenerator_enabledDims_set)
    enabledInc = _swig_property(_StgDomain.CartesianGenerator_enabledInc_get, _StgDomain.CartesianGenerator_enabledInc_set)
    setTopologyParamsFunc = _swig_property(_StgDomain.CartesianGenerator_setTopologyParamsFunc_get, _StgDomain.CartesianGenerator_setTopologyParamsFunc_set)
    genElementsFunc = _swig_property(_StgDomain.CartesianGenerator_genElementsFunc_get, _StgDomain.CartesianGenerator_genElementsFunc_set)
    genFacesFunc = _swig_property(_StgDomain.CartesianGenerator_genFacesFunc_get, _StgDomain.CartesianGenerator_genFacesFunc_set)
    genEdgesFunc = _swig_property(_StgDomain.CartesianGenerator_genEdgesFunc_get, _StgDomain.CartesianGenerator_genEdgesFunc_set)
    genVerticesFunc = _swig_property(_StgDomain.CartesianGenerator_genVerticesFunc_get, _StgDomain.CartesianGenerator_genVerticesFunc_set)
    genElementVertexIncFunc = _swig_property(_StgDomain.CartesianGenerator_genElementVertexIncFunc_get, _StgDomain.CartesianGenerator_genElementVertexIncFunc_set)
    genVolumeEdgeIncFunc = _swig_property(_StgDomain.CartesianGenerator_genVolumeEdgeIncFunc_get, _StgDomain.CartesianGenerator_genVolumeEdgeIncFunc_set)
    genVolumeFaceIncFunc = _swig_property(_StgDomain.CartesianGenerator_genVolumeFaceIncFunc_get, _StgDomain.CartesianGenerator_genVolumeFaceIncFunc_set)
    genFaceVertexIncFunc = _swig_property(_StgDomain.CartesianGenerator_genFaceVertexIncFunc_get, _StgDomain.CartesianGenerator_genFaceVertexIncFunc_set)
    genFaceEdgeIncFunc = _swig_property(_StgDomain.CartesianGenerator_genFaceEdgeIncFunc_get, _StgDomain.CartesianGenerator_genFaceEdgeIncFunc_set)
    genEdgeVertexIncFunc = _swig_property(_StgDomain.CartesianGenerator_genEdgeVertexIncFunc_get, _StgDomain.CartesianGenerator_genEdgeVertexIncFunc_set)
    genElementTypesFunc = _swig_property(_StgDomain.CartesianGenerator_genElementTypesFunc_get, _StgDomain.CartesianGenerator_genElementTypesFunc_set)
    calcGeomFunc = _swig_property(_StgDomain.CartesianGenerator_calcGeomFunc_get, _StgDomain.CartesianGenerator_calcGeomFunc_set)
    comm = _swig_property(_StgDomain.CartesianGenerator_comm_get, _StgDomain.CartesianGenerator_comm_set)
    regular = _swig_property(_StgDomain.CartesianGenerator_regular_get, _StgDomain.CartesianGenerator_regular_set)
    periodic = _swig_property(_StgDomain.CartesianGenerator_periodic_get, _StgDomain.CartesianGenerator_periodic_set)
    maxDecompDims = _swig_property(_StgDomain.CartesianGenerator_maxDecompDims_get, _StgDomain.CartesianGenerator_maxDecompDims_set)
    minDecomp = _swig_property(_StgDomain.CartesianGenerator_minDecomp_get, _StgDomain.CartesianGenerator_minDecomp_set)
    maxDecomp = _swig_property(_StgDomain.CartesianGenerator_maxDecomp_get, _StgDomain.CartesianGenerator_maxDecomp_set)
    shadowDepth = _swig_property(_StgDomain.CartesianGenerator_shadowDepth_get, _StgDomain.CartesianGenerator_shadowDepth_set)
    crdMin = _swig_property(_StgDomain.CartesianGenerator_crdMin_get, _StgDomain.CartesianGenerator_crdMin_set)
    crdMax = _swig_property(_StgDomain.CartesianGenerator_crdMax_get, _StgDomain.CartesianGenerator_crdMax_set)
    vertGrid = _swig_property(_StgDomain.CartesianGenerator_vertGrid_get, _StgDomain.CartesianGenerator_vertGrid_set)
    elGrid = _swig_property(_StgDomain.CartesianGenerator_elGrid_get, _StgDomain.CartesianGenerator_elGrid_set)
    procGrid = _swig_property(_StgDomain.CartesianGenerator_procGrid_get, _StgDomain.CartesianGenerator_procGrid_set)
    origin = _swig_property(_StgDomain.CartesianGenerator_origin_get, _StgDomain.CartesianGenerator_origin_set)
    range = _swig_property(_StgDomain.CartesianGenerator_range_get, _StgDomain.CartesianGenerator_range_set)
    vertOrigin = _swig_property(_StgDomain.CartesianGenerator_vertOrigin_get, _StgDomain.CartesianGenerator_vertOrigin_set)
    vertRange = _swig_property(_StgDomain.CartesianGenerator_vertRange_get, _StgDomain.CartesianGenerator_vertRange_set)
    contactDepth = _swig_property(_StgDomain.CartesianGenerator_contactDepth_get, _StgDomain.CartesianGenerator_contactDepth_set)
    contactGeom = _swig_property(_StgDomain.CartesianGenerator_contactGeom_get, _StgDomain.CartesianGenerator_contactGeom_set)

    def __init__(self):
        _StgDomain.CartesianGenerator_swiginit(self, _StgDomain.new_CartesianGenerator())
    __swig_destroy__ = _StgDomain.delete_CartesianGenerator
CartesianGenerator_swigregister = _StgDomain.CartesianGenerator_swigregister
CartesianGenerator_swigregister(CartesianGenerator)
CartesianGenerator_Type = cvar.CartesianGenerator_Type


def _CartesianGenerator_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._CartesianGenerator_DefaultNew(name)
_CartesianGenerator_DefaultNew = _StgDomain._CartesianGenerator_DefaultNew

def CartesianGenerator_New(name: 'Name', context: 'AbstractContext *') -> "CartesianGenerator *":
    return _StgDomain.CartesianGenerator_New(name, context)
CartesianGenerator_New = _StgDomain.CartesianGenerator_New

def _CartesianGenerator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setDimSizeFunc: 'MeshGenerator_SetDimSizeFunc *', generateFunc: 'MeshGenerator_GenerateFunc *', setTopologyParamsFunc: 'CartesianGenerator_SetTopologyParamsFunc *', genElementsFunc: 'CartesianGenerator_GenElementsFunc *', genFacesFunc: 'CartesianGenerator_GenFacesFunc *', genEdgesFunc: 'CartesianGenerator_GenEdgesFunc *', genVerticesFunc: 'CartesianGenerator_GenVerticesFunc *', genElementVertexIncFunc: 'CartesianGenerator_GenElementVertexIncFunc *', genVolumeEdgeIncFunc: 'CartesianGenerator_GenVolumeEdgeIncFunc *', genVolumeFaceIncFunc: 'CartesianGenerator_GenVolumeFaceIncFunc *', genFaceVertexIncFunc: 'CartesianGenerator_GenFaceVertexIncFunc *', genFaceEdgeIncFunc: 'CartesianGenerator_GenFaceEdgeIncFunc *', genEdgeVertexIncFunc: 'CartesianGenerator_GenEdgeVertexIncFunc *', genElementTypesFunc: 'CartesianGenerator_GenElementTypesFunc *', calcGeomFunc: 'CartesianGenerator_CalcGeomFunc *') -> "CartesianGenerator *":
    return _StgDomain._CartesianGenerator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setDimSizeFunc, generateFunc, setTopologyParamsFunc, genElementsFunc, genFacesFunc, genEdgesFunc, genVerticesFunc, genElementVertexIncFunc, genVolumeEdgeIncFunc, genVolumeFaceIncFunc, genFaceVertexIncFunc, genFaceEdgeIncFunc, genEdgeVertexIncFunc, genElementTypesFunc, calcGeomFunc)
_CartesianGenerator_New = _StgDomain._CartesianGenerator_New

def _CartesianGenerator_Init(arg1: 'CartesianGenerator') -> "void":
    return _StgDomain._CartesianGenerator_Init(arg1)
_CartesianGenerator_Init = _StgDomain._CartesianGenerator_Init

def _CartesianGenerator_Delete(meshGenerator: 'void *') -> "void":
    return _StgDomain._CartesianGenerator_Delete(meshGenerator)
_CartesianGenerator_Delete = _StgDomain._CartesianGenerator_Delete

def _CartesianGenerator_Print(meshGenerator: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._CartesianGenerator_Print(meshGenerator, stream)
_CartesianGenerator_Print = _StgDomain._CartesianGenerator_Print

def _CartesianGenerator_AssignFromXML(meshGenerator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._CartesianGenerator_AssignFromXML(meshGenerator, cf, data)
_CartesianGenerator_AssignFromXML = _StgDomain._CartesianGenerator_AssignFromXML

def _CartesianGenerator_Build(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgDomain._CartesianGenerator_Build(meshGenerator, data)
_CartesianGenerator_Build = _StgDomain._CartesianGenerator_Build

def _CartesianGenerator_Initialise(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgDomain._CartesianGenerator_Initialise(meshGenerator, data)
_CartesianGenerator_Initialise = _StgDomain._CartesianGenerator_Initialise

def _CartesianGenerator_Execute(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgDomain._CartesianGenerator_Execute(meshGenerator, data)
_CartesianGenerator_Execute = _StgDomain._CartesianGenerator_Execute

def _CartesianGenerator_Destroy(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgDomain._CartesianGenerator_Destroy(meshGenerator, data)
_CartesianGenerator_Destroy = _StgDomain._CartesianGenerator_Destroy

def CartesianGenerator_SetDimSize(meshGenerator: 'void *', nDims: 'unsigned int') -> "void":
    return _StgDomain.CartesianGenerator_SetDimSize(meshGenerator, nDims)
CartesianGenerator_SetDimSize = _StgDomain.CartesianGenerator_SetDimSize

def CartesianGenerator_Generate(meshGenerator: 'void *', mesh: 'void *', data: 'void *') -> "void":
    return _StgDomain.CartesianGenerator_Generate(meshGenerator, mesh, data)
CartesianGenerator_Generate = _StgDomain.CartesianGenerator_Generate

def _CartesianGenerator_SetTopologyParams(meshGenerator: 'void *', sizes: 'unsigned int *', maxDecompDims: 'unsigned int', minDecomp: 'unsigned int *', maxDecomp: 'unsigned int *') -> "void":
    return _StgDomain._CartesianGenerator_SetTopologyParams(meshGenerator, sizes, maxDecompDims, minDecomp, maxDecomp)
_CartesianGenerator_SetTopologyParams = _StgDomain._CartesianGenerator_SetTopologyParams

def _CartesianGenerator_GenElements(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenElements(meshGenerator, topo, grids)
_CartesianGenerator_GenElements = _StgDomain._CartesianGenerator_GenElements

def _CartesianGenerator_GenFaces(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenFaces(meshGenerator, topo, grids)
_CartesianGenerator_GenFaces = _StgDomain._CartesianGenerator_GenFaces

def _CartesianGenerator_GenEdges(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenEdges(meshGenerator, topo, grids)
_CartesianGenerator_GenEdges = _StgDomain._CartesianGenerator_GenEdges

def _CartesianGenerator_GenVertices(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenVertices(meshGenerator, topo, grids)
_CartesianGenerator_GenVertices = _StgDomain._CartesianGenerator_GenVertices

def _CartesianGenerator_GenElementVertexInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenElementVertexInc(meshGenerator, topo, grids)
_CartesianGenerator_GenElementVertexInc = _StgDomain._CartesianGenerator_GenElementVertexInc

def _CartesianGenerator_GenVolumeEdgeInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenVolumeEdgeInc(meshGenerator, topo, grids)
_CartesianGenerator_GenVolumeEdgeInc = _StgDomain._CartesianGenerator_GenVolumeEdgeInc

def _CartesianGenerator_GenVolumeFaceInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenVolumeFaceInc(meshGenerator, topo, grids)
_CartesianGenerator_GenVolumeFaceInc = _StgDomain._CartesianGenerator_GenVolumeFaceInc

def _CartesianGenerator_GenFaceVertexInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenFaceVertexInc(meshGenerator, topo, grids)
_CartesianGenerator_GenFaceVertexInc = _StgDomain._CartesianGenerator_GenFaceVertexInc

def _CartesianGenerator_GenFaceEdgeInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenFaceEdgeInc(meshGenerator, topo, grids)
_CartesianGenerator_GenFaceEdgeInc = _StgDomain._CartesianGenerator_GenFaceEdgeInc

def _CartesianGenerator_GenEdgeVertexInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain._CartesianGenerator_GenEdgeVertexInc(meshGenerator, topo, grids)
_CartesianGenerator_GenEdgeVertexInc = _StgDomain._CartesianGenerator_GenEdgeVertexInc

def _CartesianGenerator_GenElementTypes(meshGenerator: 'void *', mesh: 'Mesh') -> "void":
    return _StgDomain._CartesianGenerator_GenElementTypes(meshGenerator, mesh)
_CartesianGenerator_GenElementTypes = _StgDomain._CartesianGenerator_GenElementTypes

def CartesianGenerator_SetGeometryParams(meshGenerator: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgDomain.CartesianGenerator_SetGeometryParams(meshGenerator, min, max)
CartesianGenerator_SetGeometryParams = _StgDomain.CartesianGenerator_SetGeometryParams

def CartesianGenerator_SetShadowDepth(meshGenerator: 'void *', depth: 'unsigned int') -> "void":
    return _StgDomain.CartesianGenerator_SetShadowDepth(meshGenerator, depth)
CartesianGenerator_SetShadowDepth = _StgDomain.CartesianGenerator_SetShadowDepth

def CartesianGenerator_BuildDecomp(arg1: 'CartesianGenerator') -> "void":
    return _StgDomain.CartesianGenerator_BuildDecomp(arg1)
CartesianGenerator_BuildDecomp = _StgDomain.CartesianGenerator_BuildDecomp

def CartesianGenerator_RecurseDecomps(arg1: 'CartesianGenerator', dim: 'unsigned int', max: 'unsigned int', nSubDomains: 'unsigned int *', nPos: 'unsigned int *', posNSubDomains: 'unsigned int ***') -> "void":
    return _StgDomain.CartesianGenerator_RecurseDecomps(arg1, dim, max, nSubDomains, nPos, posNSubDomains)
CartesianGenerator_RecurseDecomps = _StgDomain.CartesianGenerator_RecurseDecomps

def CartesianGenerator_GenTopo(arg1: 'CartesianGenerator', topo: 'IGraph *') -> "void":
    return _StgDomain.CartesianGenerator_GenTopo(arg1, topo)
CartesianGenerator_GenTopo = _StgDomain.CartesianGenerator_GenTopo

def CartesianGenerator_GenEdges2D(arg1: 'CartesianGenerator', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain.CartesianGenerator_GenEdges2D(arg1, topo, grids)
CartesianGenerator_GenEdges2D = _StgDomain.CartesianGenerator_GenEdges2D

def CartesianGenerator_GenEdges3D(arg1: 'CartesianGenerator', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain.CartesianGenerator_GenEdges3D(arg1, topo, grids)
CartesianGenerator_GenEdges3D = _StgDomain.CartesianGenerator_GenEdges3D

def CartesianGenerator_GenBndVerts(arg1: 'CartesianGenerator', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain.CartesianGenerator_GenBndVerts(arg1, topo, grids)
CartesianGenerator_GenBndVerts = _StgDomain.CartesianGenerator_GenBndVerts

def CartesianGenerator_CompleteVertexNeighbours(arg1: 'CartesianGenerator', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgDomain.CartesianGenerator_CompleteVertexNeighbours(arg1, topo, grids)
CartesianGenerator_CompleteVertexNeighbours = _StgDomain.CartesianGenerator_CompleteVertexNeighbours

def CartesianGenerator_MapToDomain(arg1: 'CartesianGenerator', sync: 'Sync *', nIncEls: 'unsigned int', incEls: 'unsigned int *') -> "void":
    return _StgDomain.CartesianGenerator_MapToDomain(arg1, sync, nIncEls, incEls)
CartesianGenerator_MapToDomain = _StgDomain.CartesianGenerator_MapToDomain

def CartesianGenerator_GenGeom(_self: 'void *', _mesh: 'void *', data: 'void *') -> "void":
    return _StgDomain.CartesianGenerator_GenGeom(_self, _mesh, data)
CartesianGenerator_GenGeom = _StgDomain.CartesianGenerator_GenGeom

def CartesianGenerator_CalcGeom(_self: 'void *', mesh: 'Mesh', sync: 'Sync *', grid: 'Grid *', inds: 'unsigned int *', steps: 'double *') -> "void":
    return _StgDomain.CartesianGenerator_CalcGeom(_self, mesh, sync, grid, inds, steps)
CartesianGenerator_CalcGeom = _StgDomain.CartesianGenerator_CalcGeom

def CartesianGenerator_Destruct(arg1: 'CartesianGenerator') -> "void":
    return _StgDomain.CartesianGenerator_Destruct(arg1)
CartesianGenerator_Destruct = _StgDomain.CartesianGenerator_Destruct

def CartesianGenerator_DestructTopology(arg1: 'CartesianGenerator') -> "void":
    return _StgDomain.CartesianGenerator_DestructTopology(arg1)
CartesianGenerator_DestructTopology = _StgDomain.CartesianGenerator_DestructTopology

def CartesianGenerator_DestructGeometry(arg1: 'CartesianGenerator') -> "void":
    return _StgDomain.CartesianGenerator_DestructGeometry(arg1)
CartesianGenerator_DestructGeometry = _StgDomain.CartesianGenerator_DestructGeometry
class MeshVariable(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.MeshVariable__sizeOfSelf_get, _StgDomain.MeshVariable__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.MeshVariable__deleteSelf_get, _StgDomain.MeshVariable__deleteSelf_set)
    type = _swig_property(_StgDomain.MeshVariable_type_get, _StgDomain.MeshVariable_type_set)
    nRefs = _swig_property(_StgDomain.MeshVariable_nRefs_get, _StgDomain.MeshVariable_nRefs_set)
    locked = _swig_property(_StgDomain.MeshVariable_locked_get, _StgDomain.MeshVariable_locked_set)
    _delete = _swig_property(_StgDomain.MeshVariable__delete_get, _StgDomain.MeshVariable__delete_set)
    _print = _swig_property(_StgDomain.MeshVariable__print_get, _StgDomain.MeshVariable__print_set)
    _copy = _swig_property(_StgDomain.MeshVariable__copy_get, _StgDomain.MeshVariable__copy_set)
    name = _swig_property(_StgDomain.MeshVariable_name_get, _StgDomain.MeshVariable_name_set)
    nameAllocationType = _swig_property(_StgDomain.MeshVariable_nameAllocationType_get, _StgDomain.MeshVariable_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.MeshVariable__defaultConstructor_get, _StgDomain.MeshVariable__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.MeshVariable__construct_get, _StgDomain.MeshVariable__construct_set)
    _build = _swig_property(_StgDomain.MeshVariable__build_get, _StgDomain.MeshVariable__build_set)
    _initialise = _swig_property(_StgDomain.MeshVariable__initialise_get, _StgDomain.MeshVariable__initialise_set)
    _execute = _swig_property(_StgDomain.MeshVariable__execute_get, _StgDomain.MeshVariable__execute_set)
    _destroy = _swig_property(_StgDomain.MeshVariable__destroy_get, _StgDomain.MeshVariable__destroy_set)
    isConstructed = _swig_property(_StgDomain.MeshVariable_isConstructed_get, _StgDomain.MeshVariable_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.MeshVariable_isBuilt_get, _StgDomain.MeshVariable_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.MeshVariable_isInitialised_get, _StgDomain.MeshVariable_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.MeshVariable_hasExecuted_get, _StgDomain.MeshVariable_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.MeshVariable_isDestroyed_get, _StgDomain.MeshVariable_isDestroyed_set)
    constructType = _swig_property(_StgDomain.MeshVariable_constructType_get, _StgDomain.MeshVariable_constructType_set)
    buildType = _swig_property(_StgDomain.MeshVariable_buildType_get, _StgDomain.MeshVariable_buildType_set)
    initialiseType = _swig_property(_StgDomain.MeshVariable_initialiseType_get, _StgDomain.MeshVariable_initialiseType_set)
    executeType = _swig_property(_StgDomain.MeshVariable_executeType_get, _StgDomain.MeshVariable_executeType_set)
    destroyType = _swig_property(_StgDomain.MeshVariable_destroyType_get, _StgDomain.MeshVariable_destroyType_set)
    context = _swig_property(_StgDomain.MeshVariable_context_get, _StgDomain.MeshVariable_context_set)
    offsetCount = _swig_property(_StgDomain.MeshVariable_offsetCount_get, _StgDomain.MeshVariable_offsetCount_set)
    offsets = _swig_property(_StgDomain.MeshVariable_offsets_get, _StgDomain.MeshVariable_offsets_set)
    dataTypes = _swig_property(_StgDomain.MeshVariable_dataTypes_get, _StgDomain.MeshVariable_dataTypes_set)
    dataTypeCounts = _swig_property(_StgDomain.MeshVariable_dataTypeCounts_get, _StgDomain.MeshVariable_dataTypeCounts_set)
    structSizePtr = _swig_property(_StgDomain.MeshVariable_structSizePtr_get, _StgDomain.MeshVariable_structSizePtr_set)
    arrayPtrPtr = _swig_property(_StgDomain.MeshVariable_arrayPtrPtr_get, _StgDomain.MeshVariable_arrayPtrPtr_set)
    arraySizePtr = _swig_property(_StgDomain.MeshVariable_arraySizePtr_get, _StgDomain.MeshVariable_arraySizePtr_set)
    arraySizeFunc = _swig_property(_StgDomain.MeshVariable_arraySizeFunc_get, _StgDomain.MeshVariable_arraySizeFunc_set)
    dataSizes = _swig_property(_StgDomain.MeshVariable_dataSizes_get, _StgDomain.MeshVariable_dataSizes_set)
    structSize = _swig_property(_StgDomain.MeshVariable_structSize_get, _StgDomain.MeshVariable_structSize_set)
    arrayPtr = _swig_property(_StgDomain.MeshVariable_arrayPtr_get, _StgDomain.MeshVariable_arrayPtr_set)
    arraySize = _swig_property(_StgDomain.MeshVariable_arraySize_get, _StgDomain.MeshVariable_arraySize_set)
    subVariablesCount = _swig_property(_StgDomain.MeshVariable_subVariablesCount_get, _StgDomain.MeshVariable_subVariablesCount_set)
    components = _swig_property(_StgDomain.MeshVariable_components_get, _StgDomain.MeshVariable_components_set)
    allocateSelf = _swig_property(_StgDomain.MeshVariable_allocateSelf_get, _StgDomain.MeshVariable_allocateSelf_set)
    vr = _swig_property(_StgDomain.MeshVariable_vr_get, _StgDomain.MeshVariable_vr_set)
    parent = _swig_property(_StgDomain.MeshVariable_parent_get, _StgDomain.MeshVariable_parent_set)
    mesh = _swig_property(_StgDomain.MeshVariable_mesh_get, _StgDomain.MeshVariable_mesh_set)
    topoDim = _swig_property(_StgDomain.MeshVariable_topoDim_get, _StgDomain.MeshVariable_topoDim_set)
    meshArraySize = _swig_property(_StgDomain.MeshVariable_meshArraySize_get, _StgDomain.MeshVariable_meshArraySize_set)

    def __init__(self):
        _StgDomain.MeshVariable_swiginit(self, _StgDomain.new_MeshVariable())
    __swig_destroy__ = _StgDomain.delete_MeshVariable
MeshVariable_swigregister = _StgDomain.MeshVariable_swigregister
MeshVariable_swigregister(MeshVariable)
MeshVariable_Type = cvar.MeshVariable_Type


def MeshVariable_New(name: 'Name') -> "MeshVariable *":
    return _StgDomain.MeshVariable_New(name)
MeshVariable_New = _StgDomain.MeshVariable_New

def _MeshVariable_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', dataCount: 'Index', dataOffsets: 'SizeT *', dataTypes: 'StgVariable_DataType *', dataTypeCounts: 'Index *', dataNames: 'Name *', structSizePtr: 'SizeT *', arraySizePtr: 'Index *', arraySizeFunc: 'StgVariable_ArraySizeFunc *', arrayPtrPtr: 'void **', vr: 'Variable_Register *') -> "MeshVariable *":
    return _StgDomain._MeshVariable_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, dataCount, dataOffsets, dataTypes, dataTypeCounts, dataNames, structSizePtr, arraySizePtr, arraySizeFunc, arrayPtrPtr, vr)
_MeshVariable_New = _StgDomain._MeshVariable_New

def _MeshVariable_Init(arg1: 'MeshVariable') -> "void":
    return _StgDomain._MeshVariable_Init(arg1)
_MeshVariable_Init = _StgDomain._MeshVariable_Init

def _MeshVariable_Delete(meshVariable: 'void *') -> "void":
    return _StgDomain._MeshVariable_Delete(meshVariable)
_MeshVariable_Delete = _StgDomain._MeshVariable_Delete

def _MeshVariable_Print(meshVariable: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._MeshVariable_Print(meshVariable, stream)
_MeshVariable_Print = _StgDomain._MeshVariable_Print

def _MeshVariable_AssignFromXML(meshVariable: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._MeshVariable_AssignFromXML(meshVariable, cf, data)
_MeshVariable_AssignFromXML = _StgDomain._MeshVariable_AssignFromXML

def _MeshVariable_Build(meshVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._MeshVariable_Build(meshVariable, data)
_MeshVariable_Build = _StgDomain._MeshVariable_Build

def _MeshVariable_Initialise(meshVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._MeshVariable_Initialise(meshVariable, data)
_MeshVariable_Initialise = _StgDomain._MeshVariable_Initialise

def _MeshVariable_Execute(meshVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._MeshVariable_Execute(meshVariable, data)
_MeshVariable_Execute = _StgDomain._MeshVariable_Execute

def _MeshVariable_Destroy(meshVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._MeshVariable_Destroy(meshVariable, data)
_MeshVariable_Destroy = _StgDomain._MeshVariable_Destroy

def MeshVariable_SetMesh(meshVariable: 'void *', mesh: 'void *') -> "void":
    return _StgDomain.MeshVariable_SetMesh(meshVariable, mesh)
MeshVariable_SetMesh = _StgDomain.MeshVariable_SetMesh

def _MeshVariable_GetMeshArraySize(meshVariable: 'void *') -> "Index":
    return _StgDomain._MeshVariable_GetMeshArraySize(meshVariable)
_MeshVariable_GetMeshArraySize = _StgDomain._MeshVariable_GetMeshArraySize
class Mesh_Algorithms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.Mesh_Algorithms__sizeOfSelf_get, _StgDomain.Mesh_Algorithms__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.Mesh_Algorithms__deleteSelf_get, _StgDomain.Mesh_Algorithms__deleteSelf_set)
    type = _swig_property(_StgDomain.Mesh_Algorithms_type_get, _StgDomain.Mesh_Algorithms_type_set)
    nRefs = _swig_property(_StgDomain.Mesh_Algorithms_nRefs_get, _StgDomain.Mesh_Algorithms_nRefs_set)
    locked = _swig_property(_StgDomain.Mesh_Algorithms_locked_get, _StgDomain.Mesh_Algorithms_locked_set)
    _delete = _swig_property(_StgDomain.Mesh_Algorithms__delete_get, _StgDomain.Mesh_Algorithms__delete_set)
    _print = _swig_property(_StgDomain.Mesh_Algorithms__print_get, _StgDomain.Mesh_Algorithms__print_set)
    _copy = _swig_property(_StgDomain.Mesh_Algorithms__copy_get, _StgDomain.Mesh_Algorithms__copy_set)
    name = _swig_property(_StgDomain.Mesh_Algorithms_name_get, _StgDomain.Mesh_Algorithms_name_set)
    nameAllocationType = _swig_property(_StgDomain.Mesh_Algorithms_nameAllocationType_get, _StgDomain.Mesh_Algorithms_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.Mesh_Algorithms__defaultConstructor_get, _StgDomain.Mesh_Algorithms__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.Mesh_Algorithms__construct_get, _StgDomain.Mesh_Algorithms__construct_set)
    _build = _swig_property(_StgDomain.Mesh_Algorithms__build_get, _StgDomain.Mesh_Algorithms__build_set)
    _initialise = _swig_property(_StgDomain.Mesh_Algorithms__initialise_get, _StgDomain.Mesh_Algorithms__initialise_set)
    _execute = _swig_property(_StgDomain.Mesh_Algorithms__execute_get, _StgDomain.Mesh_Algorithms__execute_set)
    _destroy = _swig_property(_StgDomain.Mesh_Algorithms__destroy_get, _StgDomain.Mesh_Algorithms__destroy_set)
    isConstructed = _swig_property(_StgDomain.Mesh_Algorithms_isConstructed_get, _StgDomain.Mesh_Algorithms_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.Mesh_Algorithms_isBuilt_get, _StgDomain.Mesh_Algorithms_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.Mesh_Algorithms_isInitialised_get, _StgDomain.Mesh_Algorithms_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.Mesh_Algorithms_hasExecuted_get, _StgDomain.Mesh_Algorithms_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.Mesh_Algorithms_isDestroyed_get, _StgDomain.Mesh_Algorithms_isDestroyed_set)
    constructType = _swig_property(_StgDomain.Mesh_Algorithms_constructType_get, _StgDomain.Mesh_Algorithms_constructType_set)
    buildType = _swig_property(_StgDomain.Mesh_Algorithms_buildType_get, _StgDomain.Mesh_Algorithms_buildType_set)
    initialiseType = _swig_property(_StgDomain.Mesh_Algorithms_initialiseType_get, _StgDomain.Mesh_Algorithms_initialiseType_set)
    executeType = _swig_property(_StgDomain.Mesh_Algorithms_executeType_get, _StgDomain.Mesh_Algorithms_executeType_set)
    destroyType = _swig_property(_StgDomain.Mesh_Algorithms_destroyType_get, _StgDomain.Mesh_Algorithms_destroyType_set)
    context = _swig_property(_StgDomain.Mesh_Algorithms_context_get, _StgDomain.Mesh_Algorithms_context_set)
    setMeshFunc = _swig_property(_StgDomain.Mesh_Algorithms_setMeshFunc_get, _StgDomain.Mesh_Algorithms_setMeshFunc_set)
    updateFunc = _swig_property(_StgDomain.Mesh_Algorithms_updateFunc_get, _StgDomain.Mesh_Algorithms_updateFunc_set)
    nearestVertexFunc = _swig_property(_StgDomain.Mesh_Algorithms_nearestVertexFunc_get, _StgDomain.Mesh_Algorithms_nearestVertexFunc_set)
    searchFunc = _swig_property(_StgDomain.Mesh_Algorithms_searchFunc_get, _StgDomain.Mesh_Algorithms_searchFunc_set)
    searchElementsFunc = _swig_property(_StgDomain.Mesh_Algorithms_searchElementsFunc_get, _StgDomain.Mesh_Algorithms_searchElementsFunc_set)
    getMinimumSeparationFunc = _swig_property(_StgDomain.Mesh_Algorithms_getMinimumSeparationFunc_get, _StgDomain.Mesh_Algorithms_getMinimumSeparationFunc_set)
    getLocalCoordRangeFunc = _swig_property(_StgDomain.Mesh_Algorithms_getLocalCoordRangeFunc_get, _StgDomain.Mesh_Algorithms_getLocalCoordRangeFunc_set)
    getDomainCoordRangeFunc = _swig_property(_StgDomain.Mesh_Algorithms_getDomainCoordRangeFunc_get, _StgDomain.Mesh_Algorithms_getDomainCoordRangeFunc_set)
    getGlobalCoordRangeFunc = _swig_property(_StgDomain.Mesh_Algorithms_getGlobalCoordRangeFunc_get, _StgDomain.Mesh_Algorithms_getGlobalCoordRangeFunc_set)
    nearestVertex = _swig_property(_StgDomain.Mesh_Algorithms_nearestVertex_get, _StgDomain.Mesh_Algorithms_nearestVertex_set)
    search = _swig_property(_StgDomain.Mesh_Algorithms_search_get, _StgDomain.Mesh_Algorithms_search_set)
    mesh = _swig_property(_StgDomain.Mesh_Algorithms_mesh_get, _StgDomain.Mesh_Algorithms_mesh_set)
    rank = _swig_property(_StgDomain.Mesh_Algorithms_rank_get, _StgDomain.Mesh_Algorithms_rank_set)
    incArray = _swig_property(_StgDomain.Mesh_Algorithms_incArray_get, _StgDomain.Mesh_Algorithms_incArray_set)
    tree = _swig_property(_StgDomain.Mesh_Algorithms_tree_get, _StgDomain.Mesh_Algorithms_tree_set)

    def __init__(self):
        _StgDomain.Mesh_Algorithms_swiginit(self, _StgDomain.new_Mesh_Algorithms())
    __swig_destroy__ = _StgDomain.delete_Mesh_Algorithms
Mesh_Algorithms_swigregister = _StgDomain.Mesh_Algorithms_swigregister
Mesh_Algorithms_swigregister(Mesh_Algorithms)
Mesh_Algorithms_Type = cvar.Mesh_Algorithms_Type


def Mesh_Algorithms_New(name: 'Name', context: 'AbstractContext *') -> "Mesh_Algorithms *":
    return _StgDomain.Mesh_Algorithms_New(name, context)
Mesh_Algorithms_New = _StgDomain.Mesh_Algorithms_New

def _Mesh_Algorithms_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setMeshFunc: 'Mesh_Algorithms_SetMeshFunc *', updateFunc: 'Mesh_Algorithms_UpdateFunc *', nearestVertexFunc: 'Mesh_Algorithms_NearestVertexFunc *', searchFunc: 'Mesh_Algorithms_SearchFunc *', searchElementsFunc: 'Mesh_Algorithms_SearchElementsFunc *', getMinimumSeparationFunc: 'Mesh_Algorithms_GetMinimumSeparationFunc *', getLocalCoordRangeFunc: 'Mesh_Algorithms_GetLocalCoordRangeFunc *', getDomainCoordRangeFunc: 'Mesh_Algorithms_GetDomainCoordRangeFunc *', getGlobalCoordRangeFunc: 'Mesh_Algorithms_GetGlobalCoordRangeFunc *') -> "Mesh_Algorithms *":
    return _StgDomain._Mesh_Algorithms_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setMeshFunc, updateFunc, nearestVertexFunc, searchFunc, searchElementsFunc, getMinimumSeparationFunc, getLocalCoordRangeFunc, getDomainCoordRangeFunc, getGlobalCoordRangeFunc)
_Mesh_Algorithms_New = _StgDomain._Mesh_Algorithms_New

def _Mesh_Algorithms_Init(arg1: 'Mesh_Algorithms', context: 'AbstractContext *') -> "void":
    return _StgDomain._Mesh_Algorithms_Init(arg1, context)
_Mesh_Algorithms_Init = _StgDomain._Mesh_Algorithms_Init

def _Mesh_Algorithms_Delete(algorithms: 'void *') -> "void":
    return _StgDomain._Mesh_Algorithms_Delete(algorithms)
_Mesh_Algorithms_Delete = _StgDomain._Mesh_Algorithms_Delete

def _Mesh_Algorithms_Print(algorithms: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._Mesh_Algorithms_Print(algorithms, stream)
_Mesh_Algorithms_Print = _StgDomain._Mesh_Algorithms_Print

def _Mesh_Algorithms_AssignFromXML(algorithms: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Algorithms_AssignFromXML(algorithms, cf, data)
_Mesh_Algorithms_AssignFromXML = _StgDomain._Mesh_Algorithms_AssignFromXML

def _Mesh_Algorithms_Build(algorithms: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Algorithms_Build(algorithms, data)
_Mesh_Algorithms_Build = _StgDomain._Mesh_Algorithms_Build

def _Mesh_Algorithms_Initialise(algorithms: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Algorithms_Initialise(algorithms, data)
_Mesh_Algorithms_Initialise = _StgDomain._Mesh_Algorithms_Initialise

def _Mesh_Algorithms_Execute(algorithms: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Algorithms_Execute(algorithms, data)
_Mesh_Algorithms_Execute = _StgDomain._Mesh_Algorithms_Execute

def _Mesh_Algorithms_Destroy(algorithms: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_Algorithms_Destroy(algorithms, data)
_Mesh_Algorithms_Destroy = _StgDomain._Mesh_Algorithms_Destroy

def _Mesh_Algorithms_SetMesh(algorithms: 'void *', mesh: 'void *') -> "void":
    return _StgDomain._Mesh_Algorithms_SetMesh(algorithms, mesh)
_Mesh_Algorithms_SetMesh = _StgDomain._Mesh_Algorithms_SetMesh

def _Mesh_Algorithms_Update(algorithms: 'void *') -> "void":
    return _StgDomain._Mesh_Algorithms_Update(algorithms)
_Mesh_Algorithms_Update = _StgDomain._Mesh_Algorithms_Update

def _Mesh_Algorithms_NearestVertex(algorithms: 'void *', point: 'double *') -> "unsigned int":
    return _StgDomain._Mesh_Algorithms_NearestVertex(algorithms, point)
_Mesh_Algorithms_NearestVertex = _StgDomain._Mesh_Algorithms_NearestVertex

def _Mesh_Algorithms_Search(algorithms: 'void *', point: 'double *', dim: 'MeshTopology_Dim *', ind: 'unsigned int *') -> "Bool":
    return _StgDomain._Mesh_Algorithms_Search(algorithms, point, dim, ind)
_Mesh_Algorithms_Search = _StgDomain._Mesh_Algorithms_Search

def _Mesh_Algorithms_SearchElements(algorithms: 'void *', point: 'double *', elInd: 'unsigned int *') -> "Bool":
    return _StgDomain._Mesh_Algorithms_SearchElements(algorithms, point, elInd)
_Mesh_Algorithms_SearchElements = _StgDomain._Mesh_Algorithms_SearchElements

def _Mesh_Algorithms_GetMinimumSeparation(algorithms: 'void *', perDim: 'double *') -> "double":
    return _StgDomain._Mesh_Algorithms_GetMinimumSeparation(algorithms, perDim)
_Mesh_Algorithms_GetMinimumSeparation = _StgDomain._Mesh_Algorithms_GetMinimumSeparation

def _Mesh_Algorithms_GetLocalCoordRange(algorithms: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgDomain._Mesh_Algorithms_GetLocalCoordRange(algorithms, min, max)
_Mesh_Algorithms_GetLocalCoordRange = _StgDomain._Mesh_Algorithms_GetLocalCoordRange

def _Mesh_Algorithms_GetDomainCoordRange(algorithms: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgDomain._Mesh_Algorithms_GetDomainCoordRange(algorithms, min, max)
_Mesh_Algorithms_GetDomainCoordRange = _StgDomain._Mesh_Algorithms_GetDomainCoordRange

def _Mesh_Algorithms_GetGlobalCoordRange(algorithms: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgDomain._Mesh_Algorithms_GetGlobalCoordRange(algorithms, min, max)
_Mesh_Algorithms_GetGlobalCoordRange = _StgDomain._Mesh_Algorithms_GetGlobalCoordRange

def Mesh_Algorithms_NearestVertexWithNeighbours(algorithms: 'void *', point: 'double *') -> "unsigned int":
    return _StgDomain.Mesh_Algorithms_NearestVertexWithNeighbours(algorithms, point)
Mesh_Algorithms_NearestVertexWithNeighbours = _StgDomain.Mesh_Algorithms_NearestVertexWithNeighbours

def Mesh_Algorithms_NearestVertexGeneral(algorithms: 'void *', point: 'double *') -> "unsigned int":
    return _StgDomain.Mesh_Algorithms_NearestVertexGeneral(algorithms, point)
Mesh_Algorithms_NearestVertexGeneral = _StgDomain.Mesh_Algorithms_NearestVertexGeneral

def Mesh_Algorithms_SearchWithFullIncidence(algorithms: 'void *', point: 'double *', dim: 'MeshTopology_Dim *', ind: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_Algorithms_SearchWithFullIncidence(algorithms, point, dim, ind)
Mesh_Algorithms_SearchWithFullIncidence = _StgDomain.Mesh_Algorithms_SearchWithFullIncidence

def Mesh_Algorithms_SearchWithMinIncidence(algorithms: 'void *', point: 'double *', dim: 'MeshTopology_Dim *', ind: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_Algorithms_SearchWithMinIncidence(algorithms, point, dim, ind)
Mesh_Algorithms_SearchWithMinIncidence = _StgDomain.Mesh_Algorithms_SearchWithMinIncidence

def Mesh_Algorithms_SearchGeneral(algorithms: 'void *', point: 'double *', dim: 'MeshTopology_Dim *', ind: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_Algorithms_SearchGeneral(algorithms, point, dim, ind)
Mesh_Algorithms_SearchGeneral = _StgDomain.Mesh_Algorithms_SearchGeneral
class Mesh_RegularAlgorithms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.Mesh_RegularAlgorithms__sizeOfSelf_get, _StgDomain.Mesh_RegularAlgorithms__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.Mesh_RegularAlgorithms__deleteSelf_get, _StgDomain.Mesh_RegularAlgorithms__deleteSelf_set)
    type = _swig_property(_StgDomain.Mesh_RegularAlgorithms_type_get, _StgDomain.Mesh_RegularAlgorithms_type_set)
    nRefs = _swig_property(_StgDomain.Mesh_RegularAlgorithms_nRefs_get, _StgDomain.Mesh_RegularAlgorithms_nRefs_set)
    locked = _swig_property(_StgDomain.Mesh_RegularAlgorithms_locked_get, _StgDomain.Mesh_RegularAlgorithms_locked_set)
    _delete = _swig_property(_StgDomain.Mesh_RegularAlgorithms__delete_get, _StgDomain.Mesh_RegularAlgorithms__delete_set)
    _print = _swig_property(_StgDomain.Mesh_RegularAlgorithms__print_get, _StgDomain.Mesh_RegularAlgorithms__print_set)
    _copy = _swig_property(_StgDomain.Mesh_RegularAlgorithms__copy_get, _StgDomain.Mesh_RegularAlgorithms__copy_set)
    name = _swig_property(_StgDomain.Mesh_RegularAlgorithms_name_get, _StgDomain.Mesh_RegularAlgorithms_name_set)
    nameAllocationType = _swig_property(_StgDomain.Mesh_RegularAlgorithms_nameAllocationType_get, _StgDomain.Mesh_RegularAlgorithms_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.Mesh_RegularAlgorithms__defaultConstructor_get, _StgDomain.Mesh_RegularAlgorithms__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.Mesh_RegularAlgorithms__construct_get, _StgDomain.Mesh_RegularAlgorithms__construct_set)
    _build = _swig_property(_StgDomain.Mesh_RegularAlgorithms__build_get, _StgDomain.Mesh_RegularAlgorithms__build_set)
    _initialise = _swig_property(_StgDomain.Mesh_RegularAlgorithms__initialise_get, _StgDomain.Mesh_RegularAlgorithms__initialise_set)
    _execute = _swig_property(_StgDomain.Mesh_RegularAlgorithms__execute_get, _StgDomain.Mesh_RegularAlgorithms__execute_set)
    _destroy = _swig_property(_StgDomain.Mesh_RegularAlgorithms__destroy_get, _StgDomain.Mesh_RegularAlgorithms__destroy_set)
    isConstructed = _swig_property(_StgDomain.Mesh_RegularAlgorithms_isConstructed_get, _StgDomain.Mesh_RegularAlgorithms_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.Mesh_RegularAlgorithms_isBuilt_get, _StgDomain.Mesh_RegularAlgorithms_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.Mesh_RegularAlgorithms_isInitialised_get, _StgDomain.Mesh_RegularAlgorithms_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.Mesh_RegularAlgorithms_hasExecuted_get, _StgDomain.Mesh_RegularAlgorithms_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.Mesh_RegularAlgorithms_isDestroyed_get, _StgDomain.Mesh_RegularAlgorithms_isDestroyed_set)
    constructType = _swig_property(_StgDomain.Mesh_RegularAlgorithms_constructType_get, _StgDomain.Mesh_RegularAlgorithms_constructType_set)
    buildType = _swig_property(_StgDomain.Mesh_RegularAlgorithms_buildType_get, _StgDomain.Mesh_RegularAlgorithms_buildType_set)
    initialiseType = _swig_property(_StgDomain.Mesh_RegularAlgorithms_initialiseType_get, _StgDomain.Mesh_RegularAlgorithms_initialiseType_set)
    executeType = _swig_property(_StgDomain.Mesh_RegularAlgorithms_executeType_get, _StgDomain.Mesh_RegularAlgorithms_executeType_set)
    destroyType = _swig_property(_StgDomain.Mesh_RegularAlgorithms_destroyType_get, _StgDomain.Mesh_RegularAlgorithms_destroyType_set)
    context = _swig_property(_StgDomain.Mesh_RegularAlgorithms_context_get, _StgDomain.Mesh_RegularAlgorithms_context_set)
    setMeshFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_setMeshFunc_get, _StgDomain.Mesh_RegularAlgorithms_setMeshFunc_set)
    updateFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_updateFunc_get, _StgDomain.Mesh_RegularAlgorithms_updateFunc_set)
    nearestVertexFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_nearestVertexFunc_get, _StgDomain.Mesh_RegularAlgorithms_nearestVertexFunc_set)
    searchFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_searchFunc_get, _StgDomain.Mesh_RegularAlgorithms_searchFunc_set)
    searchElementsFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_searchElementsFunc_get, _StgDomain.Mesh_RegularAlgorithms_searchElementsFunc_set)
    getMinimumSeparationFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_getMinimumSeparationFunc_get, _StgDomain.Mesh_RegularAlgorithms_getMinimumSeparationFunc_set)
    getLocalCoordRangeFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_getLocalCoordRangeFunc_get, _StgDomain.Mesh_RegularAlgorithms_getLocalCoordRangeFunc_set)
    getDomainCoordRangeFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_getDomainCoordRangeFunc_get, _StgDomain.Mesh_RegularAlgorithms_getDomainCoordRangeFunc_set)
    getGlobalCoordRangeFunc = _swig_property(_StgDomain.Mesh_RegularAlgorithms_getGlobalCoordRangeFunc_get, _StgDomain.Mesh_RegularAlgorithms_getGlobalCoordRangeFunc_set)
    nearestVertex = _swig_property(_StgDomain.Mesh_RegularAlgorithms_nearestVertex_get, _StgDomain.Mesh_RegularAlgorithms_nearestVertex_set)
    search = _swig_property(_StgDomain.Mesh_RegularAlgorithms_search_get, _StgDomain.Mesh_RegularAlgorithms_search_set)
    mesh = _swig_property(_StgDomain.Mesh_RegularAlgorithms_mesh_get, _StgDomain.Mesh_RegularAlgorithms_mesh_set)
    rank = _swig_property(_StgDomain.Mesh_RegularAlgorithms_rank_get, _StgDomain.Mesh_RegularAlgorithms_rank_set)
    incArray = _swig_property(_StgDomain.Mesh_RegularAlgorithms_incArray_get, _StgDomain.Mesh_RegularAlgorithms_incArray_set)
    tree = _swig_property(_StgDomain.Mesh_RegularAlgorithms_tree_get, _StgDomain.Mesh_RegularAlgorithms_tree_set)
    sep = _swig_property(_StgDomain.Mesh_RegularAlgorithms_sep_get, _StgDomain.Mesh_RegularAlgorithms_sep_set)
    minCrd = _swig_property(_StgDomain.Mesh_RegularAlgorithms_minCrd_get, _StgDomain.Mesh_RegularAlgorithms_minCrd_set)
    maxCrd = _swig_property(_StgDomain.Mesh_RegularAlgorithms_maxCrd_get, _StgDomain.Mesh_RegularAlgorithms_maxCrd_set)

    def __init__(self):
        _StgDomain.Mesh_RegularAlgorithms_swiginit(self, _StgDomain.new_Mesh_RegularAlgorithms())
    __swig_destroy__ = _StgDomain.delete_Mesh_RegularAlgorithms
Mesh_RegularAlgorithms_swigregister = _StgDomain.Mesh_RegularAlgorithms_swigregister
Mesh_RegularAlgorithms_swigregister(Mesh_RegularAlgorithms)
Mesh_RegularAlgorithms_Type = cvar.Mesh_RegularAlgorithms_Type


def Mesh_RegularAlgorithms_New(name: 'Name', context: 'AbstractContext *') -> "Mesh_RegularAlgorithms *":
    return _StgDomain.Mesh_RegularAlgorithms_New(name, context)
Mesh_RegularAlgorithms_New = _StgDomain.Mesh_RegularAlgorithms_New

def _Mesh_RegularAlgorithms_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setMeshFunc: 'Mesh_Algorithms_SetMeshFunc *', updateFunc: 'Mesh_Algorithms_UpdateFunc *', nearestVertexFunc: 'Mesh_Algorithms_NearestVertexFunc *', searchFunc: 'Mesh_Algorithms_SearchFunc *', searchElementsFunc: 'Mesh_Algorithms_SearchElementsFunc *', getMinimumSeparationFunc: 'Mesh_Algorithms_GetMinimumSeparationFunc *', getLocalCoordRangeFunc: 'Mesh_Algorithms_GetLocalCoordRangeFunc *', getDomainCoordRangeFunc: 'Mesh_Algorithms_GetDomainCoordRangeFunc *', getGlobalCoordRangeFunc: 'Mesh_Algorithms_GetGlobalCoordRangeFunc *') -> "Mesh_RegularAlgorithms *":
    return _StgDomain._Mesh_RegularAlgorithms_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setMeshFunc, updateFunc, nearestVertexFunc, searchFunc, searchElementsFunc, getMinimumSeparationFunc, getLocalCoordRangeFunc, getDomainCoordRangeFunc, getGlobalCoordRangeFunc)
_Mesh_RegularAlgorithms_New = _StgDomain._Mesh_RegularAlgorithms_New

def _Mesh_RegularAlgorithms_Init(algorithms: 'void *') -> "void":
    return _StgDomain._Mesh_RegularAlgorithms_Init(algorithms)
_Mesh_RegularAlgorithms_Init = _StgDomain._Mesh_RegularAlgorithms_Init

def _Mesh_RegularAlgorithms_Delete(algorithms: 'void *') -> "void":
    return _StgDomain._Mesh_RegularAlgorithms_Delete(algorithms)
_Mesh_RegularAlgorithms_Delete = _StgDomain._Mesh_RegularAlgorithms_Delete

def _Mesh_RegularAlgorithms_Print(algorithms: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._Mesh_RegularAlgorithms_Print(algorithms, stream)
_Mesh_RegularAlgorithms_Print = _StgDomain._Mesh_RegularAlgorithms_Print

def _Mesh_RegularAlgorithms_AssignFromXML(algorithms: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._Mesh_RegularAlgorithms_AssignFromXML(algorithms, cf, data)
_Mesh_RegularAlgorithms_AssignFromXML = _StgDomain._Mesh_RegularAlgorithms_AssignFromXML

def _Mesh_RegularAlgorithms_Build(algorithms: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_RegularAlgorithms_Build(algorithms, data)
_Mesh_RegularAlgorithms_Build = _StgDomain._Mesh_RegularAlgorithms_Build

def _Mesh_RegularAlgorithms_Initialise(algorithms: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_RegularAlgorithms_Initialise(algorithms, data)
_Mesh_RegularAlgorithms_Initialise = _StgDomain._Mesh_RegularAlgorithms_Initialise

def _Mesh_RegularAlgorithms_Execute(algorithms: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_RegularAlgorithms_Execute(algorithms, data)
_Mesh_RegularAlgorithms_Execute = _StgDomain._Mesh_RegularAlgorithms_Execute

def _Mesh_RegularAlgorithms_Destroy(algorithms: 'void *', data: 'void *') -> "void":
    return _StgDomain._Mesh_RegularAlgorithms_Destroy(algorithms, data)
_Mesh_RegularAlgorithms_Destroy = _StgDomain._Mesh_RegularAlgorithms_Destroy

def Mesh_RegularAlgorithms_SetMesh(algorithms: 'void *', mesh: 'void *') -> "void":
    return _StgDomain.Mesh_RegularAlgorithms_SetMesh(algorithms, mesh)
Mesh_RegularAlgorithms_SetMesh = _StgDomain.Mesh_RegularAlgorithms_SetMesh

def Mesh_RegularAlgorithms_Update(algorithms: 'void *') -> "void":
    return _StgDomain.Mesh_RegularAlgorithms_Update(algorithms)
Mesh_RegularAlgorithms_Update = _StgDomain.Mesh_RegularAlgorithms_Update

def Mesh_RegularAlgorithms_SearchElements(algorithms: 'void *', point: 'double *', elInd: 'unsigned int *') -> "Bool":
    return _StgDomain.Mesh_RegularAlgorithms_SearchElements(algorithms, point, elInd)
Mesh_RegularAlgorithms_SearchElements = _StgDomain.Mesh_RegularAlgorithms_SearchElements

def Mesh_RegularAlgorithms_Destruct(arg1: 'Mesh_RegularAlgorithms') -> "void":
    return _StgDomain.Mesh_RegularAlgorithms_Destruct(arg1)
Mesh_RegularAlgorithms_Destruct = _StgDomain.Mesh_RegularAlgorithms_Destruct
MT_VERTEX = _StgDomain.MT_VERTEX
MT_EDGE = _StgDomain.MT_EDGE
MT_FACE = _StgDomain.MT_FACE
MT_VOLUME = _StgDomain.MT_VOLUME
class MeshElement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    elementIndex = _swig_property(_StgDomain.MeshElement_elementIndex_get, _StgDomain.MeshElement_elementIndex_set)
    elementMesh = _swig_property(_StgDomain.MeshElement_elementMesh_get, _StgDomain.MeshElement_elementMesh_set)

    def __init__(self):
        _StgDomain.MeshElement_swiginit(self, _StgDomain.new_MeshElement())
    __swig_destroy__ = _StgDomain.delete_MeshElement
MeshElement_swigregister = _StgDomain.MeshElement_swigregister
MeshElement_swigregister(MeshElement)

class ParticleLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.ParticleLayout__sizeOfSelf_get, _StgDomain.ParticleLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.ParticleLayout__deleteSelf_get, _StgDomain.ParticleLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.ParticleLayout_type_get, _StgDomain.ParticleLayout_type_set)
    nRefs = _swig_property(_StgDomain.ParticleLayout_nRefs_get, _StgDomain.ParticleLayout_nRefs_set)
    locked = _swig_property(_StgDomain.ParticleLayout_locked_get, _StgDomain.ParticleLayout_locked_set)
    _delete = _swig_property(_StgDomain.ParticleLayout__delete_get, _StgDomain.ParticleLayout__delete_set)
    _print = _swig_property(_StgDomain.ParticleLayout__print_get, _StgDomain.ParticleLayout__print_set)
    _copy = _swig_property(_StgDomain.ParticleLayout__copy_get, _StgDomain.ParticleLayout__copy_set)
    name = _swig_property(_StgDomain.ParticleLayout_name_get, _StgDomain.ParticleLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.ParticleLayout_nameAllocationType_get, _StgDomain.ParticleLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.ParticleLayout__defaultConstructor_get, _StgDomain.ParticleLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.ParticleLayout__construct_get, _StgDomain.ParticleLayout__construct_set)
    _build = _swig_property(_StgDomain.ParticleLayout__build_get, _StgDomain.ParticleLayout__build_set)
    _initialise = _swig_property(_StgDomain.ParticleLayout__initialise_get, _StgDomain.ParticleLayout__initialise_set)
    _execute = _swig_property(_StgDomain.ParticleLayout__execute_get, _StgDomain.ParticleLayout__execute_set)
    _destroy = _swig_property(_StgDomain.ParticleLayout__destroy_get, _StgDomain.ParticleLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.ParticleLayout_isConstructed_get, _StgDomain.ParticleLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.ParticleLayout_isBuilt_get, _StgDomain.ParticleLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.ParticleLayout_isInitialised_get, _StgDomain.ParticleLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.ParticleLayout_hasExecuted_get, _StgDomain.ParticleLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.ParticleLayout_isDestroyed_get, _StgDomain.ParticleLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.ParticleLayout_constructType_get, _StgDomain.ParticleLayout_constructType_set)
    buildType = _swig_property(_StgDomain.ParticleLayout_buildType_get, _StgDomain.ParticleLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.ParticleLayout_initialiseType_get, _StgDomain.ParticleLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.ParticleLayout_executeType_get, _StgDomain.ParticleLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.ParticleLayout_destroyType_get, _StgDomain.ParticleLayout_destroyType_set)
    context = _swig_property(_StgDomain.ParticleLayout_context_get, _StgDomain.ParticleLayout_context_set)
    _setInitialCounts = _swig_property(_StgDomain.ParticleLayout__setInitialCounts_get, _StgDomain.ParticleLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgDomain.ParticleLayout__initialiseParticles_get, _StgDomain.ParticleLayout__initialiseParticles_set)
    debug = _swig_property(_StgDomain.ParticleLayout_debug_get, _StgDomain.ParticleLayout_debug_set)
    coordSystem = _swig_property(_StgDomain.ParticleLayout_coordSystem_get, _StgDomain.ParticleLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgDomain.ParticleLayout_weightsInitialisedAtStartup_get, _StgDomain.ParticleLayout_weightsInitialisedAtStartup_set)

    def __init__(self):
        _StgDomain.ParticleLayout_swiginit(self, _StgDomain.new_ParticleLayout())
    __swig_destroy__ = _StgDomain.delete_ParticleLayout
ParticleLayout_swigregister = _StgDomain.ParticleLayout_swigregister
ParticleLayout_swigregister(ParticleLayout)
ParticleLayout_Type = cvar.ParticleLayout_Type


def _ParticleLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool') -> "ParticleLayout *":
    return _StgDomain._ParticleLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup)
_ParticleLayout_New = _StgDomain._ParticleLayout_New

def _ParticleLayout_Init(particleLayout: 'void *', context: 'AbstractContext *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool') -> "void":
    return _StgDomain._ParticleLayout_Init(particleLayout, context, coordSystem, weightsInitialisedAtStartup)
_ParticleLayout_Init = _StgDomain._ParticleLayout_Init

def _ParticleLayout_Delete(particleLayout: 'void *') -> "void":
    return _StgDomain._ParticleLayout_Delete(particleLayout)
_ParticleLayout_Delete = _StgDomain._ParticleLayout_Delete

def _ParticleLayout_Print(particleLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._ParticleLayout_Print(particleLayout, stream)
_ParticleLayout_Print = _StgDomain._ParticleLayout_Print

def _ParticleLayout_Destroy(particleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleLayout_Destroy(particleLayout, data)
_ParticleLayout_Destroy = _StgDomain._ParticleLayout_Destroy

def _ParticleLayout_Copy(particleLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._ParticleLayout_Copy(particleLayout, dest, deep, nameExt, ptrMap)
_ParticleLayout_Copy = _StgDomain._ParticleLayout_Copy

def _ParticleLayout_AssignFromXML(particleLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._ParticleLayout_AssignFromXML(particleLayout, cf, data)
_ParticleLayout_AssignFromXML = _StgDomain._ParticleLayout_AssignFromXML

def ParticleLayout_SetInitialCounts(particleLayout: 'void *', swarm: 'void *') -> "void":
    return _StgDomain.ParticleLayout_SetInitialCounts(particleLayout, swarm)
ParticleLayout_SetInitialCounts = _StgDomain.ParticleLayout_SetInitialCounts

def ParticleLayout_InitialiseParticles(particleLayout: 'void *', swarm: 'void *') -> "void":
    return _StgDomain.ParticleLayout_InitialiseParticles(particleLayout, swarm)
ParticleLayout_InitialiseParticles = _StgDomain.ParticleLayout_InitialiseParticles
class GlobalParticleLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.GlobalParticleLayout__sizeOfSelf_get, _StgDomain.GlobalParticleLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.GlobalParticleLayout__deleteSelf_get, _StgDomain.GlobalParticleLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.GlobalParticleLayout_type_get, _StgDomain.GlobalParticleLayout_type_set)
    nRefs = _swig_property(_StgDomain.GlobalParticleLayout_nRefs_get, _StgDomain.GlobalParticleLayout_nRefs_set)
    locked = _swig_property(_StgDomain.GlobalParticleLayout_locked_get, _StgDomain.GlobalParticleLayout_locked_set)
    _delete = _swig_property(_StgDomain.GlobalParticleLayout__delete_get, _StgDomain.GlobalParticleLayout__delete_set)
    _print = _swig_property(_StgDomain.GlobalParticleLayout__print_get, _StgDomain.GlobalParticleLayout__print_set)
    _copy = _swig_property(_StgDomain.GlobalParticleLayout__copy_get, _StgDomain.GlobalParticleLayout__copy_set)
    name = _swig_property(_StgDomain.GlobalParticleLayout_name_get, _StgDomain.GlobalParticleLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.GlobalParticleLayout_nameAllocationType_get, _StgDomain.GlobalParticleLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.GlobalParticleLayout__defaultConstructor_get, _StgDomain.GlobalParticleLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.GlobalParticleLayout__construct_get, _StgDomain.GlobalParticleLayout__construct_set)
    _build = _swig_property(_StgDomain.GlobalParticleLayout__build_get, _StgDomain.GlobalParticleLayout__build_set)
    _initialise = _swig_property(_StgDomain.GlobalParticleLayout__initialise_get, _StgDomain.GlobalParticleLayout__initialise_set)
    _execute = _swig_property(_StgDomain.GlobalParticleLayout__execute_get, _StgDomain.GlobalParticleLayout__execute_set)
    _destroy = _swig_property(_StgDomain.GlobalParticleLayout__destroy_get, _StgDomain.GlobalParticleLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.GlobalParticleLayout_isConstructed_get, _StgDomain.GlobalParticleLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.GlobalParticleLayout_isBuilt_get, _StgDomain.GlobalParticleLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.GlobalParticleLayout_isInitialised_get, _StgDomain.GlobalParticleLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.GlobalParticleLayout_hasExecuted_get, _StgDomain.GlobalParticleLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.GlobalParticleLayout_isDestroyed_get, _StgDomain.GlobalParticleLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.GlobalParticleLayout_constructType_get, _StgDomain.GlobalParticleLayout_constructType_set)
    buildType = _swig_property(_StgDomain.GlobalParticleLayout_buildType_get, _StgDomain.GlobalParticleLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.GlobalParticleLayout_initialiseType_get, _StgDomain.GlobalParticleLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.GlobalParticleLayout_executeType_get, _StgDomain.GlobalParticleLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.GlobalParticleLayout_destroyType_get, _StgDomain.GlobalParticleLayout_destroyType_set)
    context = _swig_property(_StgDomain.GlobalParticleLayout_context_get, _StgDomain.GlobalParticleLayout_context_set)
    _setInitialCounts = _swig_property(_StgDomain.GlobalParticleLayout__setInitialCounts_get, _StgDomain.GlobalParticleLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgDomain.GlobalParticleLayout__initialiseParticles_get, _StgDomain.GlobalParticleLayout__initialiseParticles_set)
    debug = _swig_property(_StgDomain.GlobalParticleLayout_debug_get, _StgDomain.GlobalParticleLayout_debug_set)
    coordSystem = _swig_property(_StgDomain.GlobalParticleLayout_coordSystem_get, _StgDomain.GlobalParticleLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgDomain.GlobalParticleLayout_weightsInitialisedAtStartup_get, _StgDomain.GlobalParticleLayout_weightsInitialisedAtStartup_set)
    _initialiseParticle = _swig_property(_StgDomain.GlobalParticleLayout__initialiseParticle_get, _StgDomain.GlobalParticleLayout__initialiseParticle_set)
    totalInitialParticles = _swig_property(_StgDomain.GlobalParticleLayout_totalInitialParticles_get, _StgDomain.GlobalParticleLayout_totalInitialParticles_set)
    averageInitialParticlesPerCell = _swig_property(_StgDomain.GlobalParticleLayout_averageInitialParticlesPerCell_get, _StgDomain.GlobalParticleLayout_averageInitialParticlesPerCell_set)
    mustUseAllParticles = _swig_property(_StgDomain.GlobalParticleLayout_mustUseAllParticles_get, _StgDomain.GlobalParticleLayout_mustUseAllParticles_set)

    def __init__(self):
        _StgDomain.GlobalParticleLayout_swiginit(self, _StgDomain.new_GlobalParticleLayout())
    __swig_destroy__ = _StgDomain.delete_GlobalParticleLayout
GlobalParticleLayout_swigregister = _StgDomain.GlobalParticleLayout_swigregister
GlobalParticleLayout_swigregister(GlobalParticleLayout)
GlobalParticleLayout_Type = cvar.GlobalParticleLayout_Type


def _GlobalParticleLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', _initialiseParticle: 'GlobalParticleLayout_InitialiseParticleFunction *', totalInitialParticles: 'Particle_Index', averageInitialParticlesPerCell: 'double') -> "GlobalParticleLayout *":
    return _StgDomain._GlobalParticleLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup, _initialiseParticle, totalInitialParticles, averageInitialParticlesPerCell)
_GlobalParticleLayout_New = _StgDomain._GlobalParticleLayout_New

def _GlobalParticleLayout_AssignFromXML(component: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._GlobalParticleLayout_AssignFromXML(component, cf, data)
_GlobalParticleLayout_AssignFromXML = _StgDomain._GlobalParticleLayout_AssignFromXML

def _GlobalParticleLayout_Init(particleLayout: 'void *', totalInitialParticles: 'Particle_Index', averageInitialParticlesPerCell: 'double') -> "void":
    return _StgDomain._GlobalParticleLayout_Init(particleLayout, totalInitialParticles, averageInitialParticlesPerCell)
_GlobalParticleLayout_Init = _StgDomain._GlobalParticleLayout_Init

def _GlobalParticleLayout_Delete(particleLayout: 'void *') -> "void":
    return _StgDomain._GlobalParticleLayout_Delete(particleLayout)
_GlobalParticleLayout_Delete = _StgDomain._GlobalParticleLayout_Delete

def _GlobalParticleLayout_Print(particleLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._GlobalParticleLayout_Print(particleLayout, stream)
_GlobalParticleLayout_Print = _StgDomain._GlobalParticleLayout_Print

def _GlobalParticleLayout_Destroy(particleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GlobalParticleLayout_Destroy(particleLayout, data)
_GlobalParticleLayout_Destroy = _StgDomain._GlobalParticleLayout_Destroy

def _GlobalParticleLayout_Copy(particleLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._GlobalParticleLayout_Copy(particleLayout, dest, deep, nameExt, ptrMap)
_GlobalParticleLayout_Copy = _StgDomain._GlobalParticleLayout_Copy

def _GlobalParticleLayout_SetInitialCounts(particleLayout: 'void *', _swarm: 'void *') -> "void":
    return _StgDomain._GlobalParticleLayout_SetInitialCounts(particleLayout, _swarm)
_GlobalParticleLayout_SetInitialCounts = _StgDomain._GlobalParticleLayout_SetInitialCounts

def _GlobalParticleLayout_InitialiseParticles(particleLayout: 'void *', _swarm: 'void *') -> "void":
    return _StgDomain._GlobalParticleLayout_InitialiseParticles(particleLayout, _swarm)
_GlobalParticleLayout_InitialiseParticles = _StgDomain._GlobalParticleLayout_InitialiseParticles

def GlobalParticleLayout_InitialiseParticle(particleLayout: 'void *', swarm: 'void *', newParticle_I: 'Particle_Index', particle: 'void *') -> "void":
    return _StgDomain.GlobalParticleLayout_InitialiseParticle(particleLayout, swarm, newParticle_I, particle)
GlobalParticleLayout_InitialiseParticle = _StgDomain.GlobalParticleLayout_InitialiseParticle
class SwarmVariable(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.SwarmVariable__sizeOfSelf_get, _StgDomain.SwarmVariable__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.SwarmVariable__deleteSelf_get, _StgDomain.SwarmVariable__deleteSelf_set)
    type = _swig_property(_StgDomain.SwarmVariable_type_get, _StgDomain.SwarmVariable_type_set)
    nRefs = _swig_property(_StgDomain.SwarmVariable_nRefs_get, _StgDomain.SwarmVariable_nRefs_set)
    locked = _swig_property(_StgDomain.SwarmVariable_locked_get, _StgDomain.SwarmVariable_locked_set)
    _delete = _swig_property(_StgDomain.SwarmVariable__delete_get, _StgDomain.SwarmVariable__delete_set)
    _print = _swig_property(_StgDomain.SwarmVariable__print_get, _StgDomain.SwarmVariable__print_set)
    _copy = _swig_property(_StgDomain.SwarmVariable__copy_get, _StgDomain.SwarmVariable__copy_set)
    name = _swig_property(_StgDomain.SwarmVariable_name_get, _StgDomain.SwarmVariable_name_set)
    nameAllocationType = _swig_property(_StgDomain.SwarmVariable_nameAllocationType_get, _StgDomain.SwarmVariable_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.SwarmVariable__defaultConstructor_get, _StgDomain.SwarmVariable__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.SwarmVariable__construct_get, _StgDomain.SwarmVariable__construct_set)
    _build = _swig_property(_StgDomain.SwarmVariable__build_get, _StgDomain.SwarmVariable__build_set)
    _initialise = _swig_property(_StgDomain.SwarmVariable__initialise_get, _StgDomain.SwarmVariable__initialise_set)
    _execute = _swig_property(_StgDomain.SwarmVariable__execute_get, _StgDomain.SwarmVariable__execute_set)
    _destroy = _swig_property(_StgDomain.SwarmVariable__destroy_get, _StgDomain.SwarmVariable__destroy_set)
    isConstructed = _swig_property(_StgDomain.SwarmVariable_isConstructed_get, _StgDomain.SwarmVariable_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.SwarmVariable_isBuilt_get, _StgDomain.SwarmVariable_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.SwarmVariable_isInitialised_get, _StgDomain.SwarmVariable_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.SwarmVariable_hasExecuted_get, _StgDomain.SwarmVariable_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.SwarmVariable_isDestroyed_get, _StgDomain.SwarmVariable_isDestroyed_set)
    constructType = _swig_property(_StgDomain.SwarmVariable_constructType_get, _StgDomain.SwarmVariable_constructType_set)
    buildType = _swig_property(_StgDomain.SwarmVariable_buildType_get, _StgDomain.SwarmVariable_buildType_set)
    initialiseType = _swig_property(_StgDomain.SwarmVariable_initialiseType_get, _StgDomain.SwarmVariable_initialiseType_set)
    executeType = _swig_property(_StgDomain.SwarmVariable_executeType_get, _StgDomain.SwarmVariable_executeType_set)
    destroyType = _swig_property(_StgDomain.SwarmVariable_destroyType_get, _StgDomain.SwarmVariable_destroyType_set)
    context = _swig_property(_StgDomain.SwarmVariable_context_get, _StgDomain.SwarmVariable_context_set)
    _valueAt = _swig_property(_StgDomain.SwarmVariable__valueAt_get, _StgDomain.SwarmVariable__valueAt_set)
    _getMinGlobalMagnitude = _swig_property(_StgDomain.SwarmVariable__getMinGlobalMagnitude_get, _StgDomain.SwarmVariable__getMinGlobalMagnitude_set)
    _getMaxGlobalMagnitude = _swig_property(_StgDomain.SwarmVariable__getMaxGlobalMagnitude_get, _StgDomain.SwarmVariable__getMaxGlobalMagnitude_set)
    swarm = _swig_property(_StgDomain.SwarmVariable_swarm_get, _StgDomain.SwarmVariable_swarm_set)
    variable = _swig_property(_StgDomain.SwarmVariable_variable_get, _StgDomain.SwarmVariable_variable_set)
    dofCount = _swig_property(_StgDomain.SwarmVariable_dofCount_get, _StgDomain.SwarmVariable_dofCount_set)
    dim = _swig_property(_StgDomain.SwarmVariable_dim_get, _StgDomain.SwarmVariable_dim_set)
    swarmVariable_Register = _swig_property(_StgDomain.SwarmVariable_swarmVariable_Register_get, _StgDomain.SwarmVariable_swarmVariable_Register_set)
    cachedTimestep = _swig_property(_StgDomain.SwarmVariable_cachedTimestep_get, _StgDomain.SwarmVariable_cachedTimestep_set)
    magnitudeMin = _swig_property(_StgDomain.SwarmVariable_magnitudeMin_get, _StgDomain.SwarmVariable_magnitudeMin_set)
    magnitudeMax = _swig_property(_StgDomain.SwarmVariable_magnitudeMax_get, _StgDomain.SwarmVariable_magnitudeMax_set)
    useCacheMaxMin = _swig_property(_StgDomain.SwarmVariable_useCacheMaxMin_get, _StgDomain.SwarmVariable_useCacheMaxMin_set)
    useKDTree = _swig_property(_StgDomain.SwarmVariable_useKDTree_get, _StgDomain.SwarmVariable_useKDTree_set)
    addToSwarmParticleExtension = _swig_property(_StgDomain.SwarmVariable_addToSwarmParticleExtension_get, _StgDomain.SwarmVariable_addToSwarmParticleExtension_set)

    def __init__(self):
        _StgDomain.SwarmVariable_swiginit(self, _StgDomain.new_SwarmVariable())
    __swig_destroy__ = _StgDomain.delete_SwarmVariable
SwarmVariable_swigregister = _StgDomain.SwarmVariable_swigregister
SwarmVariable_swigregister(SwarmVariable)
SwarmVariable_Type = cvar.SwarmVariable_Type


def _SwarmVariable_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._SwarmVariable_DefaultNew(name)
_SwarmVariable_DefaultNew = _StgDomain._SwarmVariable_DefaultNew

def SwarmVariable_New(name: 'Name', context: 'AbstractContext *', swarm: 'Swarm', variable: '_StgVariable', dofCount: 'Index', addToSwarmParticleExtension: 'Bool') -> "SwarmVariable *":
    return _StgDomain.SwarmVariable_New(name, context, swarm, variable, dofCount, addToSwarmParticleExtension)
SwarmVariable_New = _StgDomain.SwarmVariable_New

def _SwarmVariable_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _valueAt: 'SwarmVariable_ValueAtFunction *', _getMinGlobalMagnitude: 'SwarmVariable_GetGlobalValueFunction *', _getMaxGlobalMagnitude: 'SwarmVariable_GetGlobalValueFunction *') -> "SwarmVariable *":
    return _StgDomain._SwarmVariable_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _valueAt, _getMinGlobalMagnitude, _getMaxGlobalMagnitude)
_SwarmVariable_New = _StgDomain._SwarmVariable_New

def _SwarmVariable_Init(swarmVariable: 'void *', context: 'AbstractContext *', swarm: 'Swarm', variable: '_StgVariable', dofCount: 'Index', useCacheMaxMin: 'Bool', addToSwarmParticleExtension: 'Bool') -> "void":
    return _StgDomain._SwarmVariable_Init(swarmVariable, context, swarm, variable, dofCount, useCacheMaxMin, addToSwarmParticleExtension)
_SwarmVariable_Init = _StgDomain._SwarmVariable_Init

def _SwarmVariable_Delete(swarmVariable: 'void *') -> "void":
    return _StgDomain._SwarmVariable_Delete(swarmVariable)
_SwarmVariable_Delete = _StgDomain._SwarmVariable_Delete

def _SwarmVariable_Print(_swarmVariable: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._SwarmVariable_Print(_swarmVariable, stream)
_SwarmVariable_Print = _StgDomain._SwarmVariable_Print

def _SwarmVariable_AssignFromXML(swarmVariable: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._SwarmVariable_AssignFromXML(swarmVariable, cf, data)
_SwarmVariable_AssignFromXML = _StgDomain._SwarmVariable_AssignFromXML

def _SwarmVariable_Build(swarmVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._SwarmVariable_Build(swarmVariable, data)
_SwarmVariable_Build = _StgDomain._SwarmVariable_Build

def _SwarmVariable_Execute(swarmVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._SwarmVariable_Execute(swarmVariable, data)
_SwarmVariable_Execute = _StgDomain._SwarmVariable_Execute

def _SwarmVariable_Destroy(swarmVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._SwarmVariable_Destroy(swarmVariable, data)
_SwarmVariable_Destroy = _StgDomain._SwarmVariable_Destroy

def _SwarmVariable_Initialise(swarmVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._SwarmVariable_Initialise(swarmVariable, data)
_SwarmVariable_Initialise = _StgDomain._SwarmVariable_Initialise

def _SwarmVariable_Copy(swarmVariable: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._SwarmVariable_Copy(swarmVariable, dest, deep, nameExt, ptrMap)
_SwarmVariable_Copy = _StgDomain._SwarmVariable_Copy

def SwarmVariable_GetMinGlobalMagnitude(swarmVariable: 'void *') -> "double":
    return _StgDomain.SwarmVariable_GetMinGlobalMagnitude(swarmVariable)
SwarmVariable_GetMinGlobalMagnitude = _StgDomain.SwarmVariable_GetMinGlobalMagnitude

def SwarmVariable_GetMaxGlobalMagnitude(swarmVariable: 'void *') -> "double":
    return _StgDomain.SwarmVariable_GetMaxGlobalMagnitude(swarmVariable)
SwarmVariable_GetMaxGlobalMagnitude = _StgDomain.SwarmVariable_GetMaxGlobalMagnitude

def SwarmVariable_CacheMinMaxGlobalMagnitude(swarmVariable: 'void *') -> "void":
    return _StgDomain.SwarmVariable_CacheMinMaxGlobalMagnitude(swarmVariable)
SwarmVariable_CacheMinMaxGlobalMagnitude = _StgDomain.SwarmVariable_CacheMinMaxGlobalMagnitude

def SwarmVariable_GetMinMaxGlobalMagnitude(swarmVariable: 'void *') -> "void":
    return _StgDomain.SwarmVariable_GetMinMaxGlobalMagnitude(swarmVariable)
SwarmVariable_GetMinMaxGlobalMagnitude = _StgDomain.SwarmVariable_GetMinMaxGlobalMagnitude

def SwarmVariable_GetCachedMinGlobalMagnitude(swarmVariable: 'void *') -> "double":
    return _StgDomain.SwarmVariable_GetCachedMinGlobalMagnitude(swarmVariable)
SwarmVariable_GetCachedMinGlobalMagnitude = _StgDomain.SwarmVariable_GetCachedMinGlobalMagnitude

def SwarmVariable_GetCachedMaxGlobalMagnitude(swarmVariable: 'void *') -> "double":
    return _StgDomain.SwarmVariable_GetCachedMaxGlobalMagnitude(swarmVariable)
SwarmVariable_GetCachedMaxGlobalMagnitude = _StgDomain.SwarmVariable_GetCachedMaxGlobalMagnitude

def _SwarmVariable_ValueAtDouble(swarmVariable: 'void *', lParticle_I: 'Particle_Index', value: 'double *') -> "void":
    return _StgDomain._SwarmVariable_ValueAtDouble(swarmVariable, lParticle_I, value)
_SwarmVariable_ValueAtDouble = _StgDomain._SwarmVariable_ValueAtDouble

def _SwarmVariable_ValueAtInt(swarmVariable: 'void *', lParticle_I: 'Particle_Index', value: 'double *') -> "void":
    return _StgDomain._SwarmVariable_ValueAtInt(swarmVariable, lParticle_I, value)
_SwarmVariable_ValueAtInt = _StgDomain._SwarmVariable_ValueAtInt

def _SwarmVariable_ValueAtFloat(swarmVariable: 'void *', lParticle_I: 'Particle_Index', value: 'double *') -> "void":
    return _StgDomain._SwarmVariable_ValueAtFloat(swarmVariable, lParticle_I, value)
_SwarmVariable_ValueAtFloat = _StgDomain._SwarmVariable_ValueAtFloat

def _SwarmVariable_ValueAtChar(swarmVariable: 'void *', lParticle_I: 'Particle_Index', value: 'double *') -> "void":
    return _StgDomain._SwarmVariable_ValueAtChar(swarmVariable, lParticle_I, value)
_SwarmVariable_ValueAtChar = _StgDomain._SwarmVariable_ValueAtChar

def _SwarmVariable_ValueAtShort(swarmVariable: 'void *', lParticle_I: 'Particle_Index', value: 'double *') -> "void":
    return _StgDomain._SwarmVariable_ValueAtShort(swarmVariable, lParticle_I, value)
_SwarmVariable_ValueAtShort = _StgDomain._SwarmVariable_ValueAtShort

def _SwarmVariable_GetMaxGlobalMagnitude(swarmVariable: 'void *') -> "double":
    return _StgDomain._SwarmVariable_GetMaxGlobalMagnitude(swarmVariable)
_SwarmVariable_GetMaxGlobalMagnitude = _StgDomain._SwarmVariable_GetMaxGlobalMagnitude

def _SwarmVariable_GetMinGlobalMagnitude(swarmVariable: 'void *') -> "double":
    return _StgDomain._SwarmVariable_GetMinGlobalMagnitude(swarmVariable)
_SwarmVariable_GetMinGlobalMagnitude = _StgDomain._SwarmVariable_GetMinGlobalMagnitude
class CellLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.CellLayout__sizeOfSelf_get, _StgDomain.CellLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.CellLayout__deleteSelf_get, _StgDomain.CellLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.CellLayout_type_get, _StgDomain.CellLayout_type_set)
    nRefs = _swig_property(_StgDomain.CellLayout_nRefs_get, _StgDomain.CellLayout_nRefs_set)
    locked = _swig_property(_StgDomain.CellLayout_locked_get, _StgDomain.CellLayout_locked_set)
    _delete = _swig_property(_StgDomain.CellLayout__delete_get, _StgDomain.CellLayout__delete_set)
    _print = _swig_property(_StgDomain.CellLayout__print_get, _StgDomain.CellLayout__print_set)
    _copy = _swig_property(_StgDomain.CellLayout__copy_get, _StgDomain.CellLayout__copy_set)
    name = _swig_property(_StgDomain.CellLayout_name_get, _StgDomain.CellLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.CellLayout_nameAllocationType_get, _StgDomain.CellLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.CellLayout__defaultConstructor_get, _StgDomain.CellLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.CellLayout__construct_get, _StgDomain.CellLayout__construct_set)
    _build = _swig_property(_StgDomain.CellLayout__build_get, _StgDomain.CellLayout__build_set)
    _initialise = _swig_property(_StgDomain.CellLayout__initialise_get, _StgDomain.CellLayout__initialise_set)
    _execute = _swig_property(_StgDomain.CellLayout__execute_get, _StgDomain.CellLayout__execute_set)
    _destroy = _swig_property(_StgDomain.CellLayout__destroy_get, _StgDomain.CellLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.CellLayout_isConstructed_get, _StgDomain.CellLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.CellLayout_isBuilt_get, _StgDomain.CellLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.CellLayout_isInitialised_get, _StgDomain.CellLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.CellLayout_hasExecuted_get, _StgDomain.CellLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.CellLayout_isDestroyed_get, _StgDomain.CellLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.CellLayout_constructType_get, _StgDomain.CellLayout_constructType_set)
    buildType = _swig_property(_StgDomain.CellLayout_buildType_get, _StgDomain.CellLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.CellLayout_initialiseType_get, _StgDomain.CellLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.CellLayout_executeType_get, _StgDomain.CellLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.CellLayout_destroyType_get, _StgDomain.CellLayout_destroyType_set)
    context = _swig_property(_StgDomain.CellLayout_context_get, _StgDomain.CellLayout_context_set)
    _cellLocalCount = _swig_property(_StgDomain.CellLayout__cellLocalCount_get, _StgDomain.CellLayout__cellLocalCount_set)
    _cellShadowCount = _swig_property(_StgDomain.CellLayout__cellShadowCount_get, _StgDomain.CellLayout__cellShadowCount_set)
    _pointCount = _swig_property(_StgDomain.CellLayout__pointCount_get, _StgDomain.CellLayout__pointCount_set)
    _initialisePoints = _swig_property(_StgDomain.CellLayout__initialisePoints_get, _StgDomain.CellLayout__initialisePoints_set)
    _mapElementIdToCellId = _swig_property(_StgDomain.CellLayout__mapElementIdToCellId_get, _StgDomain.CellLayout__mapElementIdToCellId_set)
    _isInCell = _swig_property(_StgDomain.CellLayout__isInCell_get, _StgDomain.CellLayout__isInCell_set)
    _cellOf = _swig_property(_StgDomain.CellLayout__cellOf_get, _StgDomain.CellLayout__cellOf_set)
    _getShadowInfo = _swig_property(_StgDomain.CellLayout__getShadowInfo_get, _StgDomain.CellLayout__getShadowInfo_set)

    def __init__(self):
        _StgDomain.CellLayout_swiginit(self, _StgDomain.new_CellLayout())
    __swig_destroy__ = _StgDomain.delete_CellLayout
CellLayout_swigregister = _StgDomain.CellLayout_swigregister
CellLayout_swigregister(CellLayout)
CellLayout_Type = cvar.CellLayout_Type


def _CellLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _cellLocalCount: 'CellLayout_CellCountFunction *', _cellShadowCount: 'CellLayout_CellCountFunction *', _pointCount: 'CellLayout_PointCountFunction *', _initialisePoints: 'CellLayout_InitialisePointsFunction *', _mapElementIdToCellId: 'CellLayout_MapElementIdToCellIdFunction *', _isInCell: 'CellLayout_IsInCellFunction *', _cellOf: 'CellLayout_CellOfFunction *', _getShadowInfo: 'CellLayout_GetShadowInfoFunction *') -> "CellLayout *":
    return _StgDomain._CellLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _cellLocalCount, _cellShadowCount, _pointCount, _initialisePoints, _mapElementIdToCellId, _isInCell, _cellOf, _getShadowInfo)
_CellLayout_New = _StgDomain._CellLayout_New

def _CellLayout_Init(arg1: 'CellLayout') -> "void":
    return _StgDomain._CellLayout_Init(arg1)
_CellLayout_Init = _StgDomain._CellLayout_Init

def _CellLayout_Delete(cellLayout: 'void *') -> "void":
    return _StgDomain._CellLayout_Delete(cellLayout)
_CellLayout_Delete = _StgDomain._CellLayout_Delete

def _CellLayout_Print(cellLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._CellLayout_Print(cellLayout, stream)
_CellLayout_Print = _StgDomain._CellLayout_Print

def _CellLayout_Destroy(cellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._CellLayout_Destroy(cellLayout, data)
_CellLayout_Destroy = _StgDomain._CellLayout_Destroy

def _CellLayout_Copy(cellLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._CellLayout_Copy(cellLayout, dest, deep, nameExt, ptrMap)
_CellLayout_Copy = _StgDomain._CellLayout_Copy

def _CellLayout_AssignFromXML(cellLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._CellLayout_AssignFromXML(cellLayout, cf, data)
_CellLayout_AssignFromXML = _StgDomain._CellLayout_AssignFromXML

def CellLayout_CellDomainCount(cellLayout: 'void *') -> "Cell_Index":
    return _StgDomain.CellLayout_CellDomainCount(cellLayout)
CellLayout_CellDomainCount = _StgDomain.CellLayout_CellDomainCount

def CellLayout_CellLocalCount(cellLayout: 'void *') -> "Cell_Index":
    return _StgDomain.CellLayout_CellLocalCount(cellLayout)
CellLayout_CellLocalCount = _StgDomain.CellLayout_CellLocalCount

def CellLayout_CellShadowCount(cellLayout: 'void *') -> "Cell_Index":
    return _StgDomain.CellLayout_CellShadowCount(cellLayout)
CellLayout_CellShadowCount = _StgDomain.CellLayout_CellShadowCount

def CellLayout_PointCount(cellLayout: 'void *', cell_I: 'Cell_Index') -> "Cell_PointIndex":
    return _StgDomain.CellLayout_PointCount(cellLayout, cell_I)
CellLayout_PointCount = _StgDomain.CellLayout_PointCount

def CellLayout_InitialiseCellPoints(cellLayout: 'void *', cell_I: 'Cell_Index', pointCount: 'Cell_PointIndex', points: 'Cell_Points') -> "void":
    return _StgDomain.CellLayout_InitialiseCellPoints(cellLayout, cell_I, pointCount, points)
CellLayout_InitialiseCellPoints = _StgDomain.CellLayout_InitialiseCellPoints

def CellLayout_MapElementIdToCellId(cellLayout: 'void *', element_dI: 'unsigned int') -> "Cell_Index":
    return _StgDomain.CellLayout_MapElementIdToCellId(cellLayout, element_dI)
CellLayout_MapElementIdToCellId = _StgDomain.CellLayout_MapElementIdToCellId

def CellLayout_IsInCell(cellLayout: 'void *', cellIndex: 'Cell_Index', particle: 'void *') -> "Bool":
    return _StgDomain.CellLayout_IsInCell(cellLayout, cellIndex, particle)
CellLayout_IsInCell = _StgDomain.CellLayout_IsInCell

def CellLayout_CellOf(cellLayout: 'void *', particle: 'void *') -> "Cell_Index":
    return _StgDomain.CellLayout_CellOf(cellLayout, particle)
CellLayout_CellOf = _StgDomain.CellLayout_CellOf

def CellLayout_GetShadowInfo(cellLayout: 'void *') -> "ShadowInfo *":
    return _StgDomain.CellLayout_GetShadowInfo(cellLayout)
CellLayout_GetShadowInfo = _StgDomain.CellLayout_GetShadowInfo
class ElementCellLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.ElementCellLayout__sizeOfSelf_get, _StgDomain.ElementCellLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.ElementCellLayout__deleteSelf_get, _StgDomain.ElementCellLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.ElementCellLayout_type_get, _StgDomain.ElementCellLayout_type_set)
    nRefs = _swig_property(_StgDomain.ElementCellLayout_nRefs_get, _StgDomain.ElementCellLayout_nRefs_set)
    locked = _swig_property(_StgDomain.ElementCellLayout_locked_get, _StgDomain.ElementCellLayout_locked_set)
    _delete = _swig_property(_StgDomain.ElementCellLayout__delete_get, _StgDomain.ElementCellLayout__delete_set)
    _print = _swig_property(_StgDomain.ElementCellLayout__print_get, _StgDomain.ElementCellLayout__print_set)
    _copy = _swig_property(_StgDomain.ElementCellLayout__copy_get, _StgDomain.ElementCellLayout__copy_set)
    name = _swig_property(_StgDomain.ElementCellLayout_name_get, _StgDomain.ElementCellLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.ElementCellLayout_nameAllocationType_get, _StgDomain.ElementCellLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.ElementCellLayout__defaultConstructor_get, _StgDomain.ElementCellLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.ElementCellLayout__construct_get, _StgDomain.ElementCellLayout__construct_set)
    _build = _swig_property(_StgDomain.ElementCellLayout__build_get, _StgDomain.ElementCellLayout__build_set)
    _initialise = _swig_property(_StgDomain.ElementCellLayout__initialise_get, _StgDomain.ElementCellLayout__initialise_set)
    _execute = _swig_property(_StgDomain.ElementCellLayout__execute_get, _StgDomain.ElementCellLayout__execute_set)
    _destroy = _swig_property(_StgDomain.ElementCellLayout__destroy_get, _StgDomain.ElementCellLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.ElementCellLayout_isConstructed_get, _StgDomain.ElementCellLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.ElementCellLayout_isBuilt_get, _StgDomain.ElementCellLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.ElementCellLayout_isInitialised_get, _StgDomain.ElementCellLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.ElementCellLayout_hasExecuted_get, _StgDomain.ElementCellLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.ElementCellLayout_isDestroyed_get, _StgDomain.ElementCellLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.ElementCellLayout_constructType_get, _StgDomain.ElementCellLayout_constructType_set)
    buildType = _swig_property(_StgDomain.ElementCellLayout_buildType_get, _StgDomain.ElementCellLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.ElementCellLayout_initialiseType_get, _StgDomain.ElementCellLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.ElementCellLayout_executeType_get, _StgDomain.ElementCellLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.ElementCellLayout_destroyType_get, _StgDomain.ElementCellLayout_destroyType_set)
    context = _swig_property(_StgDomain.ElementCellLayout_context_get, _StgDomain.ElementCellLayout_context_set)
    _cellLocalCount = _swig_property(_StgDomain.ElementCellLayout__cellLocalCount_get, _StgDomain.ElementCellLayout__cellLocalCount_set)
    _cellShadowCount = _swig_property(_StgDomain.ElementCellLayout__cellShadowCount_get, _StgDomain.ElementCellLayout__cellShadowCount_set)
    _pointCount = _swig_property(_StgDomain.ElementCellLayout__pointCount_get, _StgDomain.ElementCellLayout__pointCount_set)
    _initialisePoints = _swig_property(_StgDomain.ElementCellLayout__initialisePoints_get, _StgDomain.ElementCellLayout__initialisePoints_set)
    _mapElementIdToCellId = _swig_property(_StgDomain.ElementCellLayout__mapElementIdToCellId_get, _StgDomain.ElementCellLayout__mapElementIdToCellId_set)
    _isInCell = _swig_property(_StgDomain.ElementCellLayout__isInCell_get, _StgDomain.ElementCellLayout__isInCell_set)
    _cellOf = _swig_property(_StgDomain.ElementCellLayout__cellOf_get, _StgDomain.ElementCellLayout__cellOf_set)
    _getShadowInfo = _swig_property(_StgDomain.ElementCellLayout__getShadowInfo_get, _StgDomain.ElementCellLayout__getShadowInfo_set)
    mesh = _swig_property(_StgDomain.ElementCellLayout_mesh_get, _StgDomain.ElementCellLayout_mesh_set)
    cellShadowInfo = _swig_property(_StgDomain.ElementCellLayout_cellShadowInfo_get, _StgDomain.ElementCellLayout_cellShadowInfo_set)
    incArray = _swig_property(_StgDomain.ElementCellLayout_incArray_get, _StgDomain.ElementCellLayout_incArray_set)

    def __init__(self):
        _StgDomain.ElementCellLayout_swiginit(self, _StgDomain.new_ElementCellLayout())
    __swig_destroy__ = _StgDomain.delete_ElementCellLayout
ElementCellLayout_swigregister = _StgDomain.ElementCellLayout_swigregister
ElementCellLayout_swigregister(ElementCellLayout)
ElementCellLayout_Type = cvar.ElementCellLayout_Type


def _ElementCellLayout_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._ElementCellLayout_DefaultNew(name)
_ElementCellLayout_DefaultNew = _StgDomain._ElementCellLayout_DefaultNew

def ElementCellLayout_New(name: 'Name', context: 'AbstractContext *', mesh: 'void *') -> "ElementCellLayout *":
    return _StgDomain.ElementCellLayout_New(name, context, mesh)
ElementCellLayout_New = _StgDomain.ElementCellLayout_New

def _ElementCellLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _cellLocalCount: 'CellLayout_CellCountFunction *', _cellShadowCount: 'CellLayout_CellCountFunction *', _pointCount: 'CellLayout_PointCountFunction *', _initialisePoints: 'CellLayout_InitialisePointsFunction *', _mapElementIdToCellId: 'CellLayout_MapElementIdToCellIdFunction *', _isInCell: 'CellLayout_IsInCellFunction *', _cellOf: 'CellLayout_CellOfFunction *', _getShadowInfo: 'CellLayout_GetShadowInfoFunction *') -> "ElementCellLayout *":
    return _StgDomain._ElementCellLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _cellLocalCount, _cellShadowCount, _pointCount, _initialisePoints, _mapElementIdToCellId, _isInCell, _cellOf, _getShadowInfo)
_ElementCellLayout_New = _StgDomain._ElementCellLayout_New

def _ElementCellLayout_Init(arg1: 'ElementCellLayout', mesh: 'void *') -> "void":
    return _StgDomain._ElementCellLayout_Init(arg1, mesh)
_ElementCellLayout_Init = _StgDomain._ElementCellLayout_Init

def _ElementCellLayout_Delete(elementCellLayout: 'void *') -> "void":
    return _StgDomain._ElementCellLayout_Delete(elementCellLayout)
_ElementCellLayout_Delete = _StgDomain._ElementCellLayout_Delete

def _ElementCellLayout_Print(elementCellLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._ElementCellLayout_Print(elementCellLayout, stream)
_ElementCellLayout_Print = _StgDomain._ElementCellLayout_Print

def _ElementCellLayout_Copy(elementCellLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._ElementCellLayout_Copy(elementCellLayout, dest, deep, nameExt, ptrMap)
_ElementCellLayout_Copy = _StgDomain._ElementCellLayout_Copy

def _ElementCellLayout_AssignFromXML(elementCellLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._ElementCellLayout_AssignFromXML(elementCellLayout, cf, data)
_ElementCellLayout_AssignFromXML = _StgDomain._ElementCellLayout_AssignFromXML

def _ElementCellLayout_Build(elementCellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._ElementCellLayout_Build(elementCellLayout, data)
_ElementCellLayout_Build = _StgDomain._ElementCellLayout_Build

def _ElementCellLayout_Initialise(elementCellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._ElementCellLayout_Initialise(elementCellLayout, data)
_ElementCellLayout_Initialise = _StgDomain._ElementCellLayout_Initialise

def _ElementCellLayout_Execute(elementCellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._ElementCellLayout_Execute(elementCellLayout, data)
_ElementCellLayout_Execute = _StgDomain._ElementCellLayout_Execute

def _ElementCellLayout_Destroy(elementCellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._ElementCellLayout_Destroy(elementCellLayout, data)
_ElementCellLayout_Destroy = _StgDomain._ElementCellLayout_Destroy

def _ElementCellLayout_CellLocalCount(elementCellLayout: 'void *') -> "Cell_Index":
    return _StgDomain._ElementCellLayout_CellLocalCount(elementCellLayout)
_ElementCellLayout_CellLocalCount = _StgDomain._ElementCellLayout_CellLocalCount

def _ElementCellLayout_CellShadowCount(elementCellLayout: 'void *') -> "Cell_Index":
    return _StgDomain._ElementCellLayout_CellShadowCount(elementCellLayout)
_ElementCellLayout_CellShadowCount = _StgDomain._ElementCellLayout_CellShadowCount

def _ElementCellLayout_PointCount(elementCellLayout: 'void *', cellIndex: 'Cell_Index') -> "Cell_PointIndex":
    return _StgDomain._ElementCellLayout_PointCount(elementCellLayout, cellIndex)
_ElementCellLayout_PointCount = _StgDomain._ElementCellLayout_PointCount

def _ElementCellLayout_InitialisePoints(elementCellLayout: 'void *', cellIndex: 'Cell_Index', pointCount: 'Cell_PointIndex', points: 'Cell_Points') -> "void":
    return _StgDomain._ElementCellLayout_InitialisePoints(elementCellLayout, cellIndex, pointCount, points)
_ElementCellLayout_InitialisePoints = _StgDomain._ElementCellLayout_InitialisePoints

def _ElementCellLayout_MapElementIdToCellId(cellLayout: 'void *', element_dI: 'unsigned int') -> "Cell_Index":
    return _StgDomain._ElementCellLayout_MapElementIdToCellId(cellLayout, element_dI)
_ElementCellLayout_MapElementIdToCellId = _StgDomain._ElementCellLayout_MapElementIdToCellId

def _ElementCellLayout_IsInCell(elementCellLayout: 'void *', cellIndex: 'Cell_Index', particle: 'void *') -> "Bool":
    return _StgDomain._ElementCellLayout_IsInCell(elementCellLayout, cellIndex, particle)
_ElementCellLayout_IsInCell = _StgDomain._ElementCellLayout_IsInCell

def _ElementCellLayout_CellOf(elementCellLayout: 'void *', particle: 'void *') -> "Cell_Index":
    return _StgDomain._ElementCellLayout_CellOf(elementCellLayout, particle)
_ElementCellLayout_CellOf = _StgDomain._ElementCellLayout_CellOf

def _ElementCellLayout_CellOf_Irregular(elementCellLayout: 'void *', _particle: 'void *') -> "Cell_Index":
    return _StgDomain._ElementCellLayout_CellOf_Irregular(elementCellLayout, _particle)
_ElementCellLayout_CellOf_Irregular = _StgDomain._ElementCellLayout_CellOf_Irregular

def _ElementCellLayout_GetShadowInfo(elementCellLayout: 'void *') -> "ShadowInfo *":
    return _StgDomain._ElementCellLayout_GetShadowInfo(elementCellLayout)
_ElementCellLayout_GetShadowInfo = _StgDomain._ElementCellLayout_GetShadowInfo

def ElementCellLayout_BuildShadowInfo(arg1: 'ElementCellLayout') -> "void":
    return _StgDomain.ElementCellLayout_BuildShadowInfo(arg1)
ElementCellLayout_BuildShadowInfo = _StgDomain.ElementCellLayout_BuildShadowInfo

def ElementCellLayout_DestroyShadowInfo(arg1: 'ElementCellLayout') -> "void":
    return _StgDomain.ElementCellLayout_DestroyShadowInfo(arg1)
ElementCellLayout_DestroyShadowInfo = _StgDomain.ElementCellLayout_DestroyShadowInfo
class PerCellParticleLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.PerCellParticleLayout__sizeOfSelf_get, _StgDomain.PerCellParticleLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.PerCellParticleLayout__deleteSelf_get, _StgDomain.PerCellParticleLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.PerCellParticleLayout_type_get, _StgDomain.PerCellParticleLayout_type_set)
    nRefs = _swig_property(_StgDomain.PerCellParticleLayout_nRefs_get, _StgDomain.PerCellParticleLayout_nRefs_set)
    locked = _swig_property(_StgDomain.PerCellParticleLayout_locked_get, _StgDomain.PerCellParticleLayout_locked_set)
    _delete = _swig_property(_StgDomain.PerCellParticleLayout__delete_get, _StgDomain.PerCellParticleLayout__delete_set)
    _print = _swig_property(_StgDomain.PerCellParticleLayout__print_get, _StgDomain.PerCellParticleLayout__print_set)
    _copy = _swig_property(_StgDomain.PerCellParticleLayout__copy_get, _StgDomain.PerCellParticleLayout__copy_set)
    name = _swig_property(_StgDomain.PerCellParticleLayout_name_get, _StgDomain.PerCellParticleLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.PerCellParticleLayout_nameAllocationType_get, _StgDomain.PerCellParticleLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.PerCellParticleLayout__defaultConstructor_get, _StgDomain.PerCellParticleLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.PerCellParticleLayout__construct_get, _StgDomain.PerCellParticleLayout__construct_set)
    _build = _swig_property(_StgDomain.PerCellParticleLayout__build_get, _StgDomain.PerCellParticleLayout__build_set)
    _initialise = _swig_property(_StgDomain.PerCellParticleLayout__initialise_get, _StgDomain.PerCellParticleLayout__initialise_set)
    _execute = _swig_property(_StgDomain.PerCellParticleLayout__execute_get, _StgDomain.PerCellParticleLayout__execute_set)
    _destroy = _swig_property(_StgDomain.PerCellParticleLayout__destroy_get, _StgDomain.PerCellParticleLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.PerCellParticleLayout_isConstructed_get, _StgDomain.PerCellParticleLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.PerCellParticleLayout_isBuilt_get, _StgDomain.PerCellParticleLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.PerCellParticleLayout_isInitialised_get, _StgDomain.PerCellParticleLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.PerCellParticleLayout_hasExecuted_get, _StgDomain.PerCellParticleLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.PerCellParticleLayout_isDestroyed_get, _StgDomain.PerCellParticleLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.PerCellParticleLayout_constructType_get, _StgDomain.PerCellParticleLayout_constructType_set)
    buildType = _swig_property(_StgDomain.PerCellParticleLayout_buildType_get, _StgDomain.PerCellParticleLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.PerCellParticleLayout_initialiseType_get, _StgDomain.PerCellParticleLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.PerCellParticleLayout_executeType_get, _StgDomain.PerCellParticleLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.PerCellParticleLayout_destroyType_get, _StgDomain.PerCellParticleLayout_destroyType_set)
    context = _swig_property(_StgDomain.PerCellParticleLayout_context_get, _StgDomain.PerCellParticleLayout_context_set)
    _setInitialCounts = _swig_property(_StgDomain.PerCellParticleLayout__setInitialCounts_get, _StgDomain.PerCellParticleLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgDomain.PerCellParticleLayout__initialiseParticles_get, _StgDomain.PerCellParticleLayout__initialiseParticles_set)
    debug = _swig_property(_StgDomain.PerCellParticleLayout_debug_get, _StgDomain.PerCellParticleLayout_debug_set)
    coordSystem = _swig_property(_StgDomain.PerCellParticleLayout_coordSystem_get, _StgDomain.PerCellParticleLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgDomain.PerCellParticleLayout_weightsInitialisedAtStartup_get, _StgDomain.PerCellParticleLayout_weightsInitialisedAtStartup_set)
    _initialCount = _swig_property(_StgDomain.PerCellParticleLayout__initialCount_get, _StgDomain.PerCellParticleLayout__initialCount_set)
    _initialiseParticlesOfCell = _swig_property(_StgDomain.PerCellParticleLayout__initialiseParticlesOfCell_get, _StgDomain.PerCellParticleLayout__initialiseParticlesOfCell_set)

    def __init__(self):
        _StgDomain.PerCellParticleLayout_swiginit(self, _StgDomain.new_PerCellParticleLayout())
    __swig_destroy__ = _StgDomain.delete_PerCellParticleLayout
PerCellParticleLayout_swigregister = _StgDomain.PerCellParticleLayout_swigregister
PerCellParticleLayout_swigregister(PerCellParticleLayout)
PerCellParticleLayout_Type = cvar.PerCellParticleLayout_Type


def _PerCellParticleLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', _initialCount: 'PerCellParticleLayout_InitialCountFunction *', _initialiseParticlesOfCell: 'PerCellParticleLayout_InitialiseParticlesOfCellFunction *') -> "PerCellParticleLayout *":
    return _StgDomain._PerCellParticleLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup, _initialCount, _initialiseParticlesOfCell)
_PerCellParticleLayout_New = _StgDomain._PerCellParticleLayout_New

def _PerCellParticleLayout_Init(particleLayout: 'void *') -> "void":
    return _StgDomain._PerCellParticleLayout_Init(particleLayout)
_PerCellParticleLayout_Init = _StgDomain._PerCellParticleLayout_Init

def _PerCellParticleLayout_Delete(particleLayout: 'void *') -> "void":
    return _StgDomain._PerCellParticleLayout_Delete(particleLayout)
_PerCellParticleLayout_Delete = _StgDomain._PerCellParticleLayout_Delete

def _PerCellParticleLayout_Print(particleLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._PerCellParticleLayout_Print(particleLayout, stream)
_PerCellParticleLayout_Print = _StgDomain._PerCellParticleLayout_Print

def _PerCellParticleLayout_Copy(particleLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._PerCellParticleLayout_Copy(particleLayout, dest, deep, nameExt, ptrMap)
_PerCellParticleLayout_Copy = _StgDomain._PerCellParticleLayout_Copy

def _PerCellParticleLayout_Destroy(particleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._PerCellParticleLayout_Destroy(particleLayout, data)
_PerCellParticleLayout_Destroy = _StgDomain._PerCellParticleLayout_Destroy

def _PerCellParticleLayout_AssignFromXML(particleLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._PerCellParticleLayout_AssignFromXML(particleLayout, cf, data)
_PerCellParticleLayout_AssignFromXML = _StgDomain._PerCellParticleLayout_AssignFromXML

def _PerCellParticleLayout_SetInitialCounts(particleLayout: 'void *', _swarm: 'void *') -> "void":
    return _StgDomain._PerCellParticleLayout_SetInitialCounts(particleLayout, _swarm)
_PerCellParticleLayout_SetInitialCounts = _StgDomain._PerCellParticleLayout_SetInitialCounts

def _PerCellParticleLayout_InitialiseParticles(particleLayout: 'void *', _swarm: 'void *') -> "void":
    return _StgDomain._PerCellParticleLayout_InitialiseParticles(particleLayout, _swarm)
_PerCellParticleLayout_InitialiseParticles = _StgDomain._PerCellParticleLayout_InitialiseParticles

def PerCellParticleLayout_InitialiseParticlesOfCell(particleLayout: 'void *', swarm: 'void *', cell_I: 'Cell_Index') -> "void":
    return _StgDomain.PerCellParticleLayout_InitialiseParticlesOfCell(particleLayout, swarm, cell_I)
PerCellParticleLayout_InitialiseParticlesOfCell = _StgDomain.PerCellParticleLayout_InitialiseParticlesOfCell

def PerCellParticleLayout_InitialCount(particleLayout: 'void *', _swarm: 'void *', cell_I: 'Cell_Index') -> "Particle_InCellIndex":
    return _StgDomain.PerCellParticleLayout_InitialCount(particleLayout, _swarm, cell_I)
PerCellParticleLayout_InitialCount = _StgDomain.PerCellParticleLayout_InitialCount
class ParticleCommHandler(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.ParticleCommHandler__sizeOfSelf_get, _StgDomain.ParticleCommHandler__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.ParticleCommHandler__deleteSelf_get, _StgDomain.ParticleCommHandler__deleteSelf_set)
    type = _swig_property(_StgDomain.ParticleCommHandler_type_get, _StgDomain.ParticleCommHandler_type_set)
    nRefs = _swig_property(_StgDomain.ParticleCommHandler_nRefs_get, _StgDomain.ParticleCommHandler_nRefs_set)
    locked = _swig_property(_StgDomain.ParticleCommHandler_locked_get, _StgDomain.ParticleCommHandler_locked_set)
    _delete = _swig_property(_StgDomain.ParticleCommHandler__delete_get, _StgDomain.ParticleCommHandler__delete_set)
    _print = _swig_property(_StgDomain.ParticleCommHandler__print_get, _StgDomain.ParticleCommHandler__print_set)
    _copy = _swig_property(_StgDomain.ParticleCommHandler__copy_get, _StgDomain.ParticleCommHandler__copy_set)
    name = _swig_property(_StgDomain.ParticleCommHandler_name_get, _StgDomain.ParticleCommHandler_name_set)
    nameAllocationType = _swig_property(_StgDomain.ParticleCommHandler_nameAllocationType_get, _StgDomain.ParticleCommHandler_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.ParticleCommHandler__defaultConstructor_get, _StgDomain.ParticleCommHandler__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.ParticleCommHandler__construct_get, _StgDomain.ParticleCommHandler__construct_set)
    _build = _swig_property(_StgDomain.ParticleCommHandler__build_get, _StgDomain.ParticleCommHandler__build_set)
    _initialise = _swig_property(_StgDomain.ParticleCommHandler__initialise_get, _StgDomain.ParticleCommHandler__initialise_set)
    _execute = _swig_property(_StgDomain.ParticleCommHandler__execute_get, _StgDomain.ParticleCommHandler__execute_set)
    _destroy = _swig_property(_StgDomain.ParticleCommHandler__destroy_get, _StgDomain.ParticleCommHandler__destroy_set)
    isConstructed = _swig_property(_StgDomain.ParticleCommHandler_isConstructed_get, _StgDomain.ParticleCommHandler_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.ParticleCommHandler_isBuilt_get, _StgDomain.ParticleCommHandler_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.ParticleCommHandler_isInitialised_get, _StgDomain.ParticleCommHandler_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.ParticleCommHandler_hasExecuted_get, _StgDomain.ParticleCommHandler_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.ParticleCommHandler_isDestroyed_get, _StgDomain.ParticleCommHandler_isDestroyed_set)
    constructType = _swig_property(_StgDomain.ParticleCommHandler_constructType_get, _StgDomain.ParticleCommHandler_constructType_set)
    buildType = _swig_property(_StgDomain.ParticleCommHandler_buildType_get, _StgDomain.ParticleCommHandler_buildType_set)
    initialiseType = _swig_property(_StgDomain.ParticleCommHandler_initialiseType_get, _StgDomain.ParticleCommHandler_initialiseType_set)
    executeType = _swig_property(_StgDomain.ParticleCommHandler_executeType_get, _StgDomain.ParticleCommHandler_executeType_set)
    destroyType = _swig_property(_StgDomain.ParticleCommHandler_destroyType_get, _StgDomain.ParticleCommHandler_destroyType_set)
    context = _swig_property(_StgDomain.ParticleCommHandler_context_get, _StgDomain.ParticleCommHandler_context_set)
    allocateOutgoingCountArrays = _swig_property(_StgDomain.ParticleCommHandler_allocateOutgoingCountArrays_get, _StgDomain.ParticleCommHandler_allocateOutgoingCountArrays_set)
    allocateOutgoingParticleArrays = _swig_property(_StgDomain.ParticleCommHandler_allocateOutgoingParticleArrays_get, _StgDomain.ParticleCommHandler_allocateOutgoingParticleArrays_set)
    freeOutgoingArrays = _swig_property(_StgDomain.ParticleCommHandler_freeOutgoingArrays_get, _StgDomain.ParticleCommHandler_freeOutgoingArrays_set)
    allocateIncomingCountArrays = _swig_property(_StgDomain.ParticleCommHandler_allocateIncomingCountArrays_get, _StgDomain.ParticleCommHandler_allocateIncomingCountArrays_set)
    allocateIncomingParticleArrays = _swig_property(_StgDomain.ParticleCommHandler_allocateIncomingParticleArrays_get, _StgDomain.ParticleCommHandler_allocateIncomingParticleArrays_set)
    freeIncomingArrays = _swig_property(_StgDomain.ParticleCommHandler_freeIncomingArrays_get, _StgDomain.ParticleCommHandler_freeIncomingArrays_set)
    beginReceiveOfIncomingParticleCounts = _swig_property(_StgDomain.ParticleCommHandler_beginReceiveOfIncomingParticleCounts_get, _StgDomain.ParticleCommHandler_beginReceiveOfIncomingParticleCounts_set)
    finishReceiveOfIncomingParticleCounts = _swig_property(_StgDomain.ParticleCommHandler_finishReceiveOfIncomingParticleCounts_get, _StgDomain.ParticleCommHandler_finishReceiveOfIncomingParticleCounts_set)
    beginReceiveOfIncomingParticles = _swig_property(_StgDomain.ParticleCommHandler_beginReceiveOfIncomingParticles_get, _StgDomain.ParticleCommHandler_beginReceiveOfIncomingParticles_set)
    finishReceiveOfIncomingParticlesAndUpdateIndices = _swig_property(_StgDomain.ParticleCommHandler_finishReceiveOfIncomingParticlesAndUpdateIndices_get, _StgDomain.ParticleCommHandler_finishReceiveOfIncomingParticlesAndUpdateIndices_set)
    sendOutgoingParticleCounts = _swig_property(_StgDomain.ParticleCommHandler_sendOutgoingParticleCounts_get, _StgDomain.ParticleCommHandler_sendOutgoingParticleCounts_set)
    beginSendingParticles = _swig_property(_StgDomain.ParticleCommHandler_beginSendingParticles_get, _StgDomain.ParticleCommHandler_beginSendingParticles_set)
    confirmOutgoingSendsCompleted = _swig_property(_StgDomain.ParticleCommHandler_confirmOutgoingSendsCompleted_get, _StgDomain.ParticleCommHandler_confirmOutgoingSendsCompleted_set)
    _commFunction = _swig_property(_StgDomain.ParticleCommHandler__commFunction_get, _StgDomain.ParticleCommHandler__commFunction_set)
    debug = _swig_property(_StgDomain.ParticleCommHandler_debug_get, _StgDomain.ParticleCommHandler_debug_set)
    swarm = _swig_property(_StgDomain.ParticleCommHandler_swarm_get, _StgDomain.ParticleCommHandler_swarm_set)
    shadowParticlesLeavingMeIndices = _swig_property(_StgDomain.ParticleCommHandler_shadowParticlesLeavingMeIndices_get, _StgDomain.ParticleCommHandler_shadowParticlesLeavingMeIndices_set)
    shadowParticlesLeavingMeTotalCount = _swig_property(_StgDomain.ParticleCommHandler_shadowParticlesLeavingMeTotalCount_get, _StgDomain.ParticleCommHandler_shadowParticlesLeavingMeTotalCount_set)
    shadowParticlesLeavingMeUnfilledCount = _swig_property(_StgDomain.ParticleCommHandler_shadowParticlesLeavingMeUnfilledCount_get, _StgDomain.ParticleCommHandler_shadowParticlesLeavingMeUnfilledCount_set)
    currShadowParticleLeavingMeIndex = _swig_property(_StgDomain.ParticleCommHandler_currShadowParticleLeavingMeIndex_get, _StgDomain.ParticleCommHandler_currShadowParticleLeavingMeIndex_set)
    currParticleLeavingMyDomainIndex = _swig_property(_StgDomain.ParticleCommHandler_currParticleLeavingMyDomainIndex_get, _StgDomain.ParticleCommHandler_currParticleLeavingMyDomainIndex_set)
    particlesOutsideDomainIndices = _swig_property(_StgDomain.ParticleCommHandler_particlesOutsideDomainIndices_get, _StgDomain.ParticleCommHandler_particlesOutsideDomainIndices_set)
    particlesOutsideDomainTotalCount = _swig_property(_StgDomain.ParticleCommHandler_particlesOutsideDomainTotalCount_get, _StgDomain.ParticleCommHandler_particlesOutsideDomainTotalCount_set)
    particlesOutsideDomainUnfilledCount = _swig_property(_StgDomain.ParticleCommHandler_particlesOutsideDomainUnfilledCount_get, _StgDomain.ParticleCommHandler_particlesOutsideDomainUnfilledCount_set)
    shadowParticlesLeavingMeCountsPerCell = _swig_property(_StgDomain.ParticleCommHandler_shadowParticlesLeavingMeCountsPerCell_get, _StgDomain.ParticleCommHandler_shadowParticlesLeavingMeCountsPerCell_set)
    shadowParticlesLeavingMeTotalCounts = _swig_property(_StgDomain.ParticleCommHandler_shadowParticlesLeavingMeTotalCounts_get, _StgDomain.ParticleCommHandler_shadowParticlesLeavingMeTotalCounts_set)
    shadowParticlesLeavingMe = _swig_property(_StgDomain.ParticleCommHandler_shadowParticlesLeavingMe_get, _StgDomain.ParticleCommHandler_shadowParticlesLeavingMe_set)
    shadowParticlesLeavingMeHandles = _swig_property(_StgDomain.ParticleCommHandler_shadowParticlesLeavingMeHandles_get, _StgDomain.ParticleCommHandler_shadowParticlesLeavingMeHandles_set)
    particlesArrivingFromNbrShadowCellCounts = _swig_property(_StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCellCounts_get, _StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCellCounts_set)
    particlesArrivingFromNbrShadowCellCountsHandles = _swig_property(_StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCellCountsHandles_get, _StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCellCountsHandles_set)
    particlesArrivingFromNbrShadowCellsTotalCounts = _swig_property(_StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCellsTotalCounts_get, _StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCellsTotalCounts_set)
    particlesArrivingFromNbrShadowCells = _swig_property(_StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCells_get, _StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCells_set)
    particlesArrivingFromNbrShadowCellsHandles = _swig_property(_StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCellsHandles_get, _StgDomain.ParticleCommHandler_particlesArrivingFromNbrShadowCellsHandles_set)

    def __init__(self):
        _StgDomain.ParticleCommHandler_swiginit(self, _StgDomain.new_ParticleCommHandler())
    __swig_destroy__ = _StgDomain.delete_ParticleCommHandler
ParticleCommHandler_swigregister = _StgDomain.ParticleCommHandler_swigregister
ParticleCommHandler_swigregister(ParticleCommHandler)
ParticleCommHandler_Type = cvar.ParticleCommHandler_Type


def _ParticleCommHandler_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', initFlag: 'Bool', _allocateOutgoingCountArrays: 'ParticleCommHandler_AllocateOutgoingCountArrays *', _allocateOutgoingParticleArrays: 'ParticleCommHandler_AllocateOutgoingParticleArrays *', _freeOutgoingArrays: 'ParticleCommHandler_FreeOutgoingArrays *', _allocateIncomingCountArrays: 'ParticleCommHandler_AllocateIncomingCountArrays *', _allocateIncomingParticleArrays: 'ParticleCommHandler_AllocateIncomingParticleArrays *', _freeIncomingArrays: 'ParticleCommHandler_FreeIncomingArrays *', _beginReceiveOfIncomingParticleCounts: 'ParticleCommHandler_BeginReceiveOfIncomingParticleCounts *', _finishReceiveOfIncomingParticleCounts: 'ParticleCommHandler_FinishReceiveOfIncomingParticleCounts *', _beginReceiveOfIncomingParticles: 'ParticleCommHandler_BeginReceiveOfIncomingParticles *', _finishReceiveOfIncomingParticlesAndUpdateIndices: 'ParticleCommHandler_FinishReceiveOfIncomingParticlesAndUpdateIndices *', _sendOutgoingParticleCounts: 'ParticleCommHandler_SendOutgoingParticleCounts *', _beginSendingParticles: 'ParticleCommHandler_BeginSendingParticles *', _confirmOutgoingSendsCompleted: 'ParticleCommHandler_ConfirmOutgoingSendsCompleted *', _commFunction: 'ParticleCommHandler_CommFunction *') -> "ParticleCommHandler *":
    return _StgDomain._ParticleCommHandler_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, initFlag, _allocateOutgoingCountArrays, _allocateOutgoingParticleArrays, _freeOutgoingArrays, _allocateIncomingCountArrays, _allocateIncomingParticleArrays, _freeIncomingArrays, _beginReceiveOfIncomingParticleCounts, _finishReceiveOfIncomingParticleCounts, _beginReceiveOfIncomingParticles, _finishReceiveOfIncomingParticlesAndUpdateIndices, _sendOutgoingParticleCounts, _beginSendingParticles, _confirmOutgoingSendsCompleted, _commFunction)
_ParticleCommHandler_New = _StgDomain._ParticleCommHandler_New

def _ParticleCommHandler_Init(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_Init(arg1)
_ParticleCommHandler_Init = _StgDomain._ParticleCommHandler_Init

def _ParticleCommHandler_Print(pCommsHandler: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._ParticleCommHandler_Print(pCommsHandler, stream)
_ParticleCommHandler_Print = _StgDomain._ParticleCommHandler_Print

def _ParticleCommHandler_AssignFromXML(pCommsHandler: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._ParticleCommHandler_AssignFromXML(pCommsHandler, cf, data)
_ParticleCommHandler_AssignFromXML = _StgDomain._ParticleCommHandler_AssignFromXML

def _ParticleCommHandler_Build(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleCommHandler_Build(pCommsHandler, data)
_ParticleCommHandler_Build = _StgDomain._ParticleCommHandler_Build

def _ParticleCommHandler_Initialise(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleCommHandler_Initialise(pCommsHandler, data)
_ParticleCommHandler_Initialise = _StgDomain._ParticleCommHandler_Initialise

def _ParticleCommHandler_Execute(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleCommHandler_Execute(pCommsHandler, data)
_ParticleCommHandler_Execute = _StgDomain._ParticleCommHandler_Execute

def _ParticleCommHandler_Destroy(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleCommHandler_Destroy(pCommsHandler, data)
_ParticleCommHandler_Destroy = _StgDomain._ParticleCommHandler_Destroy

def _ParticleCommHandler_Copy(particleCommHandler: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._ParticleCommHandler_Copy(particleCommHandler, dest, deep, nameExt, ptrMap)
_ParticleCommHandler_Copy = _StgDomain._ParticleCommHandler_Copy

def _ParticleCommHandler_Delete(pCommsHandler: 'void *') -> "void":
    return _StgDomain._ParticleCommHandler_Delete(pCommsHandler)
_ParticleCommHandler_Delete = _StgDomain._ParticleCommHandler_Delete

def _ParticleCommHandler_AllocateOutgoingCountArrays(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_AllocateOutgoingCountArrays(arg1)
_ParticleCommHandler_AllocateOutgoingCountArrays = _StgDomain._ParticleCommHandler_AllocateOutgoingCountArrays

def _ParticleCommHandler_AllocateOutgoingParticlesArrays(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_AllocateOutgoingParticlesArrays(arg1)
_ParticleCommHandler_AllocateOutgoingParticlesArrays = _StgDomain._ParticleCommHandler_AllocateOutgoingParticlesArrays

def _ParticleCommHandler_FreeOutgoingArrays(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_FreeOutgoingArrays(arg1)
_ParticleCommHandler_FreeOutgoingArrays = _StgDomain._ParticleCommHandler_FreeOutgoingArrays

def _ParticleCommHandler_AllocateIncomingCountArrays(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_AllocateIncomingCountArrays(arg1)
_ParticleCommHandler_AllocateIncomingCountArrays = _StgDomain._ParticleCommHandler_AllocateIncomingCountArrays

def _ParticleCommHandler_AllocateIncomingParticlesArrays(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_AllocateIncomingParticlesArrays(arg1)
_ParticleCommHandler_AllocateIncomingParticlesArrays = _StgDomain._ParticleCommHandler_AllocateIncomingParticlesArrays

def _ParticleCommHandler_FreeIncomingArrays(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_FreeIncomingArrays(arg1)
_ParticleCommHandler_FreeIncomingArrays = _StgDomain._ParticleCommHandler_FreeIncomingArrays

def _ParticleCommHandler_BeginReceiveOfIncomingParticleCounts(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_BeginReceiveOfIncomingParticleCounts(arg1)
_ParticleCommHandler_BeginReceiveOfIncomingParticleCounts = _StgDomain._ParticleCommHandler_BeginReceiveOfIncomingParticleCounts

def _ParticleCommHandler_FinishReceiveOfIncomingParticleCounts(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_FinishReceiveOfIncomingParticleCounts(arg1)
_ParticleCommHandler_FinishReceiveOfIncomingParticleCounts = _StgDomain._ParticleCommHandler_FinishReceiveOfIncomingParticleCounts

def _ParticleCommHandler_BeginReceiveOfIncomingParticles(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_BeginReceiveOfIncomingParticles(arg1)
_ParticleCommHandler_BeginReceiveOfIncomingParticles = _StgDomain._ParticleCommHandler_BeginReceiveOfIncomingParticles

def _ParticleCommHandler_SendParticleTotalsInShadowCellsToNbrs(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_SendParticleTotalsInShadowCellsToNbrs(arg1)
_ParticleCommHandler_SendParticleTotalsInShadowCellsToNbrs = _StgDomain._ParticleCommHandler_SendParticleTotalsInShadowCellsToNbrs

def _ParticleCommHandler_BeginSendingParticlesInShadowCellsToNbrs(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_BeginSendingParticlesInShadowCellsToNbrs(arg1)
_ParticleCommHandler_BeginSendingParticlesInShadowCellsToNbrs = _StgDomain._ParticleCommHandler_BeginSendingParticlesInShadowCellsToNbrs

def _ParticleCommHandler_ConfirmOutgoingSendsCompleted(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_ConfirmOutgoingSendsCompleted(arg1)
_ParticleCommHandler_ConfirmOutgoingSendsCompleted = _StgDomain._ParticleCommHandler_ConfirmOutgoingSendsCompleted

def _ParticleCommHandler_ZeroShadowCommStrategyCounters(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleCommHandler_ZeroShadowCommStrategyCounters(arg1)
_ParticleCommHandler_ZeroShadowCommStrategyCounters = _StgDomain._ParticleCommHandler_ZeroShadowCommStrategyCounters

def _ParticleCommHandler_PrintCommunicationVolumeStats(arg1: 'ParticleCommHandler', startTime: 'double', info: 'Stream *') -> "void":
    return _StgDomain._ParticleCommHandler_PrintCommunicationVolumeStats(arg1, startTime, info)
_ParticleCommHandler_PrintCommunicationVolumeStats = _StgDomain._ParticleCommHandler_PrintCommunicationVolumeStats
class ParticleMovementHandler(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.ParticleMovementHandler__sizeOfSelf_get, _StgDomain.ParticleMovementHandler__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.ParticleMovementHandler__deleteSelf_get, _StgDomain.ParticleMovementHandler__deleteSelf_set)
    type = _swig_property(_StgDomain.ParticleMovementHandler_type_get, _StgDomain.ParticleMovementHandler_type_set)
    nRefs = _swig_property(_StgDomain.ParticleMovementHandler_nRefs_get, _StgDomain.ParticleMovementHandler_nRefs_set)
    locked = _swig_property(_StgDomain.ParticleMovementHandler_locked_get, _StgDomain.ParticleMovementHandler_locked_set)
    _delete = _swig_property(_StgDomain.ParticleMovementHandler__delete_get, _StgDomain.ParticleMovementHandler__delete_set)
    _print = _swig_property(_StgDomain.ParticleMovementHandler__print_get, _StgDomain.ParticleMovementHandler__print_set)
    _copy = _swig_property(_StgDomain.ParticleMovementHandler__copy_get, _StgDomain.ParticleMovementHandler__copy_set)
    name = _swig_property(_StgDomain.ParticleMovementHandler_name_get, _StgDomain.ParticleMovementHandler_name_set)
    nameAllocationType = _swig_property(_StgDomain.ParticleMovementHandler_nameAllocationType_get, _StgDomain.ParticleMovementHandler_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.ParticleMovementHandler__defaultConstructor_get, _StgDomain.ParticleMovementHandler__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.ParticleMovementHandler__construct_get, _StgDomain.ParticleMovementHandler__construct_set)
    _build = _swig_property(_StgDomain.ParticleMovementHandler__build_get, _StgDomain.ParticleMovementHandler__build_set)
    _initialise = _swig_property(_StgDomain.ParticleMovementHandler__initialise_get, _StgDomain.ParticleMovementHandler__initialise_set)
    _execute = _swig_property(_StgDomain.ParticleMovementHandler__execute_get, _StgDomain.ParticleMovementHandler__execute_set)
    _destroy = _swig_property(_StgDomain.ParticleMovementHandler__destroy_get, _StgDomain.ParticleMovementHandler__destroy_set)
    isConstructed = _swig_property(_StgDomain.ParticleMovementHandler_isConstructed_get, _StgDomain.ParticleMovementHandler_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.ParticleMovementHandler_isBuilt_get, _StgDomain.ParticleMovementHandler_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.ParticleMovementHandler_isInitialised_get, _StgDomain.ParticleMovementHandler_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.ParticleMovementHandler_hasExecuted_get, _StgDomain.ParticleMovementHandler_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.ParticleMovementHandler_isDestroyed_get, _StgDomain.ParticleMovementHandler_isDestroyed_set)
    constructType = _swig_property(_StgDomain.ParticleMovementHandler_constructType_get, _StgDomain.ParticleMovementHandler_constructType_set)
    buildType = _swig_property(_StgDomain.ParticleMovementHandler_buildType_get, _StgDomain.ParticleMovementHandler_buildType_set)
    initialiseType = _swig_property(_StgDomain.ParticleMovementHandler_initialiseType_get, _StgDomain.ParticleMovementHandler_initialiseType_set)
    executeType = _swig_property(_StgDomain.ParticleMovementHandler_executeType_get, _StgDomain.ParticleMovementHandler_executeType_set)
    destroyType = _swig_property(_StgDomain.ParticleMovementHandler_destroyType_get, _StgDomain.ParticleMovementHandler_destroyType_set)
    context = _swig_property(_StgDomain.ParticleMovementHandler_context_get, _StgDomain.ParticleMovementHandler_context_set)
    allocateOutgoingCountArrays = _swig_property(_StgDomain.ParticleMovementHandler_allocateOutgoingCountArrays_get, _StgDomain.ParticleMovementHandler_allocateOutgoingCountArrays_set)
    allocateOutgoingParticleArrays = _swig_property(_StgDomain.ParticleMovementHandler_allocateOutgoingParticleArrays_get, _StgDomain.ParticleMovementHandler_allocateOutgoingParticleArrays_set)
    freeOutgoingArrays = _swig_property(_StgDomain.ParticleMovementHandler_freeOutgoingArrays_get, _StgDomain.ParticleMovementHandler_freeOutgoingArrays_set)
    allocateIncomingCountArrays = _swig_property(_StgDomain.ParticleMovementHandler_allocateIncomingCountArrays_get, _StgDomain.ParticleMovementHandler_allocateIncomingCountArrays_set)
    allocateIncomingParticleArrays = _swig_property(_StgDomain.ParticleMovementHandler_allocateIncomingParticleArrays_get, _StgDomain.ParticleMovementHandler_allocateIncomingParticleArrays_set)
    freeIncomingArrays = _swig_property(_StgDomain.ParticleMovementHandler_freeIncomingArrays_get, _StgDomain.ParticleMovementHandler_freeIncomingArrays_set)
    beginReceiveOfIncomingParticleCounts = _swig_property(_StgDomain.ParticleMovementHandler_beginReceiveOfIncomingParticleCounts_get, _StgDomain.ParticleMovementHandler_beginReceiveOfIncomingParticleCounts_set)
    finishReceiveOfIncomingParticleCounts = _swig_property(_StgDomain.ParticleMovementHandler_finishReceiveOfIncomingParticleCounts_get, _StgDomain.ParticleMovementHandler_finishReceiveOfIncomingParticleCounts_set)
    beginReceiveOfIncomingParticles = _swig_property(_StgDomain.ParticleMovementHandler_beginReceiveOfIncomingParticles_get, _StgDomain.ParticleMovementHandler_beginReceiveOfIncomingParticles_set)
    finishReceiveOfIncomingParticlesAndUpdateIndices = _swig_property(_StgDomain.ParticleMovementHandler_finishReceiveOfIncomingParticlesAndUpdateIndices_get, _StgDomain.ParticleMovementHandler_finishReceiveOfIncomingParticlesAndUpdateIndices_set)
    sendOutgoingParticleCounts = _swig_property(_StgDomain.ParticleMovementHandler_sendOutgoingParticleCounts_get, _StgDomain.ParticleMovementHandler_sendOutgoingParticleCounts_set)
    beginSendingParticles = _swig_property(_StgDomain.ParticleMovementHandler_beginSendingParticles_get, _StgDomain.ParticleMovementHandler_beginSendingParticles_set)
    confirmOutgoingSendsCompleted = _swig_property(_StgDomain.ParticleMovementHandler_confirmOutgoingSendsCompleted_get, _StgDomain.ParticleMovementHandler_confirmOutgoingSendsCompleted_set)
    _commFunction = _swig_property(_StgDomain.ParticleMovementHandler__commFunction_get, _StgDomain.ParticleMovementHandler__commFunction_set)
    debug = _swig_property(_StgDomain.ParticleMovementHandler_debug_get, _StgDomain.ParticleMovementHandler_debug_set)
    swarm = _swig_property(_StgDomain.ParticleMovementHandler_swarm_get, _StgDomain.ParticleMovementHandler_swarm_set)
    shadowParticlesLeavingMeIndices = _swig_property(_StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeIndices_get, _StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeIndices_set)
    shadowParticlesLeavingMeTotalCount = _swig_property(_StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeTotalCount_get, _StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeTotalCount_set)
    shadowParticlesLeavingMeUnfilledCount = _swig_property(_StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeUnfilledCount_get, _StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeUnfilledCount_set)
    currShadowParticleLeavingMeIndex = _swig_property(_StgDomain.ParticleMovementHandler_currShadowParticleLeavingMeIndex_get, _StgDomain.ParticleMovementHandler_currShadowParticleLeavingMeIndex_set)
    currParticleLeavingMyDomainIndex = _swig_property(_StgDomain.ParticleMovementHandler_currParticleLeavingMyDomainIndex_get, _StgDomain.ParticleMovementHandler_currParticleLeavingMyDomainIndex_set)
    particlesOutsideDomainIndices = _swig_property(_StgDomain.ParticleMovementHandler_particlesOutsideDomainIndices_get, _StgDomain.ParticleMovementHandler_particlesOutsideDomainIndices_set)
    particlesOutsideDomainTotalCount = _swig_property(_StgDomain.ParticleMovementHandler_particlesOutsideDomainTotalCount_get, _StgDomain.ParticleMovementHandler_particlesOutsideDomainTotalCount_set)
    particlesOutsideDomainUnfilledCount = _swig_property(_StgDomain.ParticleMovementHandler_particlesOutsideDomainUnfilledCount_get, _StgDomain.ParticleMovementHandler_particlesOutsideDomainUnfilledCount_set)
    shadowParticlesLeavingMeCountsPerCell = _swig_property(_StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeCountsPerCell_get, _StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeCountsPerCell_set)
    shadowParticlesLeavingMeTotalCounts = _swig_property(_StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeTotalCounts_get, _StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeTotalCounts_set)
    shadowParticlesLeavingMe = _swig_property(_StgDomain.ParticleMovementHandler_shadowParticlesLeavingMe_get, _StgDomain.ParticleMovementHandler_shadowParticlesLeavingMe_set)
    shadowParticlesLeavingMeHandles = _swig_property(_StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeHandles_get, _StgDomain.ParticleMovementHandler_shadowParticlesLeavingMeHandles_set)
    particlesArrivingFromNbrShadowCellCounts = _swig_property(_StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCellCounts_get, _StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCellCounts_set)
    particlesArrivingFromNbrShadowCellCountsHandles = _swig_property(_StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCellCountsHandles_get, _StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCellCountsHandles_set)
    particlesArrivingFromNbrShadowCellsTotalCounts = _swig_property(_StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCellsTotalCounts_get, _StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCellsTotalCounts_set)
    particlesArrivingFromNbrShadowCells = _swig_property(_StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCells_get, _StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCells_set)
    particlesArrivingFromNbrShadowCellsHandles = _swig_property(_StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCellsHandles_get, _StgDomain.ParticleMovementHandler_particlesArrivingFromNbrShadowCellsHandles_set)
    globalParticlesArrivingMyDomainCount = _swig_property(_StgDomain.ParticleMovementHandler_globalParticlesArrivingMyDomainCount_get, _StgDomain.ParticleMovementHandler_globalParticlesArrivingMyDomainCount_set)
    globalParticlesOutsideDomainTotal = _swig_property(_StgDomain.ParticleMovementHandler_globalParticlesOutsideDomainTotal_get, _StgDomain.ParticleMovementHandler_globalParticlesOutsideDomainTotal_set)
    useGlobalFallbackCommStrategy = _swig_property(_StgDomain.ParticleMovementHandler_useGlobalFallbackCommStrategy_get, _StgDomain.ParticleMovementHandler_useGlobalFallbackCommStrategy_set)
    defensive = _swig_property(_StgDomain.ParticleMovementHandler_defensive_get, _StgDomain.ParticleMovementHandler_defensive_set)

    def __init__(self):
        _StgDomain.ParticleMovementHandler_swiginit(self, _StgDomain.new_ParticleMovementHandler())
    __swig_destroy__ = _StgDomain.delete_ParticleMovementHandler
ParticleMovementHandler_swigregister = _StgDomain.ParticleMovementHandler_swigregister
ParticleMovementHandler_swigregister(ParticleMovementHandler)
ParticleMovementHandler_Type = cvar.ParticleMovementHandler_Type


def ParticleMovementHandler_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain.ParticleMovementHandler_DefaultNew(name)
ParticleMovementHandler_DefaultNew = _StgDomain.ParticleMovementHandler_DefaultNew

def ParticleMovementHandler_New(name: 'Name', useGlobalFallbackCommStrategy: 'Bool') -> "ParticleMovementHandler *":
    return _StgDomain.ParticleMovementHandler_New(name, useGlobalFallbackCommStrategy)
ParticleMovementHandler_New = _StgDomain.ParticleMovementHandler_New

def _ParticleMovementHandler_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', initFlag: 'Bool', _allocateOutgoingCountArrays: 'ParticleCommHandler_AllocateOutgoingCountArrays *', _allocateOutgoingParticleArrays: 'ParticleCommHandler_AllocateOutgoingParticleArrays *', _freeOutgoingArrays: 'ParticleCommHandler_FreeOutgoingArrays *', _allocateIncomingCountArrays: 'ParticleCommHandler_AllocateIncomingCountArrays *', _allocateIncomingParticleArrays: 'ParticleCommHandler_AllocateIncomingParticleArrays *', _freeIncomingArrays: 'ParticleCommHandler_FreeIncomingArrays *', _beginReceiveOfIncomingParticleCounts: 'ParticleCommHandler_BeginReceiveOfIncomingParticleCounts *', _finishReceiveOfIncomingParticleCounts: 'ParticleCommHandler_FinishReceiveOfIncomingParticleCounts *', _beginReceiveOfIncomingParticles: 'ParticleCommHandler_BeginReceiveOfIncomingParticles *', _finishReceiveOfIncomingParticlesAndUpdateIndices: 'ParticleCommHandler_FinishReceiveOfIncomingParticlesAndUpdateIndices *', _sendOutgoingParticleCounts: 'ParticleCommHandler_SendOutgoingParticleCounts *', _beginSendingParticles: 'ParticleCommHandler_BeginSendingParticles *', _confirmOutgoingSendsCompleted: 'ParticleCommHandler_ConfirmOutgoingSendsCompleted *', _commFunction: 'ParticleCommHandler_CommFunction *', useGlobalFallbackCommStrategy: 'Bool') -> "ParticleMovementHandler *":
    return _StgDomain._ParticleMovementHandler_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, initFlag, _allocateOutgoingCountArrays, _allocateOutgoingParticleArrays, _freeOutgoingArrays, _allocateIncomingCountArrays, _allocateIncomingParticleArrays, _freeIncomingArrays, _beginReceiveOfIncomingParticleCounts, _finishReceiveOfIncomingParticleCounts, _beginReceiveOfIncomingParticles, _finishReceiveOfIncomingParticlesAndUpdateIndices, _sendOutgoingParticleCounts, _beginSendingParticles, _confirmOutgoingSendsCompleted, _commFunction, useGlobalFallbackCommStrategy)
_ParticleMovementHandler_New = _StgDomain._ParticleMovementHandler_New

def _ParticleMovementHandler_Init(arg1: 'ParticleMovementHandler', useGlobalFallbackCommStrategy: 'Bool') -> "void":
    return _StgDomain._ParticleMovementHandler_Init(arg1, useGlobalFallbackCommStrategy)
_ParticleMovementHandler_Init = _StgDomain._ParticleMovementHandler_Init

def _ParticleMovementHandler_Print(pCommsHandler: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._ParticleMovementHandler_Print(pCommsHandler, stream)
_ParticleMovementHandler_Print = _StgDomain._ParticleMovementHandler_Print

def _ParticleMovementHandler_AssignFromXML(pCommsHandler: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._ParticleMovementHandler_AssignFromXML(pCommsHandler, cf, data)
_ParticleMovementHandler_AssignFromXML = _StgDomain._ParticleMovementHandler_AssignFromXML

def _ParticleMovementHandler_Build(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleMovementHandler_Build(pCommsHandler, data)
_ParticleMovementHandler_Build = _StgDomain._ParticleMovementHandler_Build

def _ParticleMovementHandler_Initialise(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleMovementHandler_Initialise(pCommsHandler, data)
_ParticleMovementHandler_Initialise = _StgDomain._ParticleMovementHandler_Initialise

def _ParticleMovementHandler_Execute(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleMovementHandler_Execute(pCommsHandler, data)
_ParticleMovementHandler_Execute = _StgDomain._ParticleMovementHandler_Execute

def _ParticleMovementHandler_Destroy(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleMovementHandler_Destroy(pCommsHandler, data)
_ParticleMovementHandler_Destroy = _StgDomain._ParticleMovementHandler_Destroy

def _ParticleMovementHandler_CopyFunc(ParticleMovementHandler: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._ParticleMovementHandler_CopyFunc(ParticleMovementHandler, dest, deep, nameExt, ptrMap)
_ParticleMovementHandler_CopyFunc = _StgDomain._ParticleMovementHandler_CopyFunc

def _ParticleMovementHandler_Delete(pCommsHandler: 'void *') -> "void":
    return _StgDomain._ParticleMovementHandler_Delete(pCommsHandler)
_ParticleMovementHandler_Delete = _StgDomain._ParticleMovementHandler_Delete

def ParticleMovementHandler_HandleParticleMovementBetweenProcs(pCommsHandler: 'ParticleCommHandler') -> "void":
    return _StgDomain.ParticleMovementHandler_HandleParticleMovementBetweenProcs(pCommsHandler)
ParticleMovementHandler_HandleParticleMovementBetweenProcs = _StgDomain.ParticleMovementHandler_HandleParticleMovementBetweenProcs

def ParticleMovementHandler_DoGlobalFallbackCommunication(arg1: 'ParticleMovementHandler') -> "void":
    return _StgDomain.ParticleMovementHandler_DoGlobalFallbackCommunication(arg1)
ParticleMovementHandler_DoGlobalFallbackCommunication = _StgDomain.ParticleMovementHandler_DoGlobalFallbackCommunication

def ParticleMovementHandler_FindParticlesThatHaveMovedOutsideMyDomain(arg1: 'ParticleMovementHandler') -> "void":
    return _StgDomain.ParticleMovementHandler_FindParticlesThatHaveMovedOutsideMyDomain(arg1)
ParticleMovementHandler_FindParticlesThatHaveMovedOutsideMyDomain = _StgDomain.ParticleMovementHandler_FindParticlesThatHaveMovedOutsideMyDomain

def ParticleMovementHandler_GetCountOfParticlesOutsideDomainPerProcessor(arg1: 'ParticleMovementHandler', globalParticlesOutsideDomainCountsPtr: 'Particle_Index **', maxGlobalParticlesOutsideDomainCountPtr: 'Particle_Index *', globalParticlesOutsideDomainTotalPtr: 'Particle_Index *') -> "void":
    return _StgDomain.ParticleMovementHandler_GetCountOfParticlesOutsideDomainPerProcessor(arg1, globalParticlesOutsideDomainCountsPtr, maxGlobalParticlesOutsideDomainCountPtr, globalParticlesOutsideDomainTotalPtr)
ParticleMovementHandler_GetCountOfParticlesOutsideDomainPerProcessor = _StgDomain.ParticleMovementHandler_GetCountOfParticlesOutsideDomainPerProcessor

def ParticleMovementHandler_ShareAndUpdateParticlesThatHaveMovedOutsideDomains(arg1: 'ParticleMovementHandler', globalParticlesArrivingMyDomainCountPtr: 'Particle_Index *', globalParticlesOutsideDomainTotalPtr: 'Particle_Index *') -> "void":
    return _StgDomain.ParticleMovementHandler_ShareAndUpdateParticlesThatHaveMovedOutsideDomains(arg1, globalParticlesArrivingMyDomainCountPtr, globalParticlesOutsideDomainTotalPtr)
ParticleMovementHandler_ShareAndUpdateParticlesThatHaveMovedOutsideDomains = _StgDomain.ParticleMovementHandler_ShareAndUpdateParticlesThatHaveMovedOutsideDomains

def ParticleMovementHandler_EnsureParticleCountLeavingDomainsEqualsCountEnteringGlobally(arg1: 'ParticleMovementHandler') -> "void":
    return _StgDomain.ParticleMovementHandler_EnsureParticleCountLeavingDomainsEqualsCountEnteringGlobally(arg1)
ParticleMovementHandler_EnsureParticleCountLeavingDomainsEqualsCountEnteringGlobally = _StgDomain.ParticleMovementHandler_EnsureParticleCountLeavingDomainsEqualsCountEnteringGlobally

def ParticleMovementHandler_ZeroGlobalCommStrategyCounters(arg1: 'ParticleMovementHandler') -> "void":
    return _StgDomain.ParticleMovementHandler_ZeroGlobalCommStrategyCounters(arg1)
ParticleMovementHandler_ZeroGlobalCommStrategyCounters = _StgDomain.ParticleMovementHandler_ZeroGlobalCommStrategyCounters

def ParticleMovementHandler_FindFreeSlotAndPrepareForInsertion(arg1: 'ParticleCommHandler') -> "Particle_Index":
    return _StgDomain.ParticleMovementHandler_FindFreeSlotAndPrepareForInsertion(arg1)
ParticleMovementHandler_FindFreeSlotAndPrepareForInsertion = _StgDomain.ParticleMovementHandler_FindFreeSlotAndPrepareForInsertion

def ParticleMovementHandler_FillRemainingHolesInLocalParticlesArray(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain.ParticleMovementHandler_FillRemainingHolesInLocalParticlesArray(arg1)
ParticleMovementHandler_FillRemainingHolesInLocalParticlesArray = _StgDomain.ParticleMovementHandler_FillRemainingHolesInLocalParticlesArray

def ParticleMovementHandler_MergeListsOfUnfilledParticleSlots(arg1: 'ParticleCommHandler') -> "Particle_Index *":
    return _StgDomain.ParticleMovementHandler_MergeListsOfUnfilledParticleSlots(arg1)
ParticleMovementHandler_MergeListsOfUnfilledParticleSlots = _StgDomain.ParticleMovementHandler_MergeListsOfUnfilledParticleSlots

def ParticleMovementHandler_PrintParticleSlotsYetToFill(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain.ParticleMovementHandler_PrintParticleSlotsYetToFill(arg1)
ParticleMovementHandler_PrintParticleSlotsYetToFill = _StgDomain.ParticleMovementHandler_PrintParticleSlotsYetToFill

def ParticleMovementHandler_FinishReceiveAndUpdateShadowParticlesEnteringMyDomain(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain.ParticleMovementHandler_FinishReceiveAndUpdateShadowParticlesEnteringMyDomain(arg1)
ParticleMovementHandler_FinishReceiveAndUpdateShadowParticlesEnteringMyDomain = _StgDomain.ParticleMovementHandler_FinishReceiveAndUpdateShadowParticlesEnteringMyDomain
class ParticleShadowSync(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.ParticleShadowSync__sizeOfSelf_get, _StgDomain.ParticleShadowSync__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.ParticleShadowSync__deleteSelf_get, _StgDomain.ParticleShadowSync__deleteSelf_set)
    type = _swig_property(_StgDomain.ParticleShadowSync_type_get, _StgDomain.ParticleShadowSync_type_set)
    nRefs = _swig_property(_StgDomain.ParticleShadowSync_nRefs_get, _StgDomain.ParticleShadowSync_nRefs_set)
    locked = _swig_property(_StgDomain.ParticleShadowSync_locked_get, _StgDomain.ParticleShadowSync_locked_set)
    _delete = _swig_property(_StgDomain.ParticleShadowSync__delete_get, _StgDomain.ParticleShadowSync__delete_set)
    _print = _swig_property(_StgDomain.ParticleShadowSync__print_get, _StgDomain.ParticleShadowSync__print_set)
    _copy = _swig_property(_StgDomain.ParticleShadowSync__copy_get, _StgDomain.ParticleShadowSync__copy_set)
    name = _swig_property(_StgDomain.ParticleShadowSync_name_get, _StgDomain.ParticleShadowSync_name_set)
    nameAllocationType = _swig_property(_StgDomain.ParticleShadowSync_nameAllocationType_get, _StgDomain.ParticleShadowSync_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.ParticleShadowSync__defaultConstructor_get, _StgDomain.ParticleShadowSync__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.ParticleShadowSync__construct_get, _StgDomain.ParticleShadowSync__construct_set)
    _build = _swig_property(_StgDomain.ParticleShadowSync__build_get, _StgDomain.ParticleShadowSync__build_set)
    _initialise = _swig_property(_StgDomain.ParticleShadowSync__initialise_get, _StgDomain.ParticleShadowSync__initialise_set)
    _execute = _swig_property(_StgDomain.ParticleShadowSync__execute_get, _StgDomain.ParticleShadowSync__execute_set)
    _destroy = _swig_property(_StgDomain.ParticleShadowSync__destroy_get, _StgDomain.ParticleShadowSync__destroy_set)
    isConstructed = _swig_property(_StgDomain.ParticleShadowSync_isConstructed_get, _StgDomain.ParticleShadowSync_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.ParticleShadowSync_isBuilt_get, _StgDomain.ParticleShadowSync_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.ParticleShadowSync_isInitialised_get, _StgDomain.ParticleShadowSync_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.ParticleShadowSync_hasExecuted_get, _StgDomain.ParticleShadowSync_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.ParticleShadowSync_isDestroyed_get, _StgDomain.ParticleShadowSync_isDestroyed_set)
    constructType = _swig_property(_StgDomain.ParticleShadowSync_constructType_get, _StgDomain.ParticleShadowSync_constructType_set)
    buildType = _swig_property(_StgDomain.ParticleShadowSync_buildType_get, _StgDomain.ParticleShadowSync_buildType_set)
    initialiseType = _swig_property(_StgDomain.ParticleShadowSync_initialiseType_get, _StgDomain.ParticleShadowSync_initialiseType_set)
    executeType = _swig_property(_StgDomain.ParticleShadowSync_executeType_get, _StgDomain.ParticleShadowSync_executeType_set)
    destroyType = _swig_property(_StgDomain.ParticleShadowSync_destroyType_get, _StgDomain.ParticleShadowSync_destroyType_set)
    context = _swig_property(_StgDomain.ParticleShadowSync_context_get, _StgDomain.ParticleShadowSync_context_set)
    allocateOutgoingCountArrays = _swig_property(_StgDomain.ParticleShadowSync_allocateOutgoingCountArrays_get, _StgDomain.ParticleShadowSync_allocateOutgoingCountArrays_set)
    allocateOutgoingParticleArrays = _swig_property(_StgDomain.ParticleShadowSync_allocateOutgoingParticleArrays_get, _StgDomain.ParticleShadowSync_allocateOutgoingParticleArrays_set)
    freeOutgoingArrays = _swig_property(_StgDomain.ParticleShadowSync_freeOutgoingArrays_get, _StgDomain.ParticleShadowSync_freeOutgoingArrays_set)
    allocateIncomingCountArrays = _swig_property(_StgDomain.ParticleShadowSync_allocateIncomingCountArrays_get, _StgDomain.ParticleShadowSync_allocateIncomingCountArrays_set)
    allocateIncomingParticleArrays = _swig_property(_StgDomain.ParticleShadowSync_allocateIncomingParticleArrays_get, _StgDomain.ParticleShadowSync_allocateIncomingParticleArrays_set)
    freeIncomingArrays = _swig_property(_StgDomain.ParticleShadowSync_freeIncomingArrays_get, _StgDomain.ParticleShadowSync_freeIncomingArrays_set)
    beginReceiveOfIncomingParticleCounts = _swig_property(_StgDomain.ParticleShadowSync_beginReceiveOfIncomingParticleCounts_get, _StgDomain.ParticleShadowSync_beginReceiveOfIncomingParticleCounts_set)
    finishReceiveOfIncomingParticleCounts = _swig_property(_StgDomain.ParticleShadowSync_finishReceiveOfIncomingParticleCounts_get, _StgDomain.ParticleShadowSync_finishReceiveOfIncomingParticleCounts_set)
    beginReceiveOfIncomingParticles = _swig_property(_StgDomain.ParticleShadowSync_beginReceiveOfIncomingParticles_get, _StgDomain.ParticleShadowSync_beginReceiveOfIncomingParticles_set)
    finishReceiveOfIncomingParticlesAndUpdateIndices = _swig_property(_StgDomain.ParticleShadowSync_finishReceiveOfIncomingParticlesAndUpdateIndices_get, _StgDomain.ParticleShadowSync_finishReceiveOfIncomingParticlesAndUpdateIndices_set)
    sendOutgoingParticleCounts = _swig_property(_StgDomain.ParticleShadowSync_sendOutgoingParticleCounts_get, _StgDomain.ParticleShadowSync_sendOutgoingParticleCounts_set)
    beginSendingParticles = _swig_property(_StgDomain.ParticleShadowSync_beginSendingParticles_get, _StgDomain.ParticleShadowSync_beginSendingParticles_set)
    confirmOutgoingSendsCompleted = _swig_property(_StgDomain.ParticleShadowSync_confirmOutgoingSendsCompleted_get, _StgDomain.ParticleShadowSync_confirmOutgoingSendsCompleted_set)
    _commFunction = _swig_property(_StgDomain.ParticleShadowSync__commFunction_get, _StgDomain.ParticleShadowSync__commFunction_set)
    debug = _swig_property(_StgDomain.ParticleShadowSync_debug_get, _StgDomain.ParticleShadowSync_debug_set)
    swarm = _swig_property(_StgDomain.ParticleShadowSync_swarm_get, _StgDomain.ParticleShadowSync_swarm_set)
    shadowParticlesLeavingMeIndices = _swig_property(_StgDomain.ParticleShadowSync_shadowParticlesLeavingMeIndices_get, _StgDomain.ParticleShadowSync_shadowParticlesLeavingMeIndices_set)
    shadowParticlesLeavingMeTotalCount = _swig_property(_StgDomain.ParticleShadowSync_shadowParticlesLeavingMeTotalCount_get, _StgDomain.ParticleShadowSync_shadowParticlesLeavingMeTotalCount_set)
    shadowParticlesLeavingMeUnfilledCount = _swig_property(_StgDomain.ParticleShadowSync_shadowParticlesLeavingMeUnfilledCount_get, _StgDomain.ParticleShadowSync_shadowParticlesLeavingMeUnfilledCount_set)
    currShadowParticleLeavingMeIndex = _swig_property(_StgDomain.ParticleShadowSync_currShadowParticleLeavingMeIndex_get, _StgDomain.ParticleShadowSync_currShadowParticleLeavingMeIndex_set)
    currParticleLeavingMyDomainIndex = _swig_property(_StgDomain.ParticleShadowSync_currParticleLeavingMyDomainIndex_get, _StgDomain.ParticleShadowSync_currParticleLeavingMyDomainIndex_set)
    particlesOutsideDomainIndices = _swig_property(_StgDomain.ParticleShadowSync_particlesOutsideDomainIndices_get, _StgDomain.ParticleShadowSync_particlesOutsideDomainIndices_set)
    particlesOutsideDomainTotalCount = _swig_property(_StgDomain.ParticleShadowSync_particlesOutsideDomainTotalCount_get, _StgDomain.ParticleShadowSync_particlesOutsideDomainTotalCount_set)
    particlesOutsideDomainUnfilledCount = _swig_property(_StgDomain.ParticleShadowSync_particlesOutsideDomainUnfilledCount_get, _StgDomain.ParticleShadowSync_particlesOutsideDomainUnfilledCount_set)
    shadowParticlesLeavingMeCountsPerCell = _swig_property(_StgDomain.ParticleShadowSync_shadowParticlesLeavingMeCountsPerCell_get, _StgDomain.ParticleShadowSync_shadowParticlesLeavingMeCountsPerCell_set)
    shadowParticlesLeavingMeTotalCounts = _swig_property(_StgDomain.ParticleShadowSync_shadowParticlesLeavingMeTotalCounts_get, _StgDomain.ParticleShadowSync_shadowParticlesLeavingMeTotalCounts_set)
    shadowParticlesLeavingMe = _swig_property(_StgDomain.ParticleShadowSync_shadowParticlesLeavingMe_get, _StgDomain.ParticleShadowSync_shadowParticlesLeavingMe_set)
    shadowParticlesLeavingMeHandles = _swig_property(_StgDomain.ParticleShadowSync_shadowParticlesLeavingMeHandles_get, _StgDomain.ParticleShadowSync_shadowParticlesLeavingMeHandles_set)
    particlesArrivingFromNbrShadowCellCounts = _swig_property(_StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCellCounts_get, _StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCellCounts_set)
    particlesArrivingFromNbrShadowCellCountsHandles = _swig_property(_StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCellCountsHandles_get, _StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCellCountsHandles_set)
    particlesArrivingFromNbrShadowCellsTotalCounts = _swig_property(_StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCellsTotalCounts_get, _StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCellsTotalCounts_set)
    particlesArrivingFromNbrShadowCells = _swig_property(_StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCells_get, _StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCells_set)
    particlesArrivingFromNbrShadowCellsHandles = _swig_property(_StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCellsHandles_get, _StgDomain.ParticleShadowSync_particlesArrivingFromNbrShadowCellsHandles_set)

    def __init__(self):
        _StgDomain.ParticleShadowSync_swiginit(self, _StgDomain.new_ParticleShadowSync())
    __swig_destroy__ = _StgDomain.delete_ParticleShadowSync
ParticleShadowSync_swigregister = _StgDomain.ParticleShadowSync_swigregister
ParticleShadowSync_swigregister(ParticleShadowSync)
ParticleShadowSync_Type = cvar.ParticleShadowSync_Type


def ParticleShadowSync_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain.ParticleShadowSync_DefaultNew(name)
ParticleShadowSync_DefaultNew = _StgDomain.ParticleShadowSync_DefaultNew

def ParticleShadowSync_New(name: 'Name', swarm: 'void *') -> "ParticleShadowSync *":
    return _StgDomain.ParticleShadowSync_New(name, swarm)
ParticleShadowSync_New = _StgDomain.ParticleShadowSync_New

def _ParticleShadowSync_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', initFlag: 'Bool', _allocateOutgoingCountArrays: 'ParticleCommHandler_AllocateOutgoingCountArrays *', _allocateOutgoingParticleArrays: 'ParticleCommHandler_AllocateOutgoingParticleArrays *', _freeOutgoingArrays: 'ParticleCommHandler_FreeOutgoingArrays *', _allocateIncomingCountArrays: 'ParticleCommHandler_AllocateIncomingCountArrays *', _allocateIncomingParticleArrays: 'ParticleCommHandler_AllocateIncomingParticleArrays *', _freeIncomingArrays: 'ParticleCommHandler_FreeIncomingArrays *', _beginReceiveOfIncomingParticleCounts: 'ParticleCommHandler_BeginReceiveOfIncomingParticleCounts *', _finishReceiveOfIncomingParticleCounts: 'ParticleCommHandler_FinishReceiveOfIncomingParticleCounts *', _beginReceiveOfIncomingParticles: 'ParticleCommHandler_BeginReceiveOfIncomingParticles *', _finishReceiveOfIncomingParticlesAndUpdateIndices: 'ParticleCommHandler_FinishReceiveOfIncomingParticlesAndUpdateIndices *', _sendOutgoingParticleCounts: 'ParticleCommHandler_SendOutgoingParticleCounts *', _beginSendingParticles: 'ParticleCommHandler_BeginSendingParticles *', _confirmOutgoingSendsCompleted: 'ParticleCommHandler_ConfirmOutgoingSendsCompleted *', _commFunction: 'ParticleCommHandler_CommFunction *') -> "ParticleShadowSync *":
    return _StgDomain._ParticleShadowSync_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, initFlag, _allocateOutgoingCountArrays, _allocateOutgoingParticleArrays, _freeOutgoingArrays, _allocateIncomingCountArrays, _allocateIncomingParticleArrays, _freeIncomingArrays, _beginReceiveOfIncomingParticleCounts, _finishReceiveOfIncomingParticleCounts, _beginReceiveOfIncomingParticles, _finishReceiveOfIncomingParticlesAndUpdateIndices, _sendOutgoingParticleCounts, _beginSendingParticles, _confirmOutgoingSendsCompleted, _commFunction)
_ParticleShadowSync_New = _StgDomain._ParticleShadowSync_New

def _ParticleShadowSync_Init(arg1: 'ParticleShadowSync') -> "void":
    return _StgDomain._ParticleShadowSync_Init(arg1)
_ParticleShadowSync_Init = _StgDomain._ParticleShadowSync_Init

def _ParticleShadowSync_Print(pCommsHandler: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._ParticleShadowSync_Print(pCommsHandler, stream)
_ParticleShadowSync_Print = _StgDomain._ParticleShadowSync_Print

def _ParticleShadowSync_AssignFromXML(pCommsHandler: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._ParticleShadowSync_AssignFromXML(pCommsHandler, cf, data)
_ParticleShadowSync_AssignFromXML = _StgDomain._ParticleShadowSync_AssignFromXML

def _ParticleShadowSync_Build(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleShadowSync_Build(pCommsHandler, data)
_ParticleShadowSync_Build = _StgDomain._ParticleShadowSync_Build

def _ParticleShadowSync_Initialise(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleShadowSync_Initialise(pCommsHandler, data)
_ParticleShadowSync_Initialise = _StgDomain._ParticleShadowSync_Initialise

def _ParticleShadowSync_Execute(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleShadowSync_Execute(pCommsHandler, data)
_ParticleShadowSync_Execute = _StgDomain._ParticleShadowSync_Execute

def _ParticleShadowSync_Destroy(pCommsHandler: 'void *', data: 'void *') -> "void":
    return _StgDomain._ParticleShadowSync_Destroy(pCommsHandler, data)
_ParticleShadowSync_Destroy = _StgDomain._ParticleShadowSync_Destroy

def _ParticleShadowSync_CopyFunc(ParticleShadowSync: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._ParticleShadowSync_CopyFunc(ParticleShadowSync, dest, deep, nameExt, ptrMap)
_ParticleShadowSync_CopyFunc = _StgDomain._ParticleShadowSync_CopyFunc

def _ParticleShadowSync_Delete(pCommsHandler: 'void *') -> "void":
    return _StgDomain._ParticleShadowSync_Delete(pCommsHandler)
_ParticleShadowSync_Delete = _StgDomain._ParticleShadowSync_Delete

def ParticleShadowSync_HandleParticleMovementBetweenProcs(pCommsHandler: 'ParticleCommHandler') -> "void":
    return _StgDomain.ParticleShadowSync_HandleParticleMovementBetweenProcs(pCommsHandler)
ParticleShadowSync_HandleParticleMovementBetweenProcs = _StgDomain.ParticleShadowSync_HandleParticleMovementBetweenProcs

def ParticleShadowSync_FindParticlesThatHaveMovedOutsideMyDomain(arg1: 'ParticleShadowSync') -> "void":
    return _StgDomain.ParticleShadowSync_FindParticlesThatHaveMovedOutsideMyDomain(arg1)
ParticleShadowSync_FindParticlesThatHaveMovedOutsideMyDomain = _StgDomain.ParticleShadowSync_FindParticlesThatHaveMovedOutsideMyDomain

def ParticleShadowSync_GetCountOfParticlesOutsideDomainPerProcessor(arg1: 'ParticleShadowSync', globalParticlesOutsideDomainCountsPtr: 'Particle_Index **', maxGlobalParticlesOutsideDomainCountPtr: 'Particle_Index *', globalParticlesOutsideDomainTotalPtr: 'Particle_Index *') -> "void":
    return _StgDomain.ParticleShadowSync_GetCountOfParticlesOutsideDomainPerProcessor(arg1, globalParticlesOutsideDomainCountsPtr, maxGlobalParticlesOutsideDomainCountPtr, globalParticlesOutsideDomainTotalPtr)
ParticleShadowSync_GetCountOfParticlesOutsideDomainPerProcessor = _StgDomain.ParticleShadowSync_GetCountOfParticlesOutsideDomainPerProcessor

def _ParticleShadowSync_FinishReceiveOfIncomingParticleCounts(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleShadowSync_FinishReceiveOfIncomingParticleCounts(arg1)
_ParticleShadowSync_FinishReceiveOfIncomingParticleCounts = _StgDomain._ParticleShadowSync_FinishReceiveOfIncomingParticleCounts

def _ParticleShadowSync_BeginReceiveOfIncomingParticles(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleShadowSync_BeginReceiveOfIncomingParticles(arg1)
_ParticleShadowSync_BeginReceiveOfIncomingParticles = _StgDomain._ParticleShadowSync_BeginReceiveOfIncomingParticles

def _ParticleShadowSync_SendParticleTotalsInShadowCellsToNbrs(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleShadowSync_SendParticleTotalsInShadowCellsToNbrs(arg1)
_ParticleShadowSync_SendParticleTotalsInShadowCellsToNbrs = _StgDomain._ParticleShadowSync_SendParticleTotalsInShadowCellsToNbrs

def _ParticleShadowSync_SendShadowParticles(arg1: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleShadowSync_SendShadowParticles(arg1)
_ParticleShadowSync_SendShadowParticles = _StgDomain._ParticleShadowSync_SendShadowParticles

def _ParticleShadowSync_FinishReceiveOfIncomingParticles(pCommHandler: 'ParticleCommHandler') -> "void":
    return _StgDomain._ParticleShadowSync_FinishReceiveOfIncomingParticles(pCommHandler)
_ParticleShadowSync_FinishReceiveOfIncomingParticles = _StgDomain._ParticleShadowSync_FinishReceiveOfIncomingParticles
class SingleCellLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.SingleCellLayout__sizeOfSelf_get, _StgDomain.SingleCellLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.SingleCellLayout__deleteSelf_get, _StgDomain.SingleCellLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.SingleCellLayout_type_get, _StgDomain.SingleCellLayout_type_set)
    nRefs = _swig_property(_StgDomain.SingleCellLayout_nRefs_get, _StgDomain.SingleCellLayout_nRefs_set)
    locked = _swig_property(_StgDomain.SingleCellLayout_locked_get, _StgDomain.SingleCellLayout_locked_set)
    _delete = _swig_property(_StgDomain.SingleCellLayout__delete_get, _StgDomain.SingleCellLayout__delete_set)
    _print = _swig_property(_StgDomain.SingleCellLayout__print_get, _StgDomain.SingleCellLayout__print_set)
    _copy = _swig_property(_StgDomain.SingleCellLayout__copy_get, _StgDomain.SingleCellLayout__copy_set)
    name = _swig_property(_StgDomain.SingleCellLayout_name_get, _StgDomain.SingleCellLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.SingleCellLayout_nameAllocationType_get, _StgDomain.SingleCellLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.SingleCellLayout__defaultConstructor_get, _StgDomain.SingleCellLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.SingleCellLayout__construct_get, _StgDomain.SingleCellLayout__construct_set)
    _build = _swig_property(_StgDomain.SingleCellLayout__build_get, _StgDomain.SingleCellLayout__build_set)
    _initialise = _swig_property(_StgDomain.SingleCellLayout__initialise_get, _StgDomain.SingleCellLayout__initialise_set)
    _execute = _swig_property(_StgDomain.SingleCellLayout__execute_get, _StgDomain.SingleCellLayout__execute_set)
    _destroy = _swig_property(_StgDomain.SingleCellLayout__destroy_get, _StgDomain.SingleCellLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.SingleCellLayout_isConstructed_get, _StgDomain.SingleCellLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.SingleCellLayout_isBuilt_get, _StgDomain.SingleCellLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.SingleCellLayout_isInitialised_get, _StgDomain.SingleCellLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.SingleCellLayout_hasExecuted_get, _StgDomain.SingleCellLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.SingleCellLayout_isDestroyed_get, _StgDomain.SingleCellLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.SingleCellLayout_constructType_get, _StgDomain.SingleCellLayout_constructType_set)
    buildType = _swig_property(_StgDomain.SingleCellLayout_buildType_get, _StgDomain.SingleCellLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.SingleCellLayout_initialiseType_get, _StgDomain.SingleCellLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.SingleCellLayout_executeType_get, _StgDomain.SingleCellLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.SingleCellLayout_destroyType_get, _StgDomain.SingleCellLayout_destroyType_set)
    context = _swig_property(_StgDomain.SingleCellLayout_context_get, _StgDomain.SingleCellLayout_context_set)
    _cellLocalCount = _swig_property(_StgDomain.SingleCellLayout__cellLocalCount_get, _StgDomain.SingleCellLayout__cellLocalCount_set)
    _cellShadowCount = _swig_property(_StgDomain.SingleCellLayout__cellShadowCount_get, _StgDomain.SingleCellLayout__cellShadowCount_set)
    _pointCount = _swig_property(_StgDomain.SingleCellLayout__pointCount_get, _StgDomain.SingleCellLayout__pointCount_set)
    _initialisePoints = _swig_property(_StgDomain.SingleCellLayout__initialisePoints_get, _StgDomain.SingleCellLayout__initialisePoints_set)
    _mapElementIdToCellId = _swig_property(_StgDomain.SingleCellLayout__mapElementIdToCellId_get, _StgDomain.SingleCellLayout__mapElementIdToCellId_set)
    _isInCell = _swig_property(_StgDomain.SingleCellLayout__isInCell_get, _StgDomain.SingleCellLayout__isInCell_set)
    _cellOf = _swig_property(_StgDomain.SingleCellLayout__cellOf_get, _StgDomain.SingleCellLayout__cellOf_set)
    _getShadowInfo = _swig_property(_StgDomain.SingleCellLayout__getShadowInfo_get, _StgDomain.SingleCellLayout__getShadowInfo_set)
    dimExists = _swig_property(_StgDomain.SingleCellLayout_dimExists_get, _StgDomain.SingleCellLayout_dimExists_set)
    min = _swig_property(_StgDomain.SingleCellLayout_min_get, _StgDomain.SingleCellLayout_min_set)
    max = _swig_property(_StgDomain.SingleCellLayout_max_get, _StgDomain.SingleCellLayout_max_set)
    cellPointCoords = _swig_property(_StgDomain.SingleCellLayout_cellPointCoords_get, _StgDomain.SingleCellLayout_cellPointCoords_set)
    pointCount = _swig_property(_StgDomain.SingleCellLayout_pointCount_get, _StgDomain.SingleCellLayout_pointCount_set)

    def __init__(self):
        _StgDomain.SingleCellLayout_swiginit(self, _StgDomain.new_SingleCellLayout())
    __swig_destroy__ = _StgDomain.delete_SingleCellLayout
SingleCellLayout_swigregister = _StgDomain.SingleCellLayout_swigregister
SingleCellLayout_swigregister(SingleCellLayout)
SingleCellLayout_Type = cvar.SingleCellLayout_Type


def SingleCellLayout_New(name: 'Name', context: 'AbstractContext *', dimExists: 'Bool const [3]', min: 'XYZ const', max: 'XYZ const') -> "SingleCellLayout *":
    return _StgDomain.SingleCellLayout_New(name, context, dimExists, min, max)
SingleCellLayout_New = _StgDomain.SingleCellLayout_New

def _SingleCellLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _cellLocalCount: 'CellLayout_CellCountFunction *', _cellShadowCount: 'CellLayout_CellCountFunction *', _pointCount: 'CellLayout_PointCountFunction *', _initialisePoints: 'CellLayout_InitialisePointsFunction *', _mapElementIdToCellId: 'CellLayout_MapElementIdToCellIdFunction *', _isInCell: 'CellLayout_IsInCellFunction *', _cellOf: 'CellLayout_CellOfFunction *', _getShadowInfo: 'CellLayout_GetShadowInfoFunction *') -> "SingleCellLayout *":
    return _StgDomain._SingleCellLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _cellLocalCount, _cellShadowCount, _pointCount, _initialisePoints, _mapElementIdToCellId, _isInCell, _cellOf, _getShadowInfo)
_SingleCellLayout_New = _StgDomain._SingleCellLayout_New

def _SingleCellLayout_Init(cellLayout: 'void *', dimExists: 'Bool const [3]', min: 'XYZ const', max: 'XYZ const') -> "void":
    return _StgDomain._SingleCellLayout_Init(cellLayout, dimExists, min, max)
_SingleCellLayout_Init = _StgDomain._SingleCellLayout_Init

def _SingleCellLayout_Delete(singleCellLayout: 'void *') -> "void":
    return _StgDomain._SingleCellLayout_Delete(singleCellLayout)
_SingleCellLayout_Delete = _StgDomain._SingleCellLayout_Delete

def _SingleCellLayout_Print(singleCellLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._SingleCellLayout_Print(singleCellLayout, stream)
_SingleCellLayout_Print = _StgDomain._SingleCellLayout_Print

def _SingleCellLayout_Copy(singleCellLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._SingleCellLayout_Copy(singleCellLayout, dest, deep, nameExt, ptrMap)
_SingleCellLayout_Copy = _StgDomain._SingleCellLayout_Copy

def _SingleCellLayout_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._SingleCellLayout_DefaultNew(name)
_SingleCellLayout_DefaultNew = _StgDomain._SingleCellLayout_DefaultNew

def _SingleCellLayout_AssignFromXML(singleCellLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._SingleCellLayout_AssignFromXML(singleCellLayout, cf, data)
_SingleCellLayout_AssignFromXML = _StgDomain._SingleCellLayout_AssignFromXML

def _SingleCellLayout_Build(singleCellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._SingleCellLayout_Build(singleCellLayout, data)
_SingleCellLayout_Build = _StgDomain._SingleCellLayout_Build

def _SingleCellLayout_Initialise(singleCellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._SingleCellLayout_Initialise(singleCellLayout, data)
_SingleCellLayout_Initialise = _StgDomain._SingleCellLayout_Initialise

def _SingleCellLayout_Execute(singleCellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._SingleCellLayout_Execute(singleCellLayout, data)
_SingleCellLayout_Execute = _StgDomain._SingleCellLayout_Execute

def _SingleCellLayout_Destroy(singleCellLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._SingleCellLayout_Destroy(singleCellLayout, data)
_SingleCellLayout_Destroy = _StgDomain._SingleCellLayout_Destroy

def _SingleCellLayout_CellLocalCount(singleCellLayout: 'void *') -> "Cell_Index":
    return _StgDomain._SingleCellLayout_CellLocalCount(singleCellLayout)
_SingleCellLayout_CellLocalCount = _StgDomain._SingleCellLayout_CellLocalCount

def _SingleCellLayout_CellShadowCount(singleCellLayout: 'void *') -> "Cell_Index":
    return _StgDomain._SingleCellLayout_CellShadowCount(singleCellLayout)
_SingleCellLayout_CellShadowCount = _StgDomain._SingleCellLayout_CellShadowCount

def _SingleCellLayout_PointCount(singleCellLayout: 'void *', cellIndex: 'Cell_Index') -> "Cell_PointIndex":
    return _StgDomain._SingleCellLayout_PointCount(singleCellLayout, cellIndex)
_SingleCellLayout_PointCount = _StgDomain._SingleCellLayout_PointCount

def _SingleCellLayout_InitialisePoints(singleCellLayout: 'void *', cellIndex: 'Cell_Index', pointCount: 'Cell_PointIndex', points: 'Cell_Points') -> "void":
    return _StgDomain._SingleCellLayout_InitialisePoints(singleCellLayout, cellIndex, pointCount, points)
_SingleCellLayout_InitialisePoints = _StgDomain._SingleCellLayout_InitialisePoints

def _SingleCellLayout_MapElementIdToCellId(cellLayout: 'void *', element_dI: 'unsigned int') -> "Cell_Index":
    return _StgDomain._SingleCellLayout_MapElementIdToCellId(cellLayout, element_dI)
_SingleCellLayout_MapElementIdToCellId = _StgDomain._SingleCellLayout_MapElementIdToCellId

def _SingleCellLayout_IsInCell(singleCellLayout: 'void *', cellIndex: 'Cell_Index', particle: 'void *') -> "Bool":
    return _StgDomain._SingleCellLayout_IsInCell(singleCellLayout, cellIndex, particle)
_SingleCellLayout_IsInCell = _StgDomain._SingleCellLayout_IsInCell

def _SingleCellLayout_CellOf(singleCellLayout: 'void *', particle: 'void *') -> "Cell_Index":
    return _StgDomain._SingleCellLayout_CellOf(singleCellLayout, particle)
_SingleCellLayout_CellOf = _StgDomain._SingleCellLayout_CellOf

def _SingleCellLayout_GetShadowInfo(singleCellLayout: 'void *') -> "ShadowInfo *":
    return _StgDomain._SingleCellLayout_GetShadowInfo(singleCellLayout)
_SingleCellLayout_GetShadowInfo = _StgDomain._SingleCellLayout_GetShadowInfo

def _SingleCellLayout_CalculateGlobalPointCount(arg1: 'SingleCellLayout') -> "void":
    return _StgDomain._SingleCellLayout_CalculateGlobalPointCount(arg1)
_SingleCellLayout_CalculateGlobalPointCount = _StgDomain._SingleCellLayout_CalculateGlobalPointCount

def _SingleCellLayout_InitialiseGlobalCellPointPositions(arg1: 'SingleCellLayout') -> "void":
    return _StgDomain._SingleCellLayout_InitialiseGlobalCellPointPositions(arg1)
_SingleCellLayout_InitialiseGlobalCellPointPositions = _StgDomain._SingleCellLayout_InitialiseGlobalCellPointPositions
class SpaceFillerParticleLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.SpaceFillerParticleLayout__sizeOfSelf_get, _StgDomain.SpaceFillerParticleLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.SpaceFillerParticleLayout__deleteSelf_get, _StgDomain.SpaceFillerParticleLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.SpaceFillerParticleLayout_type_get, _StgDomain.SpaceFillerParticleLayout_type_set)
    nRefs = _swig_property(_StgDomain.SpaceFillerParticleLayout_nRefs_get, _StgDomain.SpaceFillerParticleLayout_nRefs_set)
    locked = _swig_property(_StgDomain.SpaceFillerParticleLayout_locked_get, _StgDomain.SpaceFillerParticleLayout_locked_set)
    _delete = _swig_property(_StgDomain.SpaceFillerParticleLayout__delete_get, _StgDomain.SpaceFillerParticleLayout__delete_set)
    _print = _swig_property(_StgDomain.SpaceFillerParticleLayout__print_get, _StgDomain.SpaceFillerParticleLayout__print_set)
    _copy = _swig_property(_StgDomain.SpaceFillerParticleLayout__copy_get, _StgDomain.SpaceFillerParticleLayout__copy_set)
    name = _swig_property(_StgDomain.SpaceFillerParticleLayout_name_get, _StgDomain.SpaceFillerParticleLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.SpaceFillerParticleLayout_nameAllocationType_get, _StgDomain.SpaceFillerParticleLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.SpaceFillerParticleLayout__defaultConstructor_get, _StgDomain.SpaceFillerParticleLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.SpaceFillerParticleLayout__construct_get, _StgDomain.SpaceFillerParticleLayout__construct_set)
    _build = _swig_property(_StgDomain.SpaceFillerParticleLayout__build_get, _StgDomain.SpaceFillerParticleLayout__build_set)
    _initialise = _swig_property(_StgDomain.SpaceFillerParticleLayout__initialise_get, _StgDomain.SpaceFillerParticleLayout__initialise_set)
    _execute = _swig_property(_StgDomain.SpaceFillerParticleLayout__execute_get, _StgDomain.SpaceFillerParticleLayout__execute_set)
    _destroy = _swig_property(_StgDomain.SpaceFillerParticleLayout__destroy_get, _StgDomain.SpaceFillerParticleLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.SpaceFillerParticleLayout_isConstructed_get, _StgDomain.SpaceFillerParticleLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.SpaceFillerParticleLayout_isBuilt_get, _StgDomain.SpaceFillerParticleLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.SpaceFillerParticleLayout_isInitialised_get, _StgDomain.SpaceFillerParticleLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.SpaceFillerParticleLayout_hasExecuted_get, _StgDomain.SpaceFillerParticleLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.SpaceFillerParticleLayout_isDestroyed_get, _StgDomain.SpaceFillerParticleLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.SpaceFillerParticleLayout_constructType_get, _StgDomain.SpaceFillerParticleLayout_constructType_set)
    buildType = _swig_property(_StgDomain.SpaceFillerParticleLayout_buildType_get, _StgDomain.SpaceFillerParticleLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.SpaceFillerParticleLayout_initialiseType_get, _StgDomain.SpaceFillerParticleLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.SpaceFillerParticleLayout_executeType_get, _StgDomain.SpaceFillerParticleLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.SpaceFillerParticleLayout_destroyType_get, _StgDomain.SpaceFillerParticleLayout_destroyType_set)
    context = _swig_property(_StgDomain.SpaceFillerParticleLayout_context_get, _StgDomain.SpaceFillerParticleLayout_context_set)
    _setInitialCounts = _swig_property(_StgDomain.SpaceFillerParticleLayout__setInitialCounts_get, _StgDomain.SpaceFillerParticleLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgDomain.SpaceFillerParticleLayout__initialiseParticles_get, _StgDomain.SpaceFillerParticleLayout__initialiseParticles_set)
    debug = _swig_property(_StgDomain.SpaceFillerParticleLayout_debug_get, _StgDomain.SpaceFillerParticleLayout_debug_set)
    coordSystem = _swig_property(_StgDomain.SpaceFillerParticleLayout_coordSystem_get, _StgDomain.SpaceFillerParticleLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgDomain.SpaceFillerParticleLayout_weightsInitialisedAtStartup_get, _StgDomain.SpaceFillerParticleLayout_weightsInitialisedAtStartup_set)
    _initialiseParticle = _swig_property(_StgDomain.SpaceFillerParticleLayout__initialiseParticle_get, _StgDomain.SpaceFillerParticleLayout__initialiseParticle_set)
    totalInitialParticles = _swig_property(_StgDomain.SpaceFillerParticleLayout_totalInitialParticles_get, _StgDomain.SpaceFillerParticleLayout_totalInitialParticles_set)
    averageInitialParticlesPerCell = _swig_property(_StgDomain.SpaceFillerParticleLayout_averageInitialParticlesPerCell_get, _StgDomain.SpaceFillerParticleLayout_averageInitialParticlesPerCell_set)
    mustUseAllParticles = _swig_property(_StgDomain.SpaceFillerParticleLayout_mustUseAllParticles_get, _StgDomain.SpaceFillerParticleLayout_mustUseAllParticles_set)
    dim = _swig_property(_StgDomain.SpaceFillerParticleLayout_dim_get, _StgDomain.SpaceFillerParticleLayout_dim_set)
    sobolGenerator = _swig_property(_StgDomain.SpaceFillerParticleLayout_sobolGenerator_get, _StgDomain.SpaceFillerParticleLayout_sobolGenerator_set)

    def __init__(self):
        _StgDomain.SpaceFillerParticleLayout_swiginit(self, _StgDomain.new_SpaceFillerParticleLayout())
    __swig_destroy__ = _StgDomain.delete_SpaceFillerParticleLayout
SpaceFillerParticleLayout_swigregister = _StgDomain.SpaceFillerParticleLayout_swigregister
SpaceFillerParticleLayout_swigregister(SpaceFillerParticleLayout)
SpaceFillerParticleLayout_Type = cvar.SpaceFillerParticleLayout_Type
SpaceFillerParticleLayout_Invalid = cvar.SpaceFillerParticleLayout_Invalid


def SpaceFillerParticleLayout_New(name: 'Name', context: 'AbstractContext *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', totalInitialParticles: 'unsigned int', averageInitialParticlesPerCell: 'double', dim: 'Dimension_Index') -> "SpaceFillerParticleLayout *":
    return _StgDomain.SpaceFillerParticleLayout_New(name, context, coordSystem, weightsInitialisedAtStartup, totalInitialParticles, averageInitialParticlesPerCell, dim)
SpaceFillerParticleLayout_New = _StgDomain.SpaceFillerParticleLayout_New

def _SpaceFillerParticleLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', _initialiseParticle: 'GlobalParticleLayout_InitialiseParticleFunction *', totalInitialParticles: 'Particle_Index', averageInitialParticlesPerCell: 'double', dim: 'Dimension_Index') -> "SpaceFillerParticleLayout *":
    return _StgDomain._SpaceFillerParticleLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup, _initialiseParticle, totalInitialParticles, averageInitialParticlesPerCell, dim)
_SpaceFillerParticleLayout_New = _StgDomain._SpaceFillerParticleLayout_New

def _SpaceFillerParticleLayout_Init(spaceFillerParticleLayout: 'void *', dim: 'Dimension_Index') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_Init(spaceFillerParticleLayout, dim)
_SpaceFillerParticleLayout_Init = _StgDomain._SpaceFillerParticleLayout_Init

def _SpaceFillerParticleLayout_Delete(spaceFillerParticleLayout: 'void *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_Delete(spaceFillerParticleLayout)
_SpaceFillerParticleLayout_Delete = _StgDomain._SpaceFillerParticleLayout_Delete

def _SpaceFillerParticleLayout_Print(spaceFillerParticleLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_Print(spaceFillerParticleLayout, stream)
_SpaceFillerParticleLayout_Print = _StgDomain._SpaceFillerParticleLayout_Print

def _SpaceFillerParticleLayout_Copy(spaceFillerParticleLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._SpaceFillerParticleLayout_Copy(spaceFillerParticleLayout, dest, deep, nameExt, ptrMap)
_SpaceFillerParticleLayout_Copy = _StgDomain._SpaceFillerParticleLayout_Copy

def _SpaceFillerParticleLayout_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._SpaceFillerParticleLayout_DefaultNew(name)
_SpaceFillerParticleLayout_DefaultNew = _StgDomain._SpaceFillerParticleLayout_DefaultNew

def _SpaceFillerParticleLayout_AssignFromXML(spaceFillerParticleLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_AssignFromXML(spaceFillerParticleLayout, cf, data)
_SpaceFillerParticleLayout_AssignFromXML = _StgDomain._SpaceFillerParticleLayout_AssignFromXML

def _SpaceFillerParticleLayout_Build(spaceFillerParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_Build(spaceFillerParticleLayout, data)
_SpaceFillerParticleLayout_Build = _StgDomain._SpaceFillerParticleLayout_Build

def _SpaceFillerParticleLayout_Initialise(spaceFillerParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_Initialise(spaceFillerParticleLayout, data)
_SpaceFillerParticleLayout_Initialise = _StgDomain._SpaceFillerParticleLayout_Initialise

def _SpaceFillerParticleLayout_Execute(spaceFillerParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_Execute(spaceFillerParticleLayout, data)
_SpaceFillerParticleLayout_Execute = _StgDomain._SpaceFillerParticleLayout_Execute

def _SpaceFillerParticleLayout_Destroy(spaceFillerParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_Destroy(spaceFillerParticleLayout, data)
_SpaceFillerParticleLayout_Destroy = _StgDomain._SpaceFillerParticleLayout_Destroy

def _SpaceFillerParticleLayout_InitialiseParticles(spaceFillerParticleLayout: 'void *', swarm: 'void *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_InitialiseParticles(spaceFillerParticleLayout, swarm)
_SpaceFillerParticleLayout_InitialiseParticles = _StgDomain._SpaceFillerParticleLayout_InitialiseParticles

def _SpaceFillerParticleLayout_InitialiseParticle(spaceFillerParticleLayout: 'void *', _swarm: 'void *', newParticle_I: 'Particle_Index', particle: 'void *') -> "void":
    return _StgDomain._SpaceFillerParticleLayout_InitialiseParticle(spaceFillerParticleLayout, _swarm, newParticle_I, particle)
_SpaceFillerParticleLayout_InitialiseParticle = _StgDomain._SpaceFillerParticleLayout_InitialiseParticle
class Swarm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.Swarm__sizeOfSelf_get, _StgDomain.Swarm__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.Swarm__deleteSelf_get, _StgDomain.Swarm__deleteSelf_set)
    type = _swig_property(_StgDomain.Swarm_type_get, _StgDomain.Swarm_type_set)
    nRefs = _swig_property(_StgDomain.Swarm_nRefs_get, _StgDomain.Swarm_nRefs_set)
    locked = _swig_property(_StgDomain.Swarm_locked_get, _StgDomain.Swarm_locked_set)
    _delete = _swig_property(_StgDomain.Swarm__delete_get, _StgDomain.Swarm__delete_set)
    _print = _swig_property(_StgDomain.Swarm__print_get, _StgDomain.Swarm__print_set)
    _copy = _swig_property(_StgDomain.Swarm__copy_get, _StgDomain.Swarm__copy_set)
    name = _swig_property(_StgDomain.Swarm_name_get, _StgDomain.Swarm_name_set)
    nameAllocationType = _swig_property(_StgDomain.Swarm_nameAllocationType_get, _StgDomain.Swarm_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.Swarm__defaultConstructor_get, _StgDomain.Swarm__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.Swarm__construct_get, _StgDomain.Swarm__construct_set)
    _build = _swig_property(_StgDomain.Swarm__build_get, _StgDomain.Swarm__build_set)
    _initialise = _swig_property(_StgDomain.Swarm__initialise_get, _StgDomain.Swarm__initialise_set)
    _execute = _swig_property(_StgDomain.Swarm__execute_get, _StgDomain.Swarm__execute_set)
    _destroy = _swig_property(_StgDomain.Swarm__destroy_get, _StgDomain.Swarm__destroy_set)
    isConstructed = _swig_property(_StgDomain.Swarm_isConstructed_get, _StgDomain.Swarm_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.Swarm_isBuilt_get, _StgDomain.Swarm_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.Swarm_isInitialised_get, _StgDomain.Swarm_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.Swarm_hasExecuted_get, _StgDomain.Swarm_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.Swarm_isDestroyed_get, _StgDomain.Swarm_isDestroyed_set)
    constructType = _swig_property(_StgDomain.Swarm_constructType_get, _StgDomain.Swarm_constructType_set)
    buildType = _swig_property(_StgDomain.Swarm_buildType_get, _StgDomain.Swarm_buildType_set)
    initialiseType = _swig_property(_StgDomain.Swarm_initialiseType_get, _StgDomain.Swarm_initialiseType_set)
    executeType = _swig_property(_StgDomain.Swarm_executeType_get, _StgDomain.Swarm_executeType_set)
    destroyType = _swig_property(_StgDomain.Swarm_destroyType_get, _StgDomain.Swarm_destroyType_set)
    context = _swig_property(_StgDomain.Swarm_context_get, _StgDomain.Swarm_context_set)
    cellLayout = _swig_property(_StgDomain.Swarm_cellLayout_get, _StgDomain.Swarm_cellLayout_set)
    particleLayout = _swig_property(_StgDomain.Swarm_particleLayout_get, _StgDomain.Swarm_particleLayout_set)
    dim = _swig_property(_StgDomain.Swarm_dim_get, _StgDomain.Swarm_dim_set)
    extension_Register = _swig_property(_StgDomain.Swarm_extension_Register_get, _StgDomain.Swarm_extension_Register_set)
    debug = _swig_property(_StgDomain.Swarm_debug_get, _StgDomain.Swarm_debug_set)
    myRank = _swig_property(_StgDomain.Swarm_myRank_get, _StgDomain.Swarm_myRank_set)
    nProc = _swig_property(_StgDomain.Swarm_nProc_get, _StgDomain.Swarm_nProc_set)
    comm = _swig_property(_StgDomain.Swarm_comm_get, _StgDomain.Swarm_comm_set)
    isSwarmTypeToCheckPointAndReload = _swig_property(_StgDomain.Swarm_isSwarmTypeToCheckPointAndReload_get, _StgDomain.Swarm_isSwarmTypeToCheckPointAndReload_set)
    cellLocalCount = _swig_property(_StgDomain.Swarm_cellLocalCount_get, _StgDomain.Swarm_cellLocalCount_set)
    cellDomainCount = _swig_property(_StgDomain.Swarm_cellDomainCount_get, _StgDomain.Swarm_cellDomainCount_set)
    cellShadowCount = _swig_property(_StgDomain.Swarm_cellShadowCount_get, _StgDomain.Swarm_cellShadowCount_set)
    cellPointTbl = _swig_property(_StgDomain.Swarm_cellPointTbl_get, _StgDomain.Swarm_cellPointTbl_set)
    cellPointCountTbl = _swig_property(_StgDomain.Swarm_cellPointCountTbl_get, _StgDomain.Swarm_cellPointCountTbl_set)
    cellParticleTbl = _swig_property(_StgDomain.Swarm_cellParticleTbl_get, _StgDomain.Swarm_cellParticleTbl_set)
    cellParticleCountTbl = _swig_property(_StgDomain.Swarm_cellParticleCountTbl_get, _StgDomain.Swarm_cellParticleCountTbl_set)
    cellParticleSizeTbl = _swig_property(_StgDomain.Swarm_cellParticleSizeTbl_get, _StgDomain.Swarm_cellParticleSizeTbl_set)
    cellParticleTblDelta = _swig_property(_StgDomain.Swarm_cellParticleTblDelta_get, _StgDomain.Swarm_cellParticleTblDelta_set)
    particles = _swig_property(_StgDomain.Swarm_particles_get, _StgDomain.Swarm_particles_set)
    particleSize = _swig_property(_StgDomain.Swarm_particleSize_get, _StgDomain.Swarm_particleSize_set)
    preReallocParticleSize = _swig_property(_StgDomain.Swarm_preReallocParticleSize_get, _StgDomain.Swarm_preReallocParticleSize_set)
    particleLocalCount = _swig_property(_StgDomain.Swarm_particleLocalCount_get, _StgDomain.Swarm_particleLocalCount_set)
    particlesArraySize = _swig_property(_StgDomain.Swarm_particlesArraySize_get, _StgDomain.Swarm_particlesArraySize_set)
    particlesArrayDelta = _swig_property(_StgDomain.Swarm_particlesArrayDelta_get, _StgDomain.Swarm_particlesArrayDelta_set)
    extraParticlesFactor = _swig_property(_StgDomain.Swarm_extraParticlesFactor_get, _StgDomain.Swarm_extraParticlesFactor_set)
    shadowTablesBuilt = _swig_property(_StgDomain.Swarm_shadowTablesBuilt_get, _StgDomain.Swarm_shadowTablesBuilt_set)
    shadowCellParticleTbl = _swig_property(_StgDomain.Swarm_shadowCellParticleTbl_get, _StgDomain.Swarm_shadowCellParticleTbl_set)
    shadowCellParticleCountTbl = _swig_property(_StgDomain.Swarm_shadowCellParticleCountTbl_get, _StgDomain.Swarm_shadowCellParticleCountTbl_set)
    shadowParticles = _swig_property(_StgDomain.Swarm_shadowParticles_get, _StgDomain.Swarm_shadowParticles_set)
    shadowParticleCount = _swig_property(_StgDomain.Swarm_shadowParticleCount_get, _StgDomain.Swarm_shadowParticleCount_set)
    swarmVariable_Register = _swig_property(_StgDomain.Swarm_swarmVariable_Register_get, _StgDomain.Swarm_swarmVariable_Register_set)
    owningCellVariable = _swig_property(_StgDomain.Swarm_owningCellVariable_get, _StgDomain.Swarm_owningCellVariable_set)
    globalIdVariable = _swig_property(_StgDomain.Swarm_globalIdVariable_get, _StgDomain.Swarm_globalIdVariable_set)
    gidExtHandle = _swig_property(_StgDomain.Swarm_gidExtHandle_get, _StgDomain.Swarm_gidExtHandle_set)
    particleExtensionMgr = _swig_property(_StgDomain.Swarm_particleExtensionMgr_get, _StgDomain.Swarm_particleExtensionMgr_set)
    commHandlerList = _swig_property(_StgDomain.Swarm_commHandlerList_get, _StgDomain.Swarm_commHandlerList_set)
    nSwarmVars = _swig_property(_StgDomain.Swarm_nSwarmVars_get, _StgDomain.Swarm_nSwarmVars_set)
    swarmVars = _swig_property(_StgDomain.Swarm_swarmVars_get, _StgDomain.Swarm_swarmVars_set)
    ics = _swig_property(_StgDomain.Swarm_ics_get, _StgDomain.Swarm_ics_set)
    swarmReg_I = _swig_property(_StgDomain.Swarm_swarmReg_I_get, _StgDomain.Swarm_swarmReg_I_set)
    incArray = _swig_property(_StgDomain.Swarm_incArray_get, _StgDomain.Swarm_incArray_set)
    expanding = _swig_property(_StgDomain.Swarm_expanding_get, _StgDomain.Swarm_expanding_set)
    isAdvecting = _swig_property(_StgDomain.Swarm_isAdvecting_get, _StgDomain.Swarm_isAdvecting_set)
    mirroredSwarm = _swig_property(_StgDomain.Swarm_mirroredSwarm_get, _StgDomain.Swarm_mirroredSwarm_set)
    allow_parallel_nn = _swig_property(_StgDomain.Swarm_allow_parallel_nn_get, _StgDomain.Swarm_allow_parallel_nn_set)

    def __init__(self):
        _StgDomain.Swarm_swiginit(self, _StgDomain.new_Swarm())
    __swig_destroy__ = _StgDomain.delete_Swarm
Swarm_swigregister = _StgDomain.Swarm_swigregister
Swarm_swigregister(Swarm)
Swarm_Type = cvar.Swarm_Type
DEFAULT_EXTRA_PARTICLES_FACTOR = cvar.DEFAULT_EXTRA_PARTICLES_FACTOR
MINIMUM_PARTICLES_ARRAY_DELTA = cvar.MINIMUM_PARTICLES_ARRAY_DELTA
DEFAULT_CELL_PARTICLE_TBL_DELTA = cvar.DEFAULT_CELL_PARTICLE_TBL_DELTA


def Swarm_New(name: 'Name', context: 'AbstractContext *', cellLayout: 'void *', particleLayout: 'void *', dim: 'Dimension_Index', particleSize: 'SizeT', extensionMgr_Register: 'ExtensionManager_Register *', variable_Register: 'Variable_Register *', comm: 'MPI_Comm', ics: 'void *') -> "Swarm *":
    return _StgDomain.Swarm_New(name, context, cellLayout, particleLayout, dim, particleSize, extensionMgr_Register, variable_Register, comm, ics)
Swarm_New = _StgDomain.Swarm_New

def _Swarm_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', particleSize: 'SizeT', ics: 'void *') -> "Swarm *":
    return _StgDomain._Swarm_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, particleSize, ics)
_Swarm_New = _StgDomain._Swarm_New

def _Swarm_Init(arg1: 'Swarm', context: 'AbstractContext *', cellLayout: 'void *', particleLayout: 'void *', dim: 'Dimension_Index', particleSize: 'SizeT', cellParticleTblDelta: 'Particle_InCellIndex', extraParticlesFactor: 'double', extensionMgr_Register: 'ExtensionManager_Register *', variable_Register: 'Variable_Register *', createGlobalIdVar: 'Bool', comm: 'MPI_Comm', ics: 'void *') -> "void":
    return _StgDomain._Swarm_Init(arg1, context, cellLayout, particleLayout, dim, particleSize, cellParticleTblDelta, extraParticlesFactor, extensionMgr_Register, variable_Register, createGlobalIdVar, comm, ics)
_Swarm_Init = _StgDomain._Swarm_Init

def _Swarm_ParticleInCellAt(swarm: 'void *', cell_I: 'Cell_Index', cParticle_I: 'Particle_InCellIndex') -> "void *":
    return _StgDomain._Swarm_ParticleInCellAt(swarm, cell_I, cParticle_I)
_Swarm_ParticleInCellAt = _StgDomain._Swarm_ParticleInCellAt

def _Swarm_ParticleAt(swarm: 'void *', dParticle_I: 'Particle_Index') -> "void *":
    return _StgDomain._Swarm_ParticleAt(swarm, dParticle_I)
_Swarm_ParticleAt = _StgDomain._Swarm_ParticleAt

def _Swarm_Delete(swarm: 'void *') -> "void":
    return _StgDomain._Swarm_Delete(swarm)
_Swarm_Delete = _StgDomain._Swarm_Delete

def _Swarm_Print(swarm: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._Swarm_Print(swarm, stream)
_Swarm_Print = _StgDomain._Swarm_Print

def _Swarm_Copy(swarm: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._Swarm_Copy(swarm, dest, deep, nameExt, ptrMap)
_Swarm_Copy = _StgDomain._Swarm_Copy

def _Swarm_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._Swarm_DefaultNew(name)
_Swarm_DefaultNew = _StgDomain._Swarm_DefaultNew

def _Swarm_AssignFromXML(swarm: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._Swarm_AssignFromXML(swarm, cf, data)
_Swarm_AssignFromXML = _StgDomain._Swarm_AssignFromXML

def _Swarm_Build(swarm: 'void *', data: 'void *') -> "void":
    return _StgDomain._Swarm_Build(swarm, data)
_Swarm_Build = _StgDomain._Swarm_Build

def _Swarm_Initialise(swarm: 'void *', data: 'void *') -> "void":
    return _StgDomain._Swarm_Initialise(swarm, data)
_Swarm_Initialise = _StgDomain._Swarm_Initialise

def _Swarm_Execute(swarm: 'void *', data: 'void *') -> "void":
    return _StgDomain._Swarm_Execute(swarm, data)
_Swarm_Execute = _StgDomain._Swarm_Execute

def _Swarm_Destroy(swarm: 'void *', data: 'void *') -> "void":
    return _StgDomain._Swarm_Destroy(swarm, data)
_Swarm_Destroy = _StgDomain._Swarm_Destroy

def Swarm_UpdateAllParticleOwners(swarm: 'void *') -> "void":
    return _StgDomain.Swarm_UpdateAllParticleOwners(swarm)
Swarm_UpdateAllParticleOwners = _StgDomain.Swarm_UpdateAllParticleOwners

def Swarm_UpdateParticleOwner(swarm: 'void *', particle_I: 'Particle_Index') -> "void":
    return _StgDomain.Swarm_UpdateParticleOwner(swarm, particle_I)
Swarm_UpdateParticleOwner = _StgDomain.Swarm_UpdateParticleOwner

def Swarm_RemoveParticleFromCell(swarm: 'void *', dCell_I: 'Cell_DomainIndex', cParticle_I: 'Particle_InCellIndex') -> "void":
    return _StgDomain.Swarm_RemoveParticleFromCell(swarm, dCell_I, cParticle_I)
Swarm_RemoveParticleFromCell = _StgDomain.Swarm_RemoveParticleFromCell

def Swarm_DeleteParticle(swarm: 'void *', lParticle_I: 'Particle_Index') -> "void":
    return _StgDomain.Swarm_DeleteParticle(swarm, lParticle_I)
Swarm_DeleteParticle = _StgDomain.Swarm_DeleteParticle

def Swarm_DeleteParticleAndReplaceWithNew(swarm: 'void *', particleToDelete_lI: 'Particle_Index', replacementParticle: 'void *', replacementParticle_cellIndex: 'Cell_Index') -> "void":
    return _StgDomain.Swarm_DeleteParticleAndReplaceWithNew(swarm, particleToDelete_lI, replacementParticle, replacementParticle_cellIndex)
Swarm_DeleteParticleAndReplaceWithNew = _StgDomain.Swarm_DeleteParticleAndReplaceWithNew

def Swarm_AddParticleToCell(swarm: 'void *', dCell_I: 'Cell_DomainIndex', particle_I: 'Particle_Index') -> "void":
    return _StgDomain.Swarm_AddParticleToCell(swarm, dCell_I, particle_I)
Swarm_AddParticleToCell = _StgDomain.Swarm_AddParticleToCell

def Swarm_AddShadowParticleToShadowCell(swarm: 'void *', dCell_I: 'Cell_DomainIndex', shadowParticle_I: 'Particle_Index') -> "void":
    return _StgDomain.Swarm_AddShadowParticleToShadowCell(swarm, dCell_I, shadowParticle_I)
Swarm_AddShadowParticleToShadowCell = _StgDomain.Swarm_AddShadowParticleToShadowCell

def Swarm_GetParticleIndexWithinCell(swarm: 'void *', owningCell: 'Cell_DomainIndex', particle_I: 'Particle_Index') -> "Particle_InCellIndex":
    return _StgDomain.Swarm_GetParticleIndexWithinCell(swarm, owningCell, particle_I)
Swarm_GetParticleIndexWithinCell = _StgDomain.Swarm_GetParticleIndexWithinCell

def Swarm_FindClosestParticle(_swarm: 'void *', dim: 'Dimension_Index', coord: 'double *', distance: 'double *') -> "Particle_Index":
    return _StgDomain.Swarm_FindClosestParticle(_swarm, dim, coord, distance)
Swarm_FindClosestParticle = _StgDomain.Swarm_FindClosestParticle

def Swarm_FindClosestParticleInCell(_swarm: 'void *', dCell_I: 'Cell_DomainIndex', dim: 'Dimension_Index', coord: 'double *', distance: 'double *') -> "Particle_InCellIndex":
    return _StgDomain.Swarm_FindClosestParticleInCell(_swarm, dCell_I, dim, coord, distance)
Swarm_FindClosestParticleInCell = _StgDomain.Swarm_FindClosestParticleInCell

def Swarm_PrintParticleCoords(swarm: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain.Swarm_PrintParticleCoords(swarm, stream)
Swarm_PrintParticleCoords = _StgDomain.Swarm_PrintParticleCoords

def Swarm_PrintParticleCoords_ByCell(swarm: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain.Swarm_PrintParticleCoords_ByCell(swarm, stream)
Swarm_PrintParticleCoords_ByCell = _StgDomain.Swarm_PrintParticleCoords_ByCell

def Swarm_GetCellMinMaxCoords(swarm: 'void *', cell_I: 'Cell_DomainIndex', min: 'Coord', max: 'Coord') -> "void":
    return _StgDomain.Swarm_GetCellMinMaxCoords(swarm, cell_I, min, max)
Swarm_GetCellMinMaxCoords = _StgDomain.Swarm_GetCellMinMaxCoords

def Swarm_NewScalarVariable(swarm: 'void *', nameExt: 'Name', dataOffset: 'int', dataType: 'StgVariable_DataType') -> "SwarmVariable *":
    return _StgDomain.Swarm_NewScalarVariable(swarm, nameExt, dataOffset, dataType)
Swarm_NewScalarVariable = _StgDomain.Swarm_NewScalarVariable

def Swarm_NewVectorVariable(_swarm: 'void *', nameExt: 'Name', dataOffset: 'int', dataType: 'StgVariable_DataType', dataTypeCount: 'Index') -> "SwarmVariable *":
    return _StgDomain.Swarm_NewVectorVariable(_swarm, nameExt, dataOffset, dataType, dataTypeCount)
Swarm_NewVectorVariable = _StgDomain.Swarm_NewVectorVariable

def Swarm_Realloc(swarm: 'void *') -> "void":
    return _StgDomain.Swarm_Realloc(swarm)
Swarm_Realloc = _StgDomain.Swarm_Realloc

def Swarm_CheckCoordsAreFinite(swarm: 'void *') -> "void":
    return _StgDomain.Swarm_CheckCoordsAreFinite(swarm)
Swarm_CheckCoordsAreFinite = _StgDomain.Swarm_CheckCoordsAreFinite

def Swarm_AssignIndexWithinShape(swarm: 'void *', _shape: 'void *', variableToAssign: '_StgVariable', indexToAssign: 'Index') -> "void":
    return _StgDomain.Swarm_AssignIndexWithinShape(swarm, _shape, variableToAssign, indexToAssign)
Swarm_AssignIndexWithinShape = _StgDomain.Swarm_AssignIndexWithinShape

def _Swarm_BuildCells(swarm: 'void *', data: 'void *') -> "void":
    return _StgDomain._Swarm_BuildCells(swarm, data)
_Swarm_BuildCells = _StgDomain._Swarm_BuildCells

def _Swarm_BuildParticles(swarm: 'void *', data: 'void *') -> "void":
    return _StgDomain._Swarm_BuildParticles(swarm, data)
_Swarm_BuildParticles = _StgDomain._Swarm_BuildParticles

def _Swarm_BuildShadowParticles(swarm: 'void *') -> "void":
    return _StgDomain._Swarm_BuildShadowParticles(swarm)
_Swarm_BuildShadowParticles = _StgDomain._Swarm_BuildShadowParticles

def _Swarm_InitialiseCells(swarm: 'void *', data: 'void *') -> "void":
    return _StgDomain._Swarm_InitialiseCells(swarm, data)
_Swarm_InitialiseCells = _StgDomain._Swarm_InitialiseCells

def _Swarm_InitialiseParticles(swarm: 'void *', data: 'void *') -> "void":
    return _StgDomain._Swarm_InitialiseParticles(swarm, data)
_Swarm_InitialiseParticles = _StgDomain._Swarm_InitialiseParticles

def Swarm_CreateNewParticle(swarm: 'void *', newParticle_I: 'Particle_Index *') -> "StandardParticle *":
    return _StgDomain.Swarm_CreateNewParticle(swarm, newParticle_I)
Swarm_CreateNewParticle = _StgDomain.Swarm_CreateNewParticle

def Swarm_AddCommHandler(arg1: 'Swarm', commHandler: 'void *') -> "Bool":
    return _StgDomain.Swarm_AddCommHandler(arg1, commHandler)
Swarm_AddCommHandler = _StgDomain.Swarm_AddCommHandler

def Swarm_AddVariable(arg1: 'Swarm', swarmVar: 'SwarmVariable') -> "void":
    return _StgDomain.Swarm_AddVariable(arg1, swarmVar)
Swarm_AddVariable = _StgDomain.Swarm_AddVariable

def Swarm_GetShadowVariable(_swarm: 'void *', variable: '_StgVariable') -> "StgVariable *":
    return _StgDomain.Swarm_GetShadowVariable(_swarm, variable)
Swarm_GetShadowVariable = _StgDomain.Swarm_GetShadowVariable
LocalCoordSystem = _StgDomain.LocalCoordSystem
GlobalCoordSystem = _StgDomain.GlobalCoordSystem
class GaussParticleLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.GaussParticleLayout__sizeOfSelf_get, _StgDomain.GaussParticleLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.GaussParticleLayout__deleteSelf_get, _StgDomain.GaussParticleLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.GaussParticleLayout_type_get, _StgDomain.GaussParticleLayout_type_set)
    nRefs = _swig_property(_StgDomain.GaussParticleLayout_nRefs_get, _StgDomain.GaussParticleLayout_nRefs_set)
    locked = _swig_property(_StgDomain.GaussParticleLayout_locked_get, _StgDomain.GaussParticleLayout_locked_set)
    _delete = _swig_property(_StgDomain.GaussParticleLayout__delete_get, _StgDomain.GaussParticleLayout__delete_set)
    _print = _swig_property(_StgDomain.GaussParticleLayout__print_get, _StgDomain.GaussParticleLayout__print_set)
    _copy = _swig_property(_StgDomain.GaussParticleLayout__copy_get, _StgDomain.GaussParticleLayout__copy_set)
    name = _swig_property(_StgDomain.GaussParticleLayout_name_get, _StgDomain.GaussParticleLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.GaussParticleLayout_nameAllocationType_get, _StgDomain.GaussParticleLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.GaussParticleLayout__defaultConstructor_get, _StgDomain.GaussParticleLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.GaussParticleLayout__construct_get, _StgDomain.GaussParticleLayout__construct_set)
    _build = _swig_property(_StgDomain.GaussParticleLayout__build_get, _StgDomain.GaussParticleLayout__build_set)
    _initialise = _swig_property(_StgDomain.GaussParticleLayout__initialise_get, _StgDomain.GaussParticleLayout__initialise_set)
    _execute = _swig_property(_StgDomain.GaussParticleLayout__execute_get, _StgDomain.GaussParticleLayout__execute_set)
    _destroy = _swig_property(_StgDomain.GaussParticleLayout__destroy_get, _StgDomain.GaussParticleLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.GaussParticleLayout_isConstructed_get, _StgDomain.GaussParticleLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.GaussParticleLayout_isBuilt_get, _StgDomain.GaussParticleLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.GaussParticleLayout_isInitialised_get, _StgDomain.GaussParticleLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.GaussParticleLayout_hasExecuted_get, _StgDomain.GaussParticleLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.GaussParticleLayout_isDestroyed_get, _StgDomain.GaussParticleLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.GaussParticleLayout_constructType_get, _StgDomain.GaussParticleLayout_constructType_set)
    buildType = _swig_property(_StgDomain.GaussParticleLayout_buildType_get, _StgDomain.GaussParticleLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.GaussParticleLayout_initialiseType_get, _StgDomain.GaussParticleLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.GaussParticleLayout_executeType_get, _StgDomain.GaussParticleLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.GaussParticleLayout_destroyType_get, _StgDomain.GaussParticleLayout_destroyType_set)
    context = _swig_property(_StgDomain.GaussParticleLayout_context_get, _StgDomain.GaussParticleLayout_context_set)
    _setInitialCounts = _swig_property(_StgDomain.GaussParticleLayout__setInitialCounts_get, _StgDomain.GaussParticleLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgDomain.GaussParticleLayout__initialiseParticles_get, _StgDomain.GaussParticleLayout__initialiseParticles_set)
    debug = _swig_property(_StgDomain.GaussParticleLayout_debug_get, _StgDomain.GaussParticleLayout_debug_set)
    coordSystem = _swig_property(_StgDomain.GaussParticleLayout_coordSystem_get, _StgDomain.GaussParticleLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgDomain.GaussParticleLayout_weightsInitialisedAtStartup_get, _StgDomain.GaussParticleLayout_weightsInitialisedAtStartup_set)
    _initialCount = _swig_property(_StgDomain.GaussParticleLayout__initialCount_get, _StgDomain.GaussParticleLayout__initialCount_set)
    _initialiseParticlesOfCell = _swig_property(_StgDomain.GaussParticleLayout__initialiseParticlesOfCell_get, _StgDomain.GaussParticleLayout__initialiseParticlesOfCell_set)
    dim = _swig_property(_StgDomain.GaussParticleLayout_dim_get, _StgDomain.GaussParticleLayout_dim_set)
    particlesPerDim = _swig_property(_StgDomain.GaussParticleLayout_particlesPerDim_get, _StgDomain.GaussParticleLayout_particlesPerDim_set)

    def __init__(self):
        _StgDomain.GaussParticleLayout_swiginit(self, _StgDomain.new_GaussParticleLayout())
    __swig_destroy__ = _StgDomain.delete_GaussParticleLayout
GaussParticleLayout_swigregister = _StgDomain.GaussParticleLayout_swigregister
GaussParticleLayout_swigregister(GaussParticleLayout)
GaussParticleLayout_Type = cvar.GaussParticleLayout_Type


def GaussParticleLayout_New(name: 'Name', context: 'AbstractContext *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', dim: 'Dimension_Index', particlesPerDim: 'Particle_InCellIndex *') -> "GaussParticleLayout *":
    return _StgDomain.GaussParticleLayout_New(name, context, coordSystem, weightsInitialisedAtStartup, dim, particlesPerDim)
GaussParticleLayout_New = _StgDomain.GaussParticleLayout_New

def _GaussParticleLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', _initialCount: 'PerCellParticleLayout_InitialCountFunction *', _initialiseParticlesOfCell: 'PerCellParticleLayout_InitialiseParticlesOfCellFunction *', dim: 'Dimension_Index', particlesPerDim: 'Particle_InCellIndex *') -> "GaussParticleLayout *":
    return _StgDomain._GaussParticleLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup, _initialCount, _initialiseParticlesOfCell, dim, particlesPerDim)
_GaussParticleLayout_New = _StgDomain._GaussParticleLayout_New

def _GaussParticleLayout_Init(gaussParticleLayout: 'void *', dim: 'Dimension_Index', particlesPerDim: 'Particle_InCellIndex *') -> "void":
    return _StgDomain._GaussParticleLayout_Init(gaussParticleLayout, dim, particlesPerDim)
_GaussParticleLayout_Init = _StgDomain._GaussParticleLayout_Init

def _GaussParticleLayout_Delete(gaussParticleLayout: 'void *') -> "void":
    return _StgDomain._GaussParticleLayout_Delete(gaussParticleLayout)
_GaussParticleLayout_Delete = _StgDomain._GaussParticleLayout_Delete

def _GaussParticleLayout_Print(gaussParticleLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._GaussParticleLayout_Print(gaussParticleLayout, stream)
_GaussParticleLayout_Print = _StgDomain._GaussParticleLayout_Print

def _GaussParticleLayout_Copy(gaussParticleLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._GaussParticleLayout_Copy(gaussParticleLayout, dest, deep, nameExt, ptrMap)
_GaussParticleLayout_Copy = _StgDomain._GaussParticleLayout_Copy

def _GaussParticleLayout_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._GaussParticleLayout_DefaultNew(name)
_GaussParticleLayout_DefaultNew = _StgDomain._GaussParticleLayout_DefaultNew

def _GaussParticleLayout_AssignFromXML(gaussParticleLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._GaussParticleLayout_AssignFromXML(gaussParticleLayout, cf, data)
_GaussParticleLayout_AssignFromXML = _StgDomain._GaussParticleLayout_AssignFromXML

def _GaussParticleLayout_Build(gaussParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GaussParticleLayout_Build(gaussParticleLayout, data)
_GaussParticleLayout_Build = _StgDomain._GaussParticleLayout_Build

def _GaussParticleLayout_Initialise(gaussParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GaussParticleLayout_Initialise(gaussParticleLayout, data)
_GaussParticleLayout_Initialise = _StgDomain._GaussParticleLayout_Initialise

def _GaussParticleLayout_Execute(gaussParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GaussParticleLayout_Execute(gaussParticleLayout, data)
_GaussParticleLayout_Execute = _StgDomain._GaussParticleLayout_Execute

def _GaussParticleLayout_Destroy(gaussParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GaussParticleLayout_Destroy(gaussParticleLayout, data)
_GaussParticleLayout_Destroy = _StgDomain._GaussParticleLayout_Destroy

def _GaussParticleLayout_InitialCount(gaussParticleLayout: 'void *', celllayout: 'void *', cell_I: 'Cell_Index') -> "Particle_InCellIndex":
    return _StgDomain._GaussParticleLayout_InitialCount(gaussParticleLayout, celllayout, cell_I)
_GaussParticleLayout_InitialCount = _StgDomain._GaussParticleLayout_InitialCount

def _GaussParticleLayout_InitialiseParticlesOfCell(gaussParticleLayout: 'void *', swarm: 'void *', cell_I: 'Cell_Index') -> "void":
    return _StgDomain._GaussParticleLayout_InitialiseParticlesOfCell(gaussParticleLayout, swarm, cell_I)
_GaussParticleLayout_InitialiseParticlesOfCell = _StgDomain._GaussParticleLayout_InitialiseParticlesOfCell

def GaussParticleLayout_GetAbscissaAndWeights1D(weight: 'double *', abscissa: 'double *', pointCount: 'Index') -> "void":
    return _StgDomain.GaussParticleLayout_GetAbscissaAndWeights1D(weight, abscissa, pointCount)
GaussParticleLayout_GetAbscissaAndWeights1D = _StgDomain.GaussParticleLayout_GetAbscissaAndWeights1D
class GaussBorderParticleLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.GaussBorderParticleLayout__sizeOfSelf_get, _StgDomain.GaussBorderParticleLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.GaussBorderParticleLayout__deleteSelf_get, _StgDomain.GaussBorderParticleLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.GaussBorderParticleLayout_type_get, _StgDomain.GaussBorderParticleLayout_type_set)
    nRefs = _swig_property(_StgDomain.GaussBorderParticleLayout_nRefs_get, _StgDomain.GaussBorderParticleLayout_nRefs_set)
    locked = _swig_property(_StgDomain.GaussBorderParticleLayout_locked_get, _StgDomain.GaussBorderParticleLayout_locked_set)
    _delete = _swig_property(_StgDomain.GaussBorderParticleLayout__delete_get, _StgDomain.GaussBorderParticleLayout__delete_set)
    _print = _swig_property(_StgDomain.GaussBorderParticleLayout__print_get, _StgDomain.GaussBorderParticleLayout__print_set)
    _copy = _swig_property(_StgDomain.GaussBorderParticleLayout__copy_get, _StgDomain.GaussBorderParticleLayout__copy_set)
    name = _swig_property(_StgDomain.GaussBorderParticleLayout_name_get, _StgDomain.GaussBorderParticleLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.GaussBorderParticleLayout_nameAllocationType_get, _StgDomain.GaussBorderParticleLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.GaussBorderParticleLayout__defaultConstructor_get, _StgDomain.GaussBorderParticleLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.GaussBorderParticleLayout__construct_get, _StgDomain.GaussBorderParticleLayout__construct_set)
    _build = _swig_property(_StgDomain.GaussBorderParticleLayout__build_get, _StgDomain.GaussBorderParticleLayout__build_set)
    _initialise = _swig_property(_StgDomain.GaussBorderParticleLayout__initialise_get, _StgDomain.GaussBorderParticleLayout__initialise_set)
    _execute = _swig_property(_StgDomain.GaussBorderParticleLayout__execute_get, _StgDomain.GaussBorderParticleLayout__execute_set)
    _destroy = _swig_property(_StgDomain.GaussBorderParticleLayout__destroy_get, _StgDomain.GaussBorderParticleLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.GaussBorderParticleLayout_isConstructed_get, _StgDomain.GaussBorderParticleLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.GaussBorderParticleLayout_isBuilt_get, _StgDomain.GaussBorderParticleLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.GaussBorderParticleLayout_isInitialised_get, _StgDomain.GaussBorderParticleLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.GaussBorderParticleLayout_hasExecuted_get, _StgDomain.GaussBorderParticleLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.GaussBorderParticleLayout_isDestroyed_get, _StgDomain.GaussBorderParticleLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.GaussBorderParticleLayout_constructType_get, _StgDomain.GaussBorderParticleLayout_constructType_set)
    buildType = _swig_property(_StgDomain.GaussBorderParticleLayout_buildType_get, _StgDomain.GaussBorderParticleLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.GaussBorderParticleLayout_initialiseType_get, _StgDomain.GaussBorderParticleLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.GaussBorderParticleLayout_executeType_get, _StgDomain.GaussBorderParticleLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.GaussBorderParticleLayout_destroyType_get, _StgDomain.GaussBorderParticleLayout_destroyType_set)
    context = _swig_property(_StgDomain.GaussBorderParticleLayout_context_get, _StgDomain.GaussBorderParticleLayout_context_set)
    _setInitialCounts = _swig_property(_StgDomain.GaussBorderParticleLayout__setInitialCounts_get, _StgDomain.GaussBorderParticleLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgDomain.GaussBorderParticleLayout__initialiseParticles_get, _StgDomain.GaussBorderParticleLayout__initialiseParticles_set)
    debug = _swig_property(_StgDomain.GaussBorderParticleLayout_debug_get, _StgDomain.GaussBorderParticleLayout_debug_set)
    coordSystem = _swig_property(_StgDomain.GaussBorderParticleLayout_coordSystem_get, _StgDomain.GaussBorderParticleLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgDomain.GaussBorderParticleLayout_weightsInitialisedAtStartup_get, _StgDomain.GaussBorderParticleLayout_weightsInitialisedAtStartup_set)
    _initialCount = _swig_property(_StgDomain.GaussBorderParticleLayout__initialCount_get, _StgDomain.GaussBorderParticleLayout__initialCount_set)
    _initialiseParticlesOfCell = _swig_property(_StgDomain.GaussBorderParticleLayout__initialiseParticlesOfCell_get, _StgDomain.GaussBorderParticleLayout__initialiseParticlesOfCell_set)
    dim = _swig_property(_StgDomain.GaussBorderParticleLayout_dim_get, _StgDomain.GaussBorderParticleLayout_dim_set)
    particlesPerDim = _swig_property(_StgDomain.GaussBorderParticleLayout_particlesPerDim_get, _StgDomain.GaussBorderParticleLayout_particlesPerDim_set)
    particlesPerFace = _swig_property(_StgDomain.GaussBorderParticleLayout_particlesPerFace_get, _StgDomain.GaussBorderParticleLayout_particlesPerFace_set)

    def __init__(self):
        _StgDomain.GaussBorderParticleLayout_swiginit(self, _StgDomain.new_GaussBorderParticleLayout())
    __swig_destroy__ = _StgDomain.delete_GaussBorderParticleLayout
GaussBorderParticleLayout_swigregister = _StgDomain.GaussBorderParticleLayout_swigregister
GaussBorderParticleLayout_swigregister(GaussBorderParticleLayout)
GaussBorderParticleLayout_Type = cvar.GaussBorderParticleLayout_Type


def GaussBorderParticleLayout_New(name: 'Name', context: 'AbstractContext *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', dim: 'Dimension_Index', particlesPerDim: 'Particle_InCellIndex *') -> "GaussBorderParticleLayout *":
    return _StgDomain.GaussBorderParticleLayout_New(name, context, coordSystem, weightsInitialisedAtStartup, dim, particlesPerDim)
GaussBorderParticleLayout_New = _StgDomain.GaussBorderParticleLayout_New

def _GaussBorderParticleLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', _initialCount: 'PerCellParticleLayout_InitialCountFunction *', _initialiseParticlesOfCell: 'PerCellParticleLayout_InitialiseParticlesOfCellFunction *', dim: 'Dimension_Index', particlesPerDim: 'Particle_InCellIndex *') -> "GaussBorderParticleLayout *":
    return _StgDomain._GaussBorderParticleLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup, _initialCount, _initialiseParticlesOfCell, dim, particlesPerDim)
_GaussBorderParticleLayout_New = _StgDomain._GaussBorderParticleLayout_New

def _GaussBorderParticleLayout_Init(gaussBorderParticleLayout: 'void *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_Init(gaussBorderParticleLayout)
_GaussBorderParticleLayout_Init = _StgDomain._GaussBorderParticleLayout_Init

def _GaussBorderParticleLayout_Delete(gaussBorderParticleLayout: 'void *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_Delete(gaussBorderParticleLayout)
_GaussBorderParticleLayout_Delete = _StgDomain._GaussBorderParticleLayout_Delete

def _GaussBorderParticleLayout_Print(gaussBorderParticleLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_Print(gaussBorderParticleLayout, stream)
_GaussBorderParticleLayout_Print = _StgDomain._GaussBorderParticleLayout_Print

def _GaussBorderParticleLayout_Copy(gaussBorderParticleLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._GaussBorderParticleLayout_Copy(gaussBorderParticleLayout, dest, deep, nameExt, ptrMap)
_GaussBorderParticleLayout_Copy = _StgDomain._GaussBorderParticleLayout_Copy

def _GaussBorderParticleLayout_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._GaussBorderParticleLayout_DefaultNew(name)
_GaussBorderParticleLayout_DefaultNew = _StgDomain._GaussBorderParticleLayout_DefaultNew

def _GaussBorderParticleLayout_AssignFromXML(gaussBorderParticleLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_AssignFromXML(gaussBorderParticleLayout, cf, data)
_GaussBorderParticleLayout_AssignFromXML = _StgDomain._GaussBorderParticleLayout_AssignFromXML

def _GaussBorderParticleLayout_Build(gaussBorderParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_Build(gaussBorderParticleLayout, data)
_GaussBorderParticleLayout_Build = _StgDomain._GaussBorderParticleLayout_Build

def _GaussBorderParticleLayout_Initialise(gaussBorderParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_Initialise(gaussBorderParticleLayout, data)
_GaussBorderParticleLayout_Initialise = _StgDomain._GaussBorderParticleLayout_Initialise

def _GaussBorderParticleLayout_Execute(gaussBorderParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_Execute(gaussBorderParticleLayout, data)
_GaussBorderParticleLayout_Execute = _StgDomain._GaussBorderParticleLayout_Execute

def _GaussBorderParticleLayout_Destroy(gaussBorderParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_Destroy(gaussBorderParticleLayout, data)
_GaussBorderParticleLayout_Destroy = _StgDomain._GaussBorderParticleLayout_Destroy

def _GaussBorderParticleLayout_InitialCount(gaussBorderParticleLayout: 'void *', celllayout: 'void *', cell_I: 'Cell_Index') -> "Particle_InCellIndex":
    return _StgDomain._GaussBorderParticleLayout_InitialCount(gaussBorderParticleLayout, celllayout, cell_I)
_GaussBorderParticleLayout_InitialCount = _StgDomain._GaussBorderParticleLayout_InitialCount

def _GaussBorderParticleLayout_InitialiseParticlesOfCell(gaussBorderParticleLayout: 'void *', swarm: 'void *', cell_I: 'Cell_Index') -> "void":
    return _StgDomain._GaussBorderParticleLayout_InitialiseParticlesOfCell(gaussBorderParticleLayout, swarm, cell_I)
_GaussBorderParticleLayout_InitialiseParticlesOfCell = _StgDomain._GaussBorderParticleLayout_InitialiseParticlesOfCell

def GaussBorderParticleLayout_GetFaceAxis(gaussBorderParticleLayout: 'void *', face_I: 'Index', axis: 'Dimension_Index') -> "Dimension_Index":
    return _StgDomain.GaussBorderParticleLayout_GetFaceAxis(gaussBorderParticleLayout, face_I, axis)
GaussBorderParticleLayout_GetFaceAxis = _StgDomain.GaussBorderParticleLayout_GetFaceAxis

def GaussBorderParticleLayout_ParticleInCellIndexToFaceIndex(gaussBorderParticleLayout: 'void *', cParticle_I: 'Particle_InCellIndex') -> "Index":
    return _StgDomain.GaussBorderParticleLayout_ParticleInCellIndexToFaceIndex(gaussBorderParticleLayout, cParticle_I)
GaussBorderParticleLayout_ParticleInCellIndexToFaceIndex = _StgDomain.GaussBorderParticleLayout_ParticleInCellIndexToFaceIndex

def _GaussBorderParticleLayout_InitialiseParticlesPerFace(arg1: 'GaussBorderParticleLayout *') -> "void":
    return _StgDomain._GaussBorderParticleLayout_InitialiseParticlesPerFace(arg1)
_GaussBorderParticleLayout_InitialiseParticlesPerFace = _StgDomain._GaussBorderParticleLayout_InitialiseParticlesPerFace
OTHER_PROC = _StgDomain.OTHER_PROC
LOCAL = _StgDomain.LOCAL
SHADOW = _StgDomain.SHADOW
OUTSIDE_GLOBAL = _StgDomain.OUTSIDE_GLOBAL
class FieldVariable(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.FieldVariable__sizeOfSelf_get, _StgDomain.FieldVariable__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.FieldVariable__deleteSelf_get, _StgDomain.FieldVariable__deleteSelf_set)
    type = _swig_property(_StgDomain.FieldVariable_type_get, _StgDomain.FieldVariable_type_set)
    nRefs = _swig_property(_StgDomain.FieldVariable_nRefs_get, _StgDomain.FieldVariable_nRefs_set)
    locked = _swig_property(_StgDomain.FieldVariable_locked_get, _StgDomain.FieldVariable_locked_set)
    _delete = _swig_property(_StgDomain.FieldVariable__delete_get, _StgDomain.FieldVariable__delete_set)
    _print = _swig_property(_StgDomain.FieldVariable__print_get, _StgDomain.FieldVariable__print_set)
    _copy = _swig_property(_StgDomain.FieldVariable__copy_get, _StgDomain.FieldVariable__copy_set)
    name = _swig_property(_StgDomain.FieldVariable_name_get, _StgDomain.FieldVariable_name_set)
    nameAllocationType = _swig_property(_StgDomain.FieldVariable_nameAllocationType_get, _StgDomain.FieldVariable_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.FieldVariable__defaultConstructor_get, _StgDomain.FieldVariable__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.FieldVariable__construct_get, _StgDomain.FieldVariable__construct_set)
    _build = _swig_property(_StgDomain.FieldVariable__build_get, _StgDomain.FieldVariable__build_set)
    _initialise = _swig_property(_StgDomain.FieldVariable__initialise_get, _StgDomain.FieldVariable__initialise_set)
    _execute = _swig_property(_StgDomain.FieldVariable__execute_get, _StgDomain.FieldVariable__execute_set)
    _destroy = _swig_property(_StgDomain.FieldVariable__destroy_get, _StgDomain.FieldVariable__destroy_set)
    isConstructed = _swig_property(_StgDomain.FieldVariable_isConstructed_get, _StgDomain.FieldVariable_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.FieldVariable_isBuilt_get, _StgDomain.FieldVariable_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.FieldVariable_isInitialised_get, _StgDomain.FieldVariable_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.FieldVariable_hasExecuted_get, _StgDomain.FieldVariable_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.FieldVariable_isDestroyed_get, _StgDomain.FieldVariable_isDestroyed_set)
    constructType = _swig_property(_StgDomain.FieldVariable_constructType_get, _StgDomain.FieldVariable_constructType_set)
    buildType = _swig_property(_StgDomain.FieldVariable_buildType_get, _StgDomain.FieldVariable_buildType_set)
    initialiseType = _swig_property(_StgDomain.FieldVariable_initialiseType_get, _StgDomain.FieldVariable_initialiseType_set)
    executeType = _swig_property(_StgDomain.FieldVariable_executeType_get, _StgDomain.FieldVariable_executeType_set)
    destroyType = _swig_property(_StgDomain.FieldVariable_destroyType_get, _StgDomain.FieldVariable_destroyType_set)
    context = _swig_property(_StgDomain.FieldVariable_context_get, _StgDomain.FieldVariable_context_set)
    _interpolateValueAt = _swig_property(_StgDomain.FieldVariable__interpolateValueAt_get, _StgDomain.FieldVariable__interpolateValueAt_set)
    _getMinGlobalFieldMagnitude = _swig_property(_StgDomain.FieldVariable__getMinGlobalFieldMagnitude_get, _StgDomain.FieldVariable__getMinGlobalFieldMagnitude_set)
    _getMaxGlobalFieldMagnitude = _swig_property(_StgDomain.FieldVariable__getMaxGlobalFieldMagnitude_get, _StgDomain.FieldVariable__getMaxGlobalFieldMagnitude_set)
    _cacheMinMaxGlobalFieldMagnitude = _swig_property(_StgDomain.FieldVariable__cacheMinMaxGlobalFieldMagnitude_get, _StgDomain.FieldVariable__cacheMinMaxGlobalFieldMagnitude_set)
    _getMinAndMaxLocalCoords = _swig_property(_StgDomain.FieldVariable__getMinAndMaxLocalCoords_get, _StgDomain.FieldVariable__getMinAndMaxLocalCoords_set)
    _getMinAndMaxGlobalCoords = _swig_property(_StgDomain.FieldVariable__getMinAndMaxGlobalCoords_get, _StgDomain.FieldVariable__getMinAndMaxGlobalCoords_set)
    extensionMgr = _swig_property(_StgDomain.FieldVariable_extensionMgr_get, _StgDomain.FieldVariable_extensionMgr_set)
    fieldComponentCount = _swig_property(_StgDomain.FieldVariable_fieldComponentCount_get, _StgDomain.FieldVariable_fieldComponentCount_set)
    dim = _swig_property(_StgDomain.FieldVariable_dim_get, _StgDomain.FieldVariable_dim_set)
    communicator = _swig_property(_StgDomain.FieldVariable_communicator_get, _StgDomain.FieldVariable_communicator_set)
    fieldVariable_Register = _swig_property(_StgDomain.FieldVariable_fieldVariable_Register_get, _StgDomain.FieldVariable_fieldVariable_Register_set)
    isSavedData = _swig_property(_StgDomain.FieldVariable_isSavedData_get, _StgDomain.FieldVariable_isSavedData_set)
    cachedTimestep = _swig_property(_StgDomain.FieldVariable_cachedTimestep_get, _StgDomain.FieldVariable_cachedTimestep_set)
    magnitudeMin = _swig_property(_StgDomain.FieldVariable_magnitudeMin_get, _StgDomain.FieldVariable_magnitudeMin_set)
    magnitudeMax = _swig_property(_StgDomain.FieldVariable_magnitudeMax_get, _StgDomain.FieldVariable_magnitudeMax_set)
    o_units = _swig_property(_StgDomain.FieldVariable_o_units_get, _StgDomain.FieldVariable_o_units_set)
    useCacheMaxMin = _swig_property(_StgDomain.FieldVariable_useCacheMaxMin_get, _StgDomain.FieldVariable_useCacheMaxMin_set)

    def __init__(self):
        _StgDomain.FieldVariable_swiginit(self, _StgDomain.new_FieldVariable())
    __swig_destroy__ = _StgDomain.delete_FieldVariable
FieldVariable_swigregister = _StgDomain.FieldVariable_swigregister
FieldVariable_swigregister(FieldVariable)
FieldVariable_Type = cvar.FieldVariable_Type


def _FieldVariable_DefaultNew(name: 'Name') -> "FieldVariable *":
    return _StgDomain._FieldVariable_DefaultNew(name)
_FieldVariable_DefaultNew = _StgDomain._FieldVariable_DefaultNew

def FieldVariable_New(name: 'Name', context: 'DomainContext *', fieldComponentCount: 'Index', dim: 'Dimension_Index', communicator: 'MPI_Comm', fieldVariable_Register: 'FieldVariable_Register *') -> "FieldVariable *":
    return _StgDomain.FieldVariable_New(name, context, fieldComponentCount, dim, communicator, fieldVariable_Register)
FieldVariable_New = _StgDomain.FieldVariable_New

def _FieldVariable_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _interpolateValueAt: 'FieldVariable_InterpolateValueAtFunction *', _getMinGlobalFieldMagnitude: 'FieldVariable_GetValueFunction *', _getMaxGlobalFieldMagnitude: 'FieldVariable_GetValueFunction *', _cacheMinMaxGlobalFieldMagnitude: 'FieldVariable_CacheValuesFunction *', _getMinAndMaxLocalCoords: 'FieldVariable_GetCoordFunction *', _getMinAndMaxGlobalCoords: 'FieldVariable_GetCoordFunction *') -> "FieldVariable *":
    return _StgDomain._FieldVariable_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _interpolateValueAt, _getMinGlobalFieldMagnitude, _getMaxGlobalFieldMagnitude, _cacheMinMaxGlobalFieldMagnitude, _getMinAndMaxLocalCoords, _getMinAndMaxGlobalCoords)
_FieldVariable_New = _StgDomain._FieldVariable_New

def _FieldVariable_Init(arg1: 'FieldVariable', context: 'DomainContext *', fieldComponentCount: 'Index', dim: 'Dimension_Index', o_units: 'char *', communicator: 'MPI_Comm', fV_Register: 'FieldVariable_Register *', useCacheMaxMin: 'Bool') -> "void":
    return _StgDomain._FieldVariable_Init(arg1, context, fieldComponentCount, dim, o_units, communicator, fV_Register, useCacheMaxMin)
_FieldVariable_Init = _StgDomain._FieldVariable_Init

def _FieldVariable_Delete(fieldVariable: 'void *') -> "void":
    return _StgDomain._FieldVariable_Delete(fieldVariable)
_FieldVariable_Delete = _StgDomain._FieldVariable_Delete

def _FieldVariable_Print(_fieldVariable: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._FieldVariable_Print(_fieldVariable, stream)
_FieldVariable_Print = _StgDomain._FieldVariable_Print

def _FieldVariable_AssignFromXML(fieldVariable: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._FieldVariable_AssignFromXML(fieldVariable, cf, data)
_FieldVariable_AssignFromXML = _StgDomain._FieldVariable_AssignFromXML

def _FieldVariable_Build(fieldVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._FieldVariable_Build(fieldVariable, data)
_FieldVariable_Build = _StgDomain._FieldVariable_Build

def _FieldVariable_Execute(fieldVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._FieldVariable_Execute(fieldVariable, data)
_FieldVariable_Execute = _StgDomain._FieldVariable_Execute

def _FieldVariable_Destroy(fieldVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._FieldVariable_Destroy(fieldVariable, data)
_FieldVariable_Destroy = _StgDomain._FieldVariable_Destroy

def _FieldVariable_Initialise(fieldVariable: 'void *', data: 'void *') -> "void":
    return _StgDomain._FieldVariable_Initialise(fieldVariable, data)
_FieldVariable_Initialise = _StgDomain._FieldVariable_Initialise

def _FieldVariable_Copy(fieldVariable: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._FieldVariable_Copy(fieldVariable, dest, deep, nameExt, ptrMap)
_FieldVariable_Copy = _StgDomain._FieldVariable_Copy

def FieldVariable_InterpolateValueAt(fieldVariable: 'void *', coord: 'Coord', value: 'double *') -> "InterpolationResult":
    return _StgDomain.FieldVariable_InterpolateValueAt(fieldVariable, coord, value)
FieldVariable_InterpolateValueAt = _StgDomain.FieldVariable_InterpolateValueAt

def FieldVariable_GetMinGlobalFieldMagnitude(fieldVariable: 'void *') -> "double":
    return _StgDomain.FieldVariable_GetMinGlobalFieldMagnitude(fieldVariable)
FieldVariable_GetMinGlobalFieldMagnitude = _StgDomain.FieldVariable_GetMinGlobalFieldMagnitude

def FieldVariable_GetMaxGlobalFieldMagnitude(fieldVariable: 'void *') -> "double":
    return _StgDomain.FieldVariable_GetMaxGlobalFieldMagnitude(fieldVariable)
FieldVariable_GetMaxGlobalFieldMagnitude = _StgDomain.FieldVariable_GetMaxGlobalFieldMagnitude

def FieldVariable_GetCachedMinGlobalFieldMagnitude(fieldVariable: 'void *') -> "double":
    return _StgDomain.FieldVariable_GetCachedMinGlobalFieldMagnitude(fieldVariable)
FieldVariable_GetCachedMinGlobalFieldMagnitude = _StgDomain.FieldVariable_GetCachedMinGlobalFieldMagnitude

def FieldVariable_GetCachedMaxGlobalFieldMagnitude(fieldVariable: 'void *') -> "double":
    return _StgDomain.FieldVariable_GetCachedMaxGlobalFieldMagnitude(fieldVariable)
FieldVariable_GetCachedMaxGlobalFieldMagnitude = _StgDomain.FieldVariable_GetCachedMaxGlobalFieldMagnitude

def FieldVariable_CacheMinMaxGlobalFieldMagnitude(fieldVariable: 'void *') -> "void":
    return _StgDomain.FieldVariable_CacheMinMaxGlobalFieldMagnitude(fieldVariable)
FieldVariable_CacheMinMaxGlobalFieldMagnitude = _StgDomain.FieldVariable_CacheMinMaxGlobalFieldMagnitude

def FieldVariable_GetMinAndMaxLocalCoords(fieldVariable: 'void *', min: 'Coord', max: 'Coord') -> "void":
    return _StgDomain.FieldVariable_GetMinAndMaxLocalCoords(fieldVariable, min, max)
FieldVariable_GetMinAndMaxLocalCoords = _StgDomain.FieldVariable_GetMinAndMaxLocalCoords

def FieldVariable_GetMinAndMaxGlobalCoords(fieldVariable: 'void *', min: 'Coord', max: 'Coord') -> "void":
    return _StgDomain.FieldVariable_GetMinAndMaxGlobalCoords(fieldVariable, min, max)
FieldVariable_GetMinAndMaxGlobalCoords = _StgDomain.FieldVariable_GetMinAndMaxGlobalCoords

def _FieldVariable_GetMinAndMaxGlobalCoords(fieldVariable: 'void *', min: 'Coord', max: 'Coord') -> "void":
    return _StgDomain._FieldVariable_GetMinAndMaxGlobalCoords(fieldVariable, min, max)
_FieldVariable_GetMinAndMaxGlobalCoords = _StgDomain._FieldVariable_GetMinAndMaxGlobalCoords

def FieldVariable_SetUnits(fieldVariable: 'void *', o_units: 'char *') -> "void":
    return _StgDomain.FieldVariable_SetUnits(fieldVariable, o_units)
FieldVariable_SetUnits = _StgDomain.FieldVariable_SetUnits

def FieldVariable_GetUnits(fieldVariable: 'void *') -> "char *":
    return _StgDomain.FieldVariable_GetUnits(fieldVariable)
FieldVariable_GetUnits = _StgDomain.FieldVariable_GetUnits
class DofLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.DofLayout__sizeOfSelf_get, _StgDomain.DofLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.DofLayout__deleteSelf_get, _StgDomain.DofLayout__deleteSelf_set)
    type = _swig_property(_StgDomain.DofLayout_type_get, _StgDomain.DofLayout_type_set)
    nRefs = _swig_property(_StgDomain.DofLayout_nRefs_get, _StgDomain.DofLayout_nRefs_set)
    locked = _swig_property(_StgDomain.DofLayout_locked_get, _StgDomain.DofLayout_locked_set)
    _delete = _swig_property(_StgDomain.DofLayout__delete_get, _StgDomain.DofLayout__delete_set)
    _print = _swig_property(_StgDomain.DofLayout__print_get, _StgDomain.DofLayout__print_set)
    _copy = _swig_property(_StgDomain.DofLayout__copy_get, _StgDomain.DofLayout__copy_set)
    name = _swig_property(_StgDomain.DofLayout_name_get, _StgDomain.DofLayout_name_set)
    nameAllocationType = _swig_property(_StgDomain.DofLayout_nameAllocationType_get, _StgDomain.DofLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.DofLayout__defaultConstructor_get, _StgDomain.DofLayout__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.DofLayout__construct_get, _StgDomain.DofLayout__construct_set)
    _build = _swig_property(_StgDomain.DofLayout__build_get, _StgDomain.DofLayout__build_set)
    _initialise = _swig_property(_StgDomain.DofLayout__initialise_get, _StgDomain.DofLayout__initialise_set)
    _execute = _swig_property(_StgDomain.DofLayout__execute_get, _StgDomain.DofLayout__execute_set)
    _destroy = _swig_property(_StgDomain.DofLayout__destroy_get, _StgDomain.DofLayout__destroy_set)
    isConstructed = _swig_property(_StgDomain.DofLayout_isConstructed_get, _StgDomain.DofLayout_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.DofLayout_isBuilt_get, _StgDomain.DofLayout_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.DofLayout_isInitialised_get, _StgDomain.DofLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.DofLayout_hasExecuted_get, _StgDomain.DofLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.DofLayout_isDestroyed_get, _StgDomain.DofLayout_isDestroyed_set)
    constructType = _swig_property(_StgDomain.DofLayout_constructType_get, _StgDomain.DofLayout_constructType_set)
    buildType = _swig_property(_StgDomain.DofLayout_buildType_get, _StgDomain.DofLayout_buildType_set)
    initialiseType = _swig_property(_StgDomain.DofLayout_initialiseType_get, _StgDomain.DofLayout_initialiseType_set)
    executeType = _swig_property(_StgDomain.DofLayout_executeType_get, _StgDomain.DofLayout_executeType_set)
    destroyType = _swig_property(_StgDomain.DofLayout_destroyType_get, _StgDomain.DofLayout_destroyType_set)
    _variableRegister = _swig_property(_StgDomain.DofLayout__variableRegister_get, _StgDomain.DofLayout__variableRegister_set)
    _numItemsInLayout = _swig_property(_StgDomain.DofLayout__numItemsInLayout_get, _StgDomain.DofLayout__numItemsInLayout_set)
    _totalVarCount = _swig_property(_StgDomain.DofLayout__totalVarCount_get, _StgDomain.DofLayout__totalVarCount_set)
    _variableEnabledSets = _swig_property(_StgDomain.DofLayout__variableEnabledSets_get, _StgDomain.DofLayout__variableEnabledSets_set)
    _varIndicesMapping = _swig_property(_StgDomain.DofLayout__varIndicesMapping_get, _StgDomain.DofLayout__varIndicesMapping_set)
    dofCounts = _swig_property(_StgDomain.DofLayout_dofCounts_get, _StgDomain.DofLayout_dofCounts_set)
    varIndices = _swig_property(_StgDomain.DofLayout_varIndices_get, _StgDomain.DofLayout_varIndices_set)
    mesh = _swig_property(_StgDomain.DofLayout_mesh_get, _StgDomain.DofLayout_mesh_set)
    nBaseVariables = _swig_property(_StgDomain.DofLayout_nBaseVariables_get, _StgDomain.DofLayout_nBaseVariables_set)
    baseVariables = _swig_property(_StgDomain.DofLayout_baseVariables_get, _StgDomain.DofLayout_baseVariables_set)

    def __init__(self):
        _StgDomain.DofLayout_swiginit(self, _StgDomain.new_DofLayout())
    __swig_destroy__ = _StgDomain.delete_DofLayout
DofLayout_swigregister = _StgDomain.DofLayout_swigregister
DofLayout_swigregister(DofLayout)
DofLayout_Type = cvar.DofLayout_Type


def _DofLayout_DefaultNew(name: 'Name') -> "DofLayout *":
    return _StgDomain._DofLayout_DefaultNew(name)
_DofLayout_DefaultNew = _StgDomain._DofLayout_DefaultNew

def DofLayout_New(name: 'Name', variableRegister: 'Variable_Register *', numItemsInLayout: 'Index', mesh: 'void *') -> "DofLayout *":
    return _StgDomain.DofLayout_New(name, variableRegister, numItemsInLayout, mesh)
DofLayout_New = _StgDomain.DofLayout_New

def _DofLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "DofLayout *":
    return _StgDomain._DofLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_DofLayout_New = _StgDomain._DofLayout_New

def _DofLayout_Init(dofLayout: 'void *', variableRegister: 'Variable_Register *', numItemsInLayout: 'Index', baseVariableCount: 'StgVariable_Index', baseVariableArray: 'StgVariable **', mesh: 'void *') -> "void":
    return _StgDomain._DofLayout_Init(dofLayout, variableRegister, numItemsInLayout, baseVariableCount, baseVariableArray, mesh)
_DofLayout_Init = _StgDomain._DofLayout_Init

def _DofLayout_Delete(dofLayout: 'void *') -> "void":
    return _StgDomain._DofLayout_Delete(dofLayout)
_DofLayout_Delete = _StgDomain._DofLayout_Delete

def _DofLayout_Print(dofLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._DofLayout_Print(dofLayout, stream)
_DofLayout_Print = _StgDomain._DofLayout_Print

def _DofLayout_Copy(dofLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._DofLayout_Copy(dofLayout, dest, deep, nameExt, ptrMap)
_DofLayout_Copy = _StgDomain._DofLayout_Copy

def _DofLayout_AssignFromXML(dofLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._DofLayout_AssignFromXML(dofLayout, cf, data)
_DofLayout_AssignFromXML = _StgDomain._DofLayout_AssignFromXML

def _DofLayout_Build(dofLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._DofLayout_Build(dofLayout, data)
_DofLayout_Build = _StgDomain._DofLayout_Build

def _DofLayout_Initialise(dofLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._DofLayout_Initialise(dofLayout, data)
_DofLayout_Initialise = _StgDomain._DofLayout_Initialise

def _DofLayout_Execute(dofLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._DofLayout_Execute(dofLayout, data)
_DofLayout_Execute = _StgDomain._DofLayout_Execute

def _DofLayout_Destroy(dofLayout: 'void *', data: 'void *') -> "void":
    return _StgDomain._DofLayout_Destroy(dofLayout, data)
_DofLayout_Destroy = _StgDomain._DofLayout_Destroy

def DofLayout_AddDof_ByVarIndex(dofLayout: 'void *', varIndex: 'StgVariable_Index', index: 'Index') -> "void":
    return _StgDomain.DofLayout_AddDof_ByVarIndex(dofLayout, varIndex, index)
DofLayout_AddDof_ByVarIndex = _StgDomain.DofLayout_AddDof_ByVarIndex

def DofLayout_AddDof_ByVarName(dofLayout: 'void *', varName: 'Name', index: 'Index') -> "void":
    return _StgDomain.DofLayout_AddDof_ByVarName(dofLayout, varName, index)
DofLayout_AddDof_ByVarName = _StgDomain.DofLayout_AddDof_ByVarName

def DofLayout_GetVariable(dofLayout: 'void *', index: 'Index', dofAtItemIndex: 'Dof_Index') -> "StgVariable *":
    return _StgDomain.DofLayout_GetVariable(dofLayout, index, dofAtItemIndex)
DofLayout_GetVariable = _StgDomain.DofLayout_GetVariable

def DofLayout_SetAllToZero(dofLayout: 'void *') -> "void":
    return _StgDomain.DofLayout_SetAllToZero(dofLayout)
DofLayout_SetAllToZero = _StgDomain.DofLayout_SetAllToZero

def DofLayout_CopyValues(dofLayout: 'void *', destDofLayout: 'void *') -> "void":
    return _StgDomain.DofLayout_CopyValues(dofLayout, destDofLayout)
DofLayout_CopyValues = _StgDomain.DofLayout_CopyValues

def DofLayout_AddAllFromVariableArray(dofLayout: 'void *', variableCount: 'StgVariable_Index', variableArray: 'StgVariable **') -> "void":
    return _StgDomain.DofLayout_AddAllFromVariableArray(dofLayout, variableCount, variableArray)
DofLayout_AddAllFromVariableArray = _StgDomain.DofLayout_AddAllFromVariableArray

def RegularMeshUtils_Node_1DTo3D(mesh: 'void *', arg2: 'unsigned int', inds: 'unsigned int *') -> "void":
    return _StgDomain.RegularMeshUtils_Node_1DTo3D(mesh, arg2, inds)
RegularMeshUtils_Node_1DTo3D = _StgDomain.RegularMeshUtils_Node_1DTo3D

def RegularMeshUtils_Node_3DTo1D(mesh: 'void *', inds: 'unsigned int *') -> "unsigned int":
    return _StgDomain.RegularMeshUtils_Node_3DTo1D(mesh, inds)
RegularMeshUtils_Node_3DTo1D = _StgDomain.RegularMeshUtils_Node_3DTo1D

def RegularMeshUtils_Element_1DTo3D(mesh: 'void *', arg2: 'unsigned int', inds: 'unsigned int *') -> "void":
    return _StgDomain.RegularMeshUtils_Element_1DTo3D(mesh, arg2, inds)
RegularMeshUtils_Element_1DTo3D = _StgDomain.RegularMeshUtils_Element_1DTo3D

def RegularMeshUtils_Element_3DTo1D(mesh: 'void *', inds: 'unsigned int *') -> "unsigned int":
    return _StgDomain.RegularMeshUtils_Element_3DTo1D(mesh, inds)
RegularMeshUtils_Element_3DTo1D = _StgDomain.RegularMeshUtils_Element_3DTo1D

def RegularMeshUtils_CreateBoundaryFeatureSet(_mesh: 'void *', TOPO: 'MeshTopology_Dim', whichSet: 'char *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateBoundaryFeatureSet(_mesh, TOPO, whichSet)
RegularMeshUtils_CreateBoundaryFeatureSet = _StgDomain.RegularMeshUtils_CreateBoundaryFeatureSet

def RegularMeshUtils_CreateGlobalSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalSet(_mesh)
RegularMeshUtils_CreateGlobalSet = _StgDomain.RegularMeshUtils_CreateGlobalSet

def RegularMeshUtils_CreateBoundaryElementDomainSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateBoundaryElementDomainSet(_mesh)
RegularMeshUtils_CreateBoundaryElementDomainSet = _StgDomain.RegularMeshUtils_CreateBoundaryElementDomainSet

def RegularMeshUtils_CreateGlobalMaxJSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMaxJSet(_mesh)
RegularMeshUtils_CreateGlobalMaxJSet = _StgDomain.RegularMeshUtils_CreateGlobalMaxJSet

def RegularMeshUtils_CreateGlobalMinJSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMinJSet(_mesh)
RegularMeshUtils_CreateGlobalMinJSet = _StgDomain.RegularMeshUtils_CreateGlobalMinJSet

def RegularMeshUtils_CreateGlobalMinISet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMinISet(_mesh)
RegularMeshUtils_CreateGlobalMinISet = _StgDomain.RegularMeshUtils_CreateGlobalMinISet

def RegularMeshUtils_CreateGlobalMaxISet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMaxISet(_mesh)
RegularMeshUtils_CreateGlobalMaxISet = _StgDomain.RegularMeshUtils_CreateGlobalMaxISet

def RegularMeshUtils_CreateGlobalMaxKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMaxKSet(_mesh)
RegularMeshUtils_CreateGlobalMaxKSet = _StgDomain.RegularMeshUtils_CreateGlobalMaxKSet

def RegularMeshUtils_CreateGlobalMinKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMinKSet(_mesh)
RegularMeshUtils_CreateGlobalMinKSet = _StgDomain.RegularMeshUtils_CreateGlobalMinKSet

def RegularMeshUtils_CreateGlobalInnerMaxJSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalInnerMaxJSet(_mesh)
RegularMeshUtils_CreateGlobalInnerMaxJSet = _StgDomain.RegularMeshUtils_CreateGlobalInnerMaxJSet

def RegularMeshUtils_CreateGlobalInnerMinJSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalInnerMinJSet(_mesh)
RegularMeshUtils_CreateGlobalInnerMinJSet = _StgDomain.RegularMeshUtils_CreateGlobalInnerMinJSet

def RegularMeshUtils_CreateGlobalInnerMinISet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalInnerMinISet(_mesh)
RegularMeshUtils_CreateGlobalInnerMinISet = _StgDomain.RegularMeshUtils_CreateGlobalInnerMinISet

def RegularMeshUtils_CreateGlobalInnerMaxISet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalInnerMaxISet(_mesh)
RegularMeshUtils_CreateGlobalInnerMaxISet = _StgDomain.RegularMeshUtils_CreateGlobalInnerMaxISet

def RegularMeshUtils_CreateGlobalInnerMaxKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalInnerMaxKSet(_mesh)
RegularMeshUtils_CreateGlobalInnerMaxKSet = _StgDomain.RegularMeshUtils_CreateGlobalInnerMaxKSet

def RegularMeshUtils_CreateGlobalInnerMinKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalInnerMinKSet(_mesh)
RegularMeshUtils_CreateGlobalInnerMinKSet = _StgDomain.RegularMeshUtils_CreateGlobalInnerMinKSet

def RegularMeshUtils_CreateGlobalMinIMinJMaxKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMinIMinJMaxKSet(_mesh)
RegularMeshUtils_CreateGlobalMinIMinJMaxKSet = _StgDomain.RegularMeshUtils_CreateGlobalMinIMinJMaxKSet

def RegularMeshUtils_CreateGlobalMaxIMinJMaxKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMaxIMinJMaxKSet(_mesh)
RegularMeshUtils_CreateGlobalMaxIMinJMaxKSet = _StgDomain.RegularMeshUtils_CreateGlobalMaxIMinJMaxKSet

def RegularMeshUtils_CreateGlobalMinIMaxJMaxKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMinIMaxJMaxKSet(_mesh)
RegularMeshUtils_CreateGlobalMinIMaxJMaxKSet = _StgDomain.RegularMeshUtils_CreateGlobalMinIMaxJMaxKSet

def RegularMeshUtils_CreateGlobalMaxIMaxJMaxKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMaxIMaxJMaxKSet(_mesh)
RegularMeshUtils_CreateGlobalMaxIMaxJMaxKSet = _StgDomain.RegularMeshUtils_CreateGlobalMaxIMaxJMaxKSet

def RegularMeshUtils_CreateGlobalMinIMinJMinKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMinIMinJMinKSet(_mesh)
RegularMeshUtils_CreateGlobalMinIMinJMinKSet = _StgDomain.RegularMeshUtils_CreateGlobalMinIMinJMinKSet

def RegularMeshUtils_CreateGlobalMaxIMinJMinKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMaxIMinJMinKSet(_mesh)
RegularMeshUtils_CreateGlobalMaxIMinJMinKSet = _StgDomain.RegularMeshUtils_CreateGlobalMaxIMinJMinKSet

def RegularMeshUtils_CreateGlobalMinIMaxJMinKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMinIMaxJMinKSet(_mesh)
RegularMeshUtils_CreateGlobalMinIMaxJMinKSet = _StgDomain.RegularMeshUtils_CreateGlobalMinIMaxJMinKSet

def RegularMeshUtils_CreateGlobalMaxIMaxJMinKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMaxIMaxJMinKSet(_mesh)
RegularMeshUtils_CreateGlobalMaxIMaxJMinKSet = _StgDomain.RegularMeshUtils_CreateGlobalMaxIMaxJMinKSet

def RegularMeshUtils_CreateLocalInGlobalMaxJSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateLocalInGlobalMaxJSet(_mesh)
RegularMeshUtils_CreateLocalInGlobalMaxJSet = _StgDomain.RegularMeshUtils_CreateLocalInGlobalMaxJSet

def RegularMeshUtils_CreateLocalInGlobalMinJSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateLocalInGlobalMinJSet(_mesh)
RegularMeshUtils_CreateLocalInGlobalMinJSet = _StgDomain.RegularMeshUtils_CreateLocalInGlobalMinJSet

def RegularMeshUtils_CreateLocalInGlobalMinISet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateLocalInGlobalMinISet(_mesh)
RegularMeshUtils_CreateLocalInGlobalMinISet = _StgDomain.RegularMeshUtils_CreateLocalInGlobalMinISet

def RegularMeshUtils_CreateLocalInGlobalMaxISet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateLocalInGlobalMaxISet(_mesh)
RegularMeshUtils_CreateLocalInGlobalMaxISet = _StgDomain.RegularMeshUtils_CreateLocalInGlobalMaxISet

def RegularMeshUtils_CreateLocalInGlobalMaxKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateLocalInGlobalMaxKSet(_mesh)
RegularMeshUtils_CreateLocalInGlobalMaxKSet = _StgDomain.RegularMeshUtils_CreateLocalInGlobalMaxKSet

def RegularMeshUtils_CreateLocalInGlobalMinKSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateLocalInGlobalMinKSet(_mesh)
RegularMeshUtils_CreateLocalInGlobalMinKSet = _StgDomain.RegularMeshUtils_CreateLocalInGlobalMinKSet

def RegularMeshUtils_ErrorCheckAndGetDetails(mesh: 'Mesh', INPUT: 'MeshTopology_Dim', nDomainSize: 'unsigned int *', grid: 'Grid **') -> "void":
    return _StgDomain.RegularMeshUtils_ErrorCheckAndGetDetails(mesh, INPUT, nDomainSize, grid)
RegularMeshUtils_ErrorCheckAndGetDetails = _StgDomain.RegularMeshUtils_ErrorCheckAndGetDetails

def RegularMeshUtils_CreateContactMaxJSet(_mesh: 'void *', lowDepth: 'int', uppDepth: 'int') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateContactMaxJSet(_mesh, lowDepth, uppDepth)
RegularMeshUtils_CreateContactMaxJSet = _StgDomain.RegularMeshUtils_CreateContactMaxJSet

def RegularMeshUtils_CreateContactMinJSet(_mesh: 'void *', lowDepth: 'int', uppDepth: 'int', inDepth: 'int') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateContactMinJSet(_mesh, lowDepth, uppDepth, inDepth)
RegularMeshUtils_CreateContactMinJSet = _StgDomain.RegularMeshUtils_CreateContactMinJSet

def RegularMeshUtils_CreateContactMinISet(_mesh: 'void *', lowDepth: 'int', uppDepth: 'int') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateContactMinISet(_mesh, lowDepth, uppDepth)
RegularMeshUtils_CreateContactMinISet = _StgDomain.RegularMeshUtils_CreateContactMinISet

def RegularMeshUtils_CreateContactMaxISet(_mesh: 'void *', lowDepth: 'int', uppDepth: 'int', inDepth: 'int') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateContactMaxISet(_mesh, lowDepth, uppDepth, inDepth)
RegularMeshUtils_CreateContactMaxISet = _StgDomain.RegularMeshUtils_CreateContactMaxISet

def RegularMeshUtils_GetDiagOppositeAcrossElementNodeIndex(_mesh: 'void *', refElement_dI: 'Element_DomainIndex', refNode_dI: 'Node_DomainIndex') -> "Node_DomainIndex":
    return _StgDomain.RegularMeshUtils_GetDiagOppositeAcrossElementNodeIndex(_mesh, refElement_dI, refNode_dI)
RegularMeshUtils_GetDiagOppositeAcrossElementNodeIndex = _StgDomain.RegularMeshUtils_GetDiagOppositeAcrossElementNodeIndex

def RegularMeshUtils_CreateGlobalMaxIMinJSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMaxIMinJSet(_mesh)
RegularMeshUtils_CreateGlobalMaxIMinJSet = _StgDomain.RegularMeshUtils_CreateGlobalMaxIMinJSet

def RegularMeshUtils_CreateGlobalMinIMinJSet(_mesh: 'void *') -> "IndexSet *":
    return _StgDomain.RegularMeshUtils_CreateGlobalMinIMinJSet(_mesh)
RegularMeshUtils_CreateGlobalMinIMinJSet = _StgDomain.RegularMeshUtils_CreateGlobalMinIMinJSet
class SobolGenerator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.SobolGenerator__sizeOfSelf_get, _StgDomain.SobolGenerator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.SobolGenerator__deleteSelf_get, _StgDomain.SobolGenerator__deleteSelf_set)
    type = _swig_property(_StgDomain.SobolGenerator_type_get, _StgDomain.SobolGenerator_type_set)
    nRefs = _swig_property(_StgDomain.SobolGenerator_nRefs_get, _StgDomain.SobolGenerator_nRefs_set)
    locked = _swig_property(_StgDomain.SobolGenerator_locked_get, _StgDomain.SobolGenerator_locked_set)
    _delete = _swig_property(_StgDomain.SobolGenerator__delete_get, _StgDomain.SobolGenerator__delete_set)
    _print = _swig_property(_StgDomain.SobolGenerator__print_get, _StgDomain.SobolGenerator__print_set)
    _copy = _swig_property(_StgDomain.SobolGenerator__copy_get, _StgDomain.SobolGenerator__copy_set)
    name = _swig_property(_StgDomain.SobolGenerator_name_get, _StgDomain.SobolGenerator_name_set)
    nameAllocationType = _swig_property(_StgDomain.SobolGenerator_nameAllocationType_get, _StgDomain.SobolGenerator_nameAllocationType_set)
    polynomialDegree = _swig_property(_StgDomain.SobolGenerator_polynomialDegree_get, _StgDomain.SobolGenerator_polynomialDegree_set)
    polynomialCoefficient = _swig_property(_StgDomain.SobolGenerator_polynomialCoefficient_get, _StgDomain.SobolGenerator_polynomialCoefficient_set)
    directionalNumberIsCalc = _swig_property(_StgDomain.SobolGenerator_directionalNumberIsCalc_get, _StgDomain.SobolGenerator_directionalNumberIsCalc_set)
    directionalNumberList = _swig_property(_StgDomain.SobolGenerator_directionalNumberList_get, _StgDomain.SobolGenerator_directionalNumberList_set)
    directionalNumbersAlloced = _swig_property(_StgDomain.SobolGenerator_directionalNumbersAlloced_get, _StgDomain.SobolGenerator_directionalNumbersAlloced_set)
    lastCalculated_I = _swig_property(_StgDomain.SobolGenerator_lastCalculated_I_get, _StgDomain.SobolGenerator_lastCalculated_I_set)
    lastCalculatedNumber = _swig_property(_StgDomain.SobolGenerator_lastCalculatedNumber_get, _StgDomain.SobolGenerator_lastCalculatedNumber_set)

    def __init__(self):
        _StgDomain.SobolGenerator_swiginit(self, _StgDomain.new_SobolGenerator())
    __swig_destroy__ = _StgDomain.delete_SobolGenerator
SobolGenerator_swigregister = _StgDomain.SobolGenerator_swigregister
SobolGenerator_swigregister(SobolGenerator)
SobolGenerator_Type = cvar.SobolGenerator_Type


def SobolGenerator_NewFromTable(name: 'Name', generatorIndex: 'unsigned int') -> "SobolGenerator *":
    return _StgDomain.SobolGenerator_NewFromTable(name, generatorIndex)
SobolGenerator_NewFromTable = _StgDomain.SobolGenerator_NewFromTable

def SobolGenerator_New(name: 'Name', polynomialDegree: 'unsigned int', polynomialCoefficient: 'unsigned int', initialDirectionNumbers: 'unsigned int const *') -> "SobolGenerator *":
    return _StgDomain.SobolGenerator_New(name, polynomialDegree, polynomialCoefficient, initialDirectionNumbers)
SobolGenerator_New = _StgDomain.SobolGenerator_New

def _SobolGenerator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType') -> "SobolGenerator *":
    return _StgDomain._SobolGenerator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType)
_SobolGenerator_New = _StgDomain._SobolGenerator_New

def _SobolGenerator_Init(arg1: 'SobolGenerator', polynomialDegree: 'unsigned int', polynomialCoefficient: 'unsigned int', initialDirectionNumbers: 'unsigned int const *') -> "void":
    return _StgDomain._SobolGenerator_Init(arg1, polynomialDegree, polynomialCoefficient, initialDirectionNumbers)
_SobolGenerator_Init = _StgDomain._SobolGenerator_Init

def _SobolGenerator_Delete(sobolGenerator: 'void *') -> "void":
    return _StgDomain._SobolGenerator_Delete(sobolGenerator)
_SobolGenerator_Delete = _StgDomain._SobolGenerator_Delete

def _SobolGenerator_Print(sobolGenerator: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._SobolGenerator_Print(sobolGenerator, stream)
_SobolGenerator_Print = _StgDomain._SobolGenerator_Print

def _SobolGenerator_Copy(sobolGenerator: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._SobolGenerator_Copy(sobolGenerator, dest, deep, nameExt, ptrMap)
_SobolGenerator_Copy = _StgDomain._SobolGenerator_Copy

def _SobolGenerator_FindRightmostZeroBit(number: 'unsigned int') -> "Bit_Index":
    return _StgDomain._SobolGenerator_FindRightmostZeroBit(number)
_SobolGenerator_FindRightmostZeroBit = _StgDomain._SobolGenerator_FindRightmostZeroBit

def SobolGenerator_GetDirectionalNumber(sobolGenerator: 'void *', directionalNum_I: 'unsigned int') -> "unsigned int":
    return _StgDomain.SobolGenerator_GetDirectionalNumber(sobolGenerator, directionalNum_I)
SobolGenerator_GetDirectionalNumber = _StgDomain.SobolGenerator_GetDirectionalNumber

def SobolGenerator_GetNextNumber(sobolGenerator: 'void *') -> "double":
    return _StgDomain.SobolGenerator_GetNextNumber(sobolGenerator)
SobolGenerator_GetNextNumber = _StgDomain.SobolGenerator_GetNextNumber

def SobolGenerator_GetNumberByIndex(sobolGenerator: 'void *', index: 'unsigned int') -> "double":
    return _StgDomain.SobolGenerator_GetNumberByIndex(sobolGenerator, index)
SobolGenerator_GetNumberByIndex = _StgDomain.SobolGenerator_GetNumberByIndex

def SobolGenerator_GetNextNumber_WithMinMax(sobolGenerator: 'void *', min: 'double', max: 'double') -> "double":
    return _StgDomain.SobolGenerator_GetNextNumber_WithMinMax(sobolGenerator, min, max)
SobolGenerator_GetNextNumber_WithMinMax = _StgDomain.SobolGenerator_GetNextNumber_WithMinMax

def SobolGenerator_GetNumberByIndex_WithMinMax(sobolGenerator: 'void *', index: 'unsigned int', min: 'double', max: 'double') -> "double":
    return _StgDomain.SobolGenerator_GetNumberByIndex_WithMinMax(sobolGenerator, index, min, max)
SobolGenerator_GetNumberByIndex_WithMinMax = _StgDomain.SobolGenerator_GetNumberByIndex_WithMinMax
class TimeIntegrand(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.TimeIntegrand__sizeOfSelf_get, _StgDomain.TimeIntegrand__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.TimeIntegrand__deleteSelf_get, _StgDomain.TimeIntegrand__deleteSelf_set)
    type = _swig_property(_StgDomain.TimeIntegrand_type_get, _StgDomain.TimeIntegrand_type_set)
    nRefs = _swig_property(_StgDomain.TimeIntegrand_nRefs_get, _StgDomain.TimeIntegrand_nRefs_set)
    locked = _swig_property(_StgDomain.TimeIntegrand_locked_get, _StgDomain.TimeIntegrand_locked_set)
    _delete = _swig_property(_StgDomain.TimeIntegrand__delete_get, _StgDomain.TimeIntegrand__delete_set)
    _print = _swig_property(_StgDomain.TimeIntegrand__print_get, _StgDomain.TimeIntegrand__print_set)
    _copy = _swig_property(_StgDomain.TimeIntegrand__copy_get, _StgDomain.TimeIntegrand__copy_set)
    name = _swig_property(_StgDomain.TimeIntegrand_name_get, _StgDomain.TimeIntegrand_name_set)
    nameAllocationType = _swig_property(_StgDomain.TimeIntegrand_nameAllocationType_get, _StgDomain.TimeIntegrand_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.TimeIntegrand__defaultConstructor_get, _StgDomain.TimeIntegrand__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.TimeIntegrand__construct_get, _StgDomain.TimeIntegrand__construct_set)
    _build = _swig_property(_StgDomain.TimeIntegrand__build_get, _StgDomain.TimeIntegrand__build_set)
    _initialise = _swig_property(_StgDomain.TimeIntegrand__initialise_get, _StgDomain.TimeIntegrand__initialise_set)
    _execute = _swig_property(_StgDomain.TimeIntegrand__execute_get, _StgDomain.TimeIntegrand__execute_set)
    _destroy = _swig_property(_StgDomain.TimeIntegrand__destroy_get, _StgDomain.TimeIntegrand__destroy_set)
    isConstructed = _swig_property(_StgDomain.TimeIntegrand_isConstructed_get, _StgDomain.TimeIntegrand_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.TimeIntegrand_isBuilt_get, _StgDomain.TimeIntegrand_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.TimeIntegrand_isInitialised_get, _StgDomain.TimeIntegrand_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.TimeIntegrand_hasExecuted_get, _StgDomain.TimeIntegrand_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.TimeIntegrand_isDestroyed_get, _StgDomain.TimeIntegrand_isDestroyed_set)
    constructType = _swig_property(_StgDomain.TimeIntegrand_constructType_get, _StgDomain.TimeIntegrand_constructType_set)
    buildType = _swig_property(_StgDomain.TimeIntegrand_buildType_get, _StgDomain.TimeIntegrand_buildType_set)
    initialiseType = _swig_property(_StgDomain.TimeIntegrand_initialiseType_get, _StgDomain.TimeIntegrand_initialiseType_set)
    executeType = _swig_property(_StgDomain.TimeIntegrand_executeType_get, _StgDomain.TimeIntegrand_executeType_set)
    destroyType = _swig_property(_StgDomain.TimeIntegrand_destroyType_get, _StgDomain.TimeIntegrand_destroyType_set)
    context = _swig_property(_StgDomain.TimeIntegrand_context_get, _StgDomain.TimeIntegrand_context_set)
    _calculateTimeDeriv = _swig_property(_StgDomain.TimeIntegrand__calculateTimeDeriv_get, _StgDomain.TimeIntegrand__calculateTimeDeriv_set)
    _intermediate = _swig_property(_StgDomain.TimeIntegrand__intermediate_get, _StgDomain.TimeIntegrand__intermediate_set)
    timeIntegrator = _swig_property(_StgDomain.TimeIntegrand_timeIntegrator_get, _StgDomain.TimeIntegrand_timeIntegrator_set)
    variable = _swig_property(_StgDomain.TimeIntegrand_variable_get, _StgDomain.TimeIntegrand_variable_set)
    dataCount = _swig_property(_StgDomain.TimeIntegrand_dataCount_get, _StgDomain.TimeIntegrand_dataCount_set)
    data = _swig_property(_StgDomain.TimeIntegrand_data_get, _StgDomain.TimeIntegrand_data_set)
    allowFallbackToFirstOrder = _swig_property(_StgDomain.TimeIntegrand_allowFallbackToFirstOrder_get, _StgDomain.TimeIntegrand_allowFallbackToFirstOrder_set)
    debug = _swig_property(_StgDomain.TimeIntegrand_debug_get, _StgDomain.TimeIntegrand_debug_set)
    error_msg = _swig_property(_StgDomain.TimeIntegrand_error_msg_get, _StgDomain.TimeIntegrand_error_msg_set)

    def __init__(self):
        _StgDomain.TimeIntegrand_swiginit(self, _StgDomain.new_TimeIntegrand())
    __swig_destroy__ = _StgDomain.delete_TimeIntegrand
TimeIntegrand_swigregister = _StgDomain.TimeIntegrand_swigregister
TimeIntegrand_swigregister(TimeIntegrand)
TimeIntegrand_Type = cvar.TimeIntegrand_Type


def TimeIntegrand_New(name: 'Name', context: 'DomainContext *', timeIntegrator: 'TimeIntegrator', variable: '_StgVariable', dataCount: 'Index', data: 'Stg_Component **', allowFallbackToFirstOrder: 'Bool') -> "TimeIntegrand *":
    return _StgDomain.TimeIntegrand_New(name, context, timeIntegrator, variable, dataCount, data, allowFallbackToFirstOrder)
TimeIntegrand_New = _StgDomain.TimeIntegrand_New

def _TimeIntegrand_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _calculateTimeDeriv: 'TimeIntegrand_CalculateTimeDerivFunction *', _intermediate: 'TimeIntegrand_IntermediateFunction *') -> "TimeIntegrand *":
    return _StgDomain._TimeIntegrand_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _calculateTimeDeriv, _intermediate)
_TimeIntegrand_New = _StgDomain._TimeIntegrand_New

def _TimeIntegrand_Init(timeIntegrand: 'void *', context: 'DomainContext *', timeIntegrator: 'TimeIntegrator', variable: '_StgVariable', dataCount: 'Index', data: 'Stg_Component **', allowFallbackToFirstOrder: 'Bool') -> "void":
    return _StgDomain._TimeIntegrand_Init(timeIntegrand, context, timeIntegrator, variable, dataCount, data, allowFallbackToFirstOrder)
_TimeIntegrand_Init = _StgDomain._TimeIntegrand_Init

def _TimeIntegrand_Delete(timeIntegrator: 'void *') -> "void":
    return _StgDomain._TimeIntegrand_Delete(timeIntegrator)
_TimeIntegrand_Delete = _StgDomain._TimeIntegrand_Delete

def _TimeIntegrand_Print(timeIntegrator: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._TimeIntegrand_Print(timeIntegrator, stream)
_TimeIntegrand_Print = _StgDomain._TimeIntegrand_Print

def _TimeIntegrand_Copy(timeIntegrator: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._TimeIntegrand_Copy(timeIntegrator, dest, deep, nameExt, ptrMap)
_TimeIntegrand_Copy = _StgDomain._TimeIntegrand_Copy

def _TimeIntegrand_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._TimeIntegrand_DefaultNew(name)
_TimeIntegrand_DefaultNew = _StgDomain._TimeIntegrand_DefaultNew

def _TimeIntegrand_AssignFromXML(timeIntegrand: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrand_AssignFromXML(timeIntegrand, cf, data)
_TimeIntegrand_AssignFromXML = _StgDomain._TimeIntegrand_AssignFromXML

def _TimeIntegrand_Build(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrand_Build(timeIntegrator, data)
_TimeIntegrand_Build = _StgDomain._TimeIntegrand_Build

def _TimeIntegrand_Initialise(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrand_Initialise(timeIntegrator, data)
_TimeIntegrand_Initialise = _StgDomain._TimeIntegrand_Initialise

def _TimeIntegrand_Execute(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrand_Execute(timeIntegrator, data)
_TimeIntegrand_Execute = _StgDomain._TimeIntegrand_Execute

def _TimeIntegrand_Destroy(timeIntegrand: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrand_Destroy(timeIntegrand, data)
_TimeIntegrand_Destroy = _StgDomain._TimeIntegrand_Destroy

def _TimeIntegrand_AdvectionTimeDeriv(timeIntegrand: 'void *', array_I: 'Index', timeDeriv: 'double *') -> "Bool":
    return _StgDomain._TimeIntegrand_AdvectionTimeDeriv(timeIntegrand, array_I, timeDeriv)
_TimeIntegrand_AdvectionTimeDeriv = _StgDomain._TimeIntegrand_AdvectionTimeDeriv

def _TimeIntegrand_Intermediate(timeIntegrand: 'void *', array_I: 'Index') -> "void":
    return _StgDomain._TimeIntegrand_Intermediate(timeIntegrand, array_I)
_TimeIntegrand_Intermediate = _StgDomain._TimeIntegrand_Intermediate

def _TimeIntegrand_RewindToStartAndApplyFirstOrderUpdate(arg1: 'TimeIntegrand', arrayDataPtr: 'double *', startData: 'double *', startTime: 'double', dt: 'double', timeDeriv: 'double *', array_I: 'Index') -> "void":
    return _StgDomain._TimeIntegrand_RewindToStartAndApplyFirstOrderUpdate(arg1, arrayDataPtr, startData, startTime, dt, timeDeriv, array_I)
_TimeIntegrand_RewindToStartAndApplyFirstOrderUpdate = _StgDomain._TimeIntegrand_RewindToStartAndApplyFirstOrderUpdate

def TimeIntegrand_FirstOrder(timeIntegrator: 'void *', startValue: '_StgVariable', dt: 'double') -> "void":
    return _StgDomain.TimeIntegrand_FirstOrder(timeIntegrator, startValue, dt)
TimeIntegrand_FirstOrder = _StgDomain.TimeIntegrand_FirstOrder

def TimeIntegrand_SecondOrder(timeIntegrator: 'void *', startValue: '_StgVariable', dt: 'double') -> "void":
    return _StgDomain.TimeIntegrand_SecondOrder(timeIntegrator, startValue, dt)
TimeIntegrand_SecondOrder = _StgDomain.TimeIntegrand_SecondOrder

def TimeIntegrand_FourthOrder(timeIntegrator: 'void *', startValue: '_StgVariable', dt: 'double') -> "void":
    return _StgDomain.TimeIntegrand_FourthOrder(timeIntegrator, startValue, dt)
TimeIntegrand_FourthOrder = _StgDomain.TimeIntegrand_FourthOrder

def TimeIntegrand_StoreTimeDeriv(timeIntegrand: 'void *', timeDeriv: '_StgVariable') -> "void":
    return _StgDomain.TimeIntegrand_StoreTimeDeriv(timeIntegrand, timeDeriv)
TimeIntegrand_StoreTimeDeriv = _StgDomain.TimeIntegrand_StoreTimeDeriv

def TimeIntegrand_Add2TimesTimeDeriv(timeIntegrand: 'void *', timeDerivVariable: '_StgVariable') -> "void":
    return _StgDomain.TimeIntegrand_Add2TimesTimeDeriv(timeIntegrand, timeDerivVariable)
TimeIntegrand_Add2TimesTimeDeriv = _StgDomain.TimeIntegrand_Add2TimesTimeDeriv

def TimeIntegrand_FourthOrderFinalStep(timeIntegrand: 'void *', startData: '_StgVariable', timeDerivVariable: '_StgVariable', dt: 'double') -> "void":
    return _StgDomain.TimeIntegrand_FourthOrderFinalStep(timeIntegrand, startData, timeDerivVariable, dt)
TimeIntegrand_FourthOrderFinalStep = _StgDomain.TimeIntegrand_FourthOrderFinalStep
class TimeIntegrator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgDomain.TimeIntegrator__sizeOfSelf_get, _StgDomain.TimeIntegrator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgDomain.TimeIntegrator__deleteSelf_get, _StgDomain.TimeIntegrator__deleteSelf_set)
    type = _swig_property(_StgDomain.TimeIntegrator_type_get, _StgDomain.TimeIntegrator_type_set)
    nRefs = _swig_property(_StgDomain.TimeIntegrator_nRefs_get, _StgDomain.TimeIntegrator_nRefs_set)
    locked = _swig_property(_StgDomain.TimeIntegrator_locked_get, _StgDomain.TimeIntegrator_locked_set)
    _delete = _swig_property(_StgDomain.TimeIntegrator__delete_get, _StgDomain.TimeIntegrator__delete_set)
    _print = _swig_property(_StgDomain.TimeIntegrator__print_get, _StgDomain.TimeIntegrator__print_set)
    _copy = _swig_property(_StgDomain.TimeIntegrator__copy_get, _StgDomain.TimeIntegrator__copy_set)
    name = _swig_property(_StgDomain.TimeIntegrator_name_get, _StgDomain.TimeIntegrator_name_set)
    nameAllocationType = _swig_property(_StgDomain.TimeIntegrator_nameAllocationType_get, _StgDomain.TimeIntegrator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgDomain.TimeIntegrator__defaultConstructor_get, _StgDomain.TimeIntegrator__defaultConstructor_set)
    _construct = _swig_property(_StgDomain.TimeIntegrator__construct_get, _StgDomain.TimeIntegrator__construct_set)
    _build = _swig_property(_StgDomain.TimeIntegrator__build_get, _StgDomain.TimeIntegrator__build_set)
    _initialise = _swig_property(_StgDomain.TimeIntegrator__initialise_get, _StgDomain.TimeIntegrator__initialise_set)
    _execute = _swig_property(_StgDomain.TimeIntegrator__execute_get, _StgDomain.TimeIntegrator__execute_set)
    _destroy = _swig_property(_StgDomain.TimeIntegrator__destroy_get, _StgDomain.TimeIntegrator__destroy_set)
    isConstructed = _swig_property(_StgDomain.TimeIntegrator_isConstructed_get, _StgDomain.TimeIntegrator_isConstructed_set)
    isBuilt = _swig_property(_StgDomain.TimeIntegrator_isBuilt_get, _StgDomain.TimeIntegrator_isBuilt_set)
    isInitialised = _swig_property(_StgDomain.TimeIntegrator_isInitialised_get, _StgDomain.TimeIntegrator_isInitialised_set)
    hasExecuted = _swig_property(_StgDomain.TimeIntegrator_hasExecuted_get, _StgDomain.TimeIntegrator_hasExecuted_set)
    isDestroyed = _swig_property(_StgDomain.TimeIntegrator_isDestroyed_get, _StgDomain.TimeIntegrator_isDestroyed_set)
    constructType = _swig_property(_StgDomain.TimeIntegrator_constructType_get, _StgDomain.TimeIntegrator_constructType_set)
    buildType = _swig_property(_StgDomain.TimeIntegrator_buildType_get, _StgDomain.TimeIntegrator_buildType_set)
    initialiseType = _swig_property(_StgDomain.TimeIntegrator_initialiseType_get, _StgDomain.TimeIntegrator_initialiseType_set)
    executeType = _swig_property(_StgDomain.TimeIntegrator_executeType_get, _StgDomain.TimeIntegrator_executeType_set)
    destroyType = _swig_property(_StgDomain.TimeIntegrator_destroyType_get, _StgDomain.TimeIntegrator_destroyType_set)
    context = _swig_property(_StgDomain.TimeIntegrator_context_get, _StgDomain.TimeIntegrator_context_set)
    debug = _swig_property(_StgDomain.TimeIntegrator_debug_get, _StgDomain.TimeIntegrator_debug_set)
    info = _swig_property(_StgDomain.TimeIntegrator_info_get, _StgDomain.TimeIntegrator_info_set)
    integrandRegister = _swig_property(_StgDomain.TimeIntegrator_integrandRegister_get, _StgDomain.TimeIntegrator_integrandRegister_set)
    order = _swig_property(_StgDomain.TimeIntegrator_order_get, _StgDomain.TimeIntegrator_order_set)
    simultaneous = _swig_property(_StgDomain.TimeIntegrator_simultaneous_get, _StgDomain.TimeIntegrator_simultaneous_set)
    _setupEPName = _swig_property(_StgDomain.TimeIntegrator__setupEPName_get, _StgDomain.TimeIntegrator__setupEPName_set)
    _finishEPName = _swig_property(_StgDomain.TimeIntegrator__finishEPName_get, _StgDomain.TimeIntegrator__finishEPName_set)
    setupEP = _swig_property(_StgDomain.TimeIntegrator_setupEP_get, _StgDomain.TimeIntegrator_setupEP_set)
    setupData = _swig_property(_StgDomain.TimeIntegrator_setupData_get, _StgDomain.TimeIntegrator_setupData_set)
    finishEP = _swig_property(_StgDomain.TimeIntegrator_finishEP_get, _StgDomain.TimeIntegrator_finishEP_set)
    finishData = _swig_property(_StgDomain.TimeIntegrator_finishData_get, _StgDomain.TimeIntegrator_finishData_set)
    time = _swig_property(_StgDomain.TimeIntegrator_time_get, _StgDomain.TimeIntegrator_time_set)
    dt = _swig_property(_StgDomain.TimeIntegrator_dt_get, _StgDomain.TimeIntegrator_dt_set)

    def __init__(self):
        _StgDomain.TimeIntegrator_swiginit(self, _StgDomain.new_TimeIntegrator())
    __swig_destroy__ = _StgDomain.delete_TimeIntegrator
TimeIntegrator_swigregister = _StgDomain.TimeIntegrator_swigregister
TimeIntegrator_swigregister(TimeIntegrator)
TimeIntegrator_Type = cvar.TimeIntegrator_Type


def TimeIntegrator_New(name: 'Name', order: 'unsigned int', simultaneous: 'Bool', entryPoint_Register: 'EntryPoint_Register *', context: 'AbstractContext *') -> "TimeIntegrator *":
    return _StgDomain.TimeIntegrator_New(name, order, simultaneous, entryPoint_Register, context)
TimeIntegrator_New = _StgDomain.TimeIntegrator_New

def _TimeIntegrator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "TimeIntegrator *":
    return _StgDomain._TimeIntegrator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_TimeIntegrator_New = _StgDomain._TimeIntegrator_New

def _TimeIntegrator_Init(timeIntegrator: 'void *', order: 'unsigned int', simultaneous: 'Bool', entryPoint_Register: 'EntryPoint_Register *', context: 'AbstractContext *') -> "void":
    return _StgDomain._TimeIntegrator_Init(timeIntegrator, order, simultaneous, entryPoint_Register, context)
_TimeIntegrator_Init = _StgDomain._TimeIntegrator_Init

def _TimeIntegrator_Delete(timeIntegrator: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_Delete(timeIntegrator)
_TimeIntegrator_Delete = _StgDomain._TimeIntegrator_Delete

def _TimeIntegrator_Print(timeIntegrator: 'void *', stream: 'Stream *') -> "void":
    return _StgDomain._TimeIntegrator_Print(timeIntegrator, stream)
_TimeIntegrator_Print = _StgDomain._TimeIntegrator_Print

def _TimeIntegrator_Copy(timeIntegrator: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgDomain._TimeIntegrator_Copy(timeIntegrator, dest, deep, nameExt, ptrMap)
_TimeIntegrator_Copy = _StgDomain._TimeIntegrator_Copy

def _TimeIntegrator_DefaultNew(name: 'Name') -> "void *":
    return _StgDomain._TimeIntegrator_DefaultNew(name)
_TimeIntegrator_DefaultNew = _StgDomain._TimeIntegrator_DefaultNew

def _TimeIntegrator_AssignFromXML(timeIntegrator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_AssignFromXML(timeIntegrator, cf, data)
_TimeIntegrator_AssignFromXML = _StgDomain._TimeIntegrator_AssignFromXML

def _TimeIntegrator_Build(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_Build(timeIntegrator, data)
_TimeIntegrator_Build = _StgDomain._TimeIntegrator_Build

def _TimeIntegrator_Initialise(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_Initialise(timeIntegrator, data)
_TimeIntegrator_Initialise = _StgDomain._TimeIntegrator_Initialise

def _TimeIntegrator_Execute(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_Execute(timeIntegrator, data)
_TimeIntegrator_Execute = _StgDomain._TimeIntegrator_Execute

def _TimeIntegrator_Destroy(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_Destroy(timeIntegrator, data)
_TimeIntegrator_Destroy = _StgDomain._TimeIntegrator_Destroy

def TimeIntegrator_UpdateClass(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_UpdateClass(timeIntegrator, data)
TimeIntegrator_UpdateClass = _StgDomain.TimeIntegrator_UpdateClass

def _TimeIntegrator_ExecuteEuler(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_ExecuteEuler(timeIntegrator, data)
_TimeIntegrator_ExecuteEuler = _StgDomain._TimeIntegrator_ExecuteEuler

def _TimeIntegrator_ExecuteRK2(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_ExecuteRK2(timeIntegrator, data)
_TimeIntegrator_ExecuteRK2 = _StgDomain._TimeIntegrator_ExecuteRK2

def _TimeIntegrator_ExecuteRK4(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_ExecuteRK4(timeIntegrator, data)
_TimeIntegrator_ExecuteRK4 = _StgDomain._TimeIntegrator_ExecuteRK4

def _TimeIntegrator_ExecuteRK2Simultaneous(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_ExecuteRK2Simultaneous(timeIntegrator, data)
_TimeIntegrator_ExecuteRK2Simultaneous = _StgDomain._TimeIntegrator_ExecuteRK2Simultaneous

def _TimeIntegrator_ExecuteRK4Simultaneous(timeIntegrator: 'void *', data: 'void *') -> "void":
    return _StgDomain._TimeIntegrator_ExecuteRK4Simultaneous(timeIntegrator, data)
_TimeIntegrator_ExecuteRK4Simultaneous = _StgDomain._TimeIntegrator_ExecuteRK4Simultaneous

def TimeIntegrator_Add(timeIntegrator: 'void *', _timeIntegrand: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_Add(timeIntegrator, _timeIntegrand)
TimeIntegrator_Add = _StgDomain.TimeIntegrator_Add

def TimeIntegrator_Setup(timeIntegrator: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_Setup(timeIntegrator)
TimeIntegrator_Setup = _StgDomain.TimeIntegrator_Setup

def TimeIntegrator_AppendSetupEP(timeIntegrator: 'void *', name: 'Name', funcPtr: 'Func_Ptr', addedBy: 'char *', data: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_AppendSetupEP(timeIntegrator, name, funcPtr, addedBy, data)
TimeIntegrator_AppendSetupEP = _StgDomain.TimeIntegrator_AppendSetupEP

def TimeIntegrator_PrependSetupEP(timeIntegrator: 'void *', name: 'Name', funcPtr: 'Func_Ptr', addedBy: 'char *', data: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_PrependSetupEP(timeIntegrator, name, funcPtr, addedBy, data)
TimeIntegrator_PrependSetupEP = _StgDomain.TimeIntegrator_PrependSetupEP

def TimeIntegrator_Finalise(timeIntegrator: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_Finalise(timeIntegrator)
TimeIntegrator_Finalise = _StgDomain.TimeIntegrator_Finalise

def TimeIntegrator_AppendFinishEP(timeIntegrator: 'void *', name: 'Name', funcPtr: 'Func_Ptr', addedBy: 'char *', data: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_AppendFinishEP(timeIntegrator, name, funcPtr, addedBy, data)
TimeIntegrator_AppendFinishEP = _StgDomain.TimeIntegrator_AppendFinishEP

def TimeIntegrator_PrependFinishEP(timeIntegrator: 'void *', name: 'Name', funcPtr: 'Func_Ptr', addedBy: 'char *', data: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_PrependFinishEP(timeIntegrator, name, funcPtr, addedBy, data)
TimeIntegrator_PrependFinishEP = _StgDomain.TimeIntegrator_PrependFinishEP

def TimeIntegrator_InsertBeforeFinishEP(timeIntegrator: 'void *', hookToInsertBefore: 'Name', name: 'Name', funcPtr: 'Func_Ptr', addedBy: 'char *', data: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_InsertBeforeFinishEP(timeIntegrator, hookToInsertBefore, name, funcPtr, addedBy, data)
TimeIntegrator_InsertBeforeFinishEP = _StgDomain.TimeIntegrator_InsertBeforeFinishEP

def TimeIntegrator_InsertAfterFinishEP(timeIntegrator: 'void *', hookToInsertAfter: 'Name', name: 'Name', funcPtr: 'Func_Ptr', addedBy: 'char *', data: 'void *') -> "void":
    return _StgDomain.TimeIntegrator_InsertAfterFinishEP(timeIntegrator, hookToInsertAfter, name, funcPtr, addedBy, data)
TimeIntegrator_InsertAfterFinishEP = _StgDomain.TimeIntegrator_InsertAfterFinishEP

def TimeIntegrator_SetTime(timeIntegrator: 'void *', time: 'double') -> "void":
    return _StgDomain.TimeIntegrator_SetTime(timeIntegrator, time)
TimeIntegrator_SetTime = _StgDomain.TimeIntegrator_SetTime

def TimeIntegrator_GetTime(timeIntegrator: 'void *') -> "double":
    return _StgDomain.TimeIntegrator_GetTime(timeIntegrator)
TimeIntegrator_GetTime = _StgDomain.TimeIntegrator_GetTime

def StgVariable_NewFromOld(oldVariable: '_StgVariable', name: 'Name', copyValues: 'Bool') -> "StgVariable *":
    return _StgDomain.StgVariable_NewFromOld(oldVariable, name, copyValues)
StgVariable_NewFromOld = _StgDomain.StgVariable_NewFromOld


