# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StgFEM.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StgFEM')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StgFEM')
    _StgFEM = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StgFEM', [dirname(__file__)])
        except ImportError:
            import _StgFEM
            return _StgFEM
        if fp is not None:
            try:
                _mod = imp.load_module('_StgFEM', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _StgFEM = swig_import_helper()
    del swig_import_helper
else:
    import _StgFEM
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import underworld.libUnderworld.libUnderworldPy.StGermain
import underworld.libUnderworld.libUnderworldPy.StgDomain
class FeVariable(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.FeVariable__sizeOfSelf_get, _StgFEM.FeVariable__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.FeVariable__deleteSelf_get, _StgFEM.FeVariable__deleteSelf_set)
    type = _swig_property(_StgFEM.FeVariable_type_get, _StgFEM.FeVariable_type_set)
    nRefs = _swig_property(_StgFEM.FeVariable_nRefs_get, _StgFEM.FeVariable_nRefs_set)
    locked = _swig_property(_StgFEM.FeVariable_locked_get, _StgFEM.FeVariable_locked_set)
    _delete = _swig_property(_StgFEM.FeVariable__delete_get, _StgFEM.FeVariable__delete_set)
    _print = _swig_property(_StgFEM.FeVariable__print_get, _StgFEM.FeVariable__print_set)
    _copy = _swig_property(_StgFEM.FeVariable__copy_get, _StgFEM.FeVariable__copy_set)
    name = _swig_property(_StgFEM.FeVariable_name_get, _StgFEM.FeVariable_name_set)
    nameAllocationType = _swig_property(_StgFEM.FeVariable_nameAllocationType_get, _StgFEM.FeVariable_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.FeVariable__defaultConstructor_get, _StgFEM.FeVariable__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.FeVariable__construct_get, _StgFEM.FeVariable__construct_set)
    _build = _swig_property(_StgFEM.FeVariable__build_get, _StgFEM.FeVariable__build_set)
    _initialise = _swig_property(_StgFEM.FeVariable__initialise_get, _StgFEM.FeVariable__initialise_set)
    _execute = _swig_property(_StgFEM.FeVariable__execute_get, _StgFEM.FeVariable__execute_set)
    _destroy = _swig_property(_StgFEM.FeVariable__destroy_get, _StgFEM.FeVariable__destroy_set)
    isConstructed = _swig_property(_StgFEM.FeVariable_isConstructed_get, _StgFEM.FeVariable_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.FeVariable_isBuilt_get, _StgFEM.FeVariable_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.FeVariable_isInitialised_get, _StgFEM.FeVariable_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.FeVariable_hasExecuted_get, _StgFEM.FeVariable_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.FeVariable_isDestroyed_get, _StgFEM.FeVariable_isDestroyed_set)
    constructType = _swig_property(_StgFEM.FeVariable_constructType_get, _StgFEM.FeVariable_constructType_set)
    buildType = _swig_property(_StgFEM.FeVariable_buildType_get, _StgFEM.FeVariable_buildType_set)
    initialiseType = _swig_property(_StgFEM.FeVariable_initialiseType_get, _StgFEM.FeVariable_initialiseType_set)
    executeType = _swig_property(_StgFEM.FeVariable_executeType_get, _StgFEM.FeVariable_executeType_set)
    destroyType = _swig_property(_StgFEM.FeVariable_destroyType_get, _StgFEM.FeVariable_destroyType_set)
    context = _swig_property(_StgFEM.FeVariable_context_get, _StgFEM.FeVariable_context_set)
    _interpolateValueAt = _swig_property(_StgFEM.FeVariable__interpolateValueAt_get, _StgFEM.FeVariable__interpolateValueAt_set)
    _getMinGlobalFieldMagnitude = _swig_property(_StgFEM.FeVariable__getMinGlobalFieldMagnitude_get, _StgFEM.FeVariable__getMinGlobalFieldMagnitude_set)
    _getMaxGlobalFieldMagnitude = _swig_property(_StgFEM.FeVariable__getMaxGlobalFieldMagnitude_get, _StgFEM.FeVariable__getMaxGlobalFieldMagnitude_set)
    _cacheMinMaxGlobalFieldMagnitude = _swig_property(_StgFEM.FeVariable__cacheMinMaxGlobalFieldMagnitude_get, _StgFEM.FeVariable__cacheMinMaxGlobalFieldMagnitude_set)
    _getMinAndMaxLocalCoords = _swig_property(_StgFEM.FeVariable__getMinAndMaxLocalCoords_get, _StgFEM.FeVariable__getMinAndMaxLocalCoords_set)
    _getMinAndMaxGlobalCoords = _swig_property(_StgFEM.FeVariable__getMinAndMaxGlobalCoords_get, _StgFEM.FeVariable__getMinAndMaxGlobalCoords_set)
    extensionMgr = _swig_property(_StgFEM.FeVariable_extensionMgr_get, _StgFEM.FeVariable_extensionMgr_set)
    fieldComponentCount = _swig_property(_StgFEM.FeVariable_fieldComponentCount_get, _StgFEM.FeVariable_fieldComponentCount_set)
    dim = _swig_property(_StgFEM.FeVariable_dim_get, _StgFEM.FeVariable_dim_set)
    communicator = _swig_property(_StgFEM.FeVariable_communicator_get, _StgFEM.FeVariable_communicator_set)
    fieldVariable_Register = _swig_property(_StgFEM.FeVariable_fieldVariable_Register_get, _StgFEM.FeVariable_fieldVariable_Register_set)
    isSavedData = _swig_property(_StgFEM.FeVariable_isSavedData_get, _StgFEM.FeVariable_isSavedData_set)
    cachedTimestep = _swig_property(_StgFEM.FeVariable_cachedTimestep_get, _StgFEM.FeVariable_cachedTimestep_set)
    magnitudeMin = _swig_property(_StgFEM.FeVariable_magnitudeMin_get, _StgFEM.FeVariable_magnitudeMin_set)
    magnitudeMax = _swig_property(_StgFEM.FeVariable_magnitudeMax_get, _StgFEM.FeVariable_magnitudeMax_set)
    o_units = _swig_property(_StgFEM.FeVariable_o_units_get, _StgFEM.FeVariable_o_units_set)
    useCacheMaxMin = _swig_property(_StgFEM.FeVariable_useCacheMaxMin_get, _StgFEM.FeVariable_useCacheMaxMin_set)
    _interpolateWithinElement = _swig_property(_StgFEM.FeVariable__interpolateWithinElement_get, _StgFEM.FeVariable__interpolateWithinElement_set)
    _getValueAtNode = _swig_property(_StgFEM.FeVariable__getValueAtNode_get, _StgFEM.FeVariable__getValueAtNode_set)
    _syncShadowValues = _swig_property(_StgFEM.FeVariable__syncShadowValues_get, _StgFEM.FeVariable__syncShadowValues_set)
    _calibrateBCValues = _swig_property(_StgFEM.FeVariable__calibrateBCValues_get, _StgFEM.FeVariable__calibrateBCValues_set)
    debug = _swig_property(_StgFEM.FeVariable_debug_get, _StgFEM.FeVariable_debug_set)
    feMesh = _swig_property(_StgFEM.FeVariable_feMesh_get, _StgFEM.FeVariable_feMesh_set)
    dofLayout = _swig_property(_StgFEM.FeVariable_dofLayout_get, _StgFEM.FeVariable_dofLayout_set)
    GNx = _swig_property(_StgFEM.FeVariable_GNx_get, _StgFEM.FeVariable_GNx_set)
    bcs = _swig_property(_StgFEM.FeVariable_bcs_get, _StgFEM.FeVariable_bcs_set)
    periodic = _swig_property(_StgFEM.FeVariable_periodic_get, _StgFEM.FeVariable_periodic_set)
    linkedDofInfo = _swig_property(_StgFEM.FeVariable_linkedDofInfo_get, _StgFEM.FeVariable_linkedDofInfo_set)
    shadowValuesSynchronised = _swig_property(_StgFEM.FeVariable_shadowValuesSynchronised_get, _StgFEM.FeVariable_shadowValuesSynchronised_set)
    templateFeVariable = _swig_property(_StgFEM.FeVariable_templateFeVariable_get, _StgFEM.FeVariable_templateFeVariable_set)
    inc = _swig_property(_StgFEM.FeVariable_inc_get, _StgFEM.FeVariable_inc_set)
    nonAABCs = _swig_property(_StgFEM.FeVariable_nonAABCs_get, _StgFEM.FeVariable_nonAABCs_set)
    tempData = _swig_property(_StgFEM.FeVariable_tempData_get, _StgFEM.FeVariable_tempData_set)

    def __init__(self):
        _StgFEM.FeVariable_swiginit(self, _StgFEM.new_FeVariable())
    __swig_destroy__ = _StgFEM.delete_FeVariable
FeVariable_swigregister = _StgFEM.FeVariable_swigregister
FeVariable_swigregister(FeVariable)
cvar = _StgFEM.cvar
FeVariable_Type = cvar.FeVariable_Type


def _FeVariable_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._FeVariable_DefaultNew(name)
_FeVariable_DefaultNew = _StgFEM._FeVariable_DefaultNew

def FeVariable_New(name: 'Name', context: 'DomainContext *', feMesh: 'void *', dofLayout: 'DofLayout', bcs: 'void *', ics: 'void *', linkedDofInfo: 'void *', dim: 'Dimension_Index', referenceSoulution: 'Bool', loadReferenceEachTimestep: 'Bool', fieldVariable_Register: 'FieldVariable_Register *') -> "FeVariable *":
    return _StgFEM.FeVariable_New(name, context, feMesh, dofLayout, bcs, ics, linkedDofInfo, dim, referenceSoulution, loadReferenceEachTimestep, fieldVariable_Register)
FeVariable_New = _StgFEM.FeVariable_New

def FeVariable_New_FromTemplate(name: 'Name', context: 'DomainContext *', templateFeVariable: 'void *', dofLayout: 'DofLayout', ics: 'void *', isReferenceSolution: 'Bool', loadReferenceEachTimestep: 'Bool', fV_Register: 'FieldVariable_Register *') -> "FeVariable *":
    return _StgFEM.FeVariable_New_FromTemplate(name, context, templateFeVariable, dofLayout, ics, isReferenceSolution, loadReferenceEachTimestep, fV_Register)
FeVariable_New_FromTemplate = _StgFEM.FeVariable_New_FromTemplate

def FeVariable_New_Full(name: 'Name', context: 'DomainContext *', feMesh: 'void *', dofLayout: 'DofLayout', bcs: 'void *', ics: 'void *', linkedDofInfo: 'void *', templateFeVariable: 'void *', fieldComponentCount: 'Index', dim: 'Dimension_Index', referenceSoulution: 'Bool', loadReferenceEachTimestep: 'Bool', communicator: 'MPI_Comm', fV_Register: 'FieldVariable_Register *') -> "FeVariable *":
    return _StgFEM.FeVariable_New_Full(name, context, feMesh, dofLayout, bcs, ics, linkedDofInfo, templateFeVariable, fieldComponentCount, dim, referenceSoulution, loadReferenceEachTimestep, communicator, fV_Register)
FeVariable_New_Full = _StgFEM.FeVariable_New_Full

def _FeVariable_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _interpolateValueAt: 'FieldVariable_InterpolateValueAtFunction *', _getMinGlobalFieldMagnitude: 'FieldVariable_GetValueFunction *', _getMaxGlobalFieldMagnitude: 'FieldVariable_GetValueFunction *', _cacheMinMaxGlobalFieldMagnitude: 'FieldVariable_CacheValuesFunction *', _getMinAndMaxLocalCoords: 'FieldVariable_GetCoordFunction *', _getMinAndMaxGlobalCoords: 'FieldVariable_GetCoordFunction *', _interpolateWithinElement: 'FeVariable_InterpolateWithinElementFunction *', _getValueAtNode: 'FeVariable_GetValueAtNodeFunction *', _syncShadowValues: 'FeVariable_SyncShadowValuesFunc *') -> "FeVariable *":
    return _StgFEM._FeVariable_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _interpolateValueAt, _getMinGlobalFieldMagnitude, _getMaxGlobalFieldMagnitude, _cacheMinMaxGlobalFieldMagnitude, _getMinAndMaxLocalCoords, _getMinAndMaxGlobalCoords, _interpolateWithinElement, _getValueAtNode, _syncShadowValues)
_FeVariable_New = _StgFEM._FeVariable_New

def _FeVariable_Init(arg1: 'FeVariable', feMesh: 'void *', dofLayout: 'DofLayout', bcs: 'void *', nonAABCs: 'Bool', ics: 'void *', linkedDofInfo: 'void *', templateFeVariable: 'void *', referenceSoulution: 'Bool', loadReferenceEachTimestep: 'Bool') -> "void":
    return _StgFEM._FeVariable_Init(arg1, feMesh, dofLayout, bcs, nonAABCs, ics, linkedDofInfo, templateFeVariable, referenceSoulution, loadReferenceEachTimestep)
_FeVariable_Init = _StgFEM._FeVariable_Init

def _FeVariable_Delete(variable: 'void *') -> "void":
    return _StgFEM._FeVariable_Delete(variable)
_FeVariable_Delete = _StgFEM._FeVariable_Delete

def _FeVariable_Print(variable: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._FeVariable_Print(variable, stream)
_FeVariable_Print = _StgFEM._FeVariable_Print

def _FeVariable_Copy(feVariable: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._FeVariable_Copy(feVariable, dest, deep, nameExt, ptrMap)
_FeVariable_Copy = _StgFEM._FeVariable_Copy

def _FeVariable_Build(variable: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeVariable_Build(variable, data)
_FeVariable_Build = _StgFEM._FeVariable_Build

def _FeVariable_AssignFromXML(variable: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._FeVariable_AssignFromXML(variable, cf, data)
_FeVariable_AssignFromXML = _StgFEM._FeVariable_AssignFromXML

def _FeVariable_Initialise(variable: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeVariable_Initialise(variable, data)
_FeVariable_Initialise = _StgFEM._FeVariable_Initialise

def _FeVariable_Execute(variable: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeVariable_Execute(variable, data)
_FeVariable_Execute = _StgFEM._FeVariable_Execute

def _FeVariable_Destroy(variable: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeVariable_Destroy(variable, data)
_FeVariable_Destroy = _StgFEM._FeVariable_Destroy

def FeVariable_ApplyBCs(variable: 'void *', data: 'void *') -> "void":
    return _StgFEM.FeVariable_ApplyBCs(variable, data)
FeVariable_ApplyBCs = _StgFEM.FeVariable_ApplyBCs

def FeVariable_IsBC(variable: 'void *', node: 'int', dof: 'int') -> "Bool":
    return _StgFEM.FeVariable_IsBC(variable, node, dof)
FeVariable_IsBC = _StgFEM.FeVariable_IsBC

def _FeVariable_InterpolateValueAt(variable: 'void *', coord: 'double const *', value: 'double *') -> "InterpolationResult":
    return _StgFEM._FeVariable_InterpolateValueAt(variable, coord, value)
_FeVariable_InterpolateValueAt = _StgFEM._FeVariable_InterpolateValueAt

def _FeVariable_GetMinGlobalFieldMagnitude(feVariable: 'void *') -> "double":
    return _StgFEM._FeVariable_GetMinGlobalFieldMagnitude(feVariable)
_FeVariable_GetMinGlobalFieldMagnitude = _StgFEM._FeVariable_GetMinGlobalFieldMagnitude

def _FeVariable_GetMaxGlobalFieldMagnitude(feVariable: 'void *') -> "double":
    return _StgFEM._FeVariable_GetMaxGlobalFieldMagnitude(feVariable)
_FeVariable_GetMaxGlobalFieldMagnitude = _StgFEM._FeVariable_GetMaxGlobalFieldMagnitude

def _FeVariable_CacheMinMaxGlobalFieldMagnitude(feVariable: 'void *') -> "void":
    return _StgFEM._FeVariable_CacheMinMaxGlobalFieldMagnitude(feVariable)
_FeVariable_CacheMinMaxGlobalFieldMagnitude = _StgFEM._FeVariable_CacheMinMaxGlobalFieldMagnitude

def _FeVariable_GetMinAndMaxLocalCoords(feVariable: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgFEM._FeVariable_GetMinAndMaxLocalCoords(feVariable, min, max)
_FeVariable_GetMinAndMaxLocalCoords = _StgFEM._FeVariable_GetMinAndMaxLocalCoords

def _FeVariable_GetMinAndMaxGlobalCoords(feVariable: 'void *', min: 'double *', max: 'double *') -> "void":
    return _StgFEM._FeVariable_GetMinAndMaxGlobalCoords(feVariable, min, max)
_FeVariable_GetMinAndMaxGlobalCoords = _StgFEM._FeVariable_GetMinAndMaxGlobalCoords

def FeVariable_PrintLocalDiscreteValues(variable: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM.FeVariable_PrintLocalDiscreteValues(variable, stream)
FeVariable_PrintLocalDiscreteValues = _StgFEM.FeVariable_PrintLocalDiscreteValues

def _FeVariable_GetValueAtNode(feVariable: 'void *', dNode_I: 'Node_DomainIndex', value: 'double *') -> "void":
    return _StgFEM._FeVariable_GetValueAtNode(feVariable, dNode_I, value)
_FeVariable_GetValueAtNode = _StgFEM._FeVariable_GetValueAtNode

def FeVariable_GetValueAtNodeGlobal(feVariable: 'void *', gNode_I: 'Node_GlobalIndex', value: 'double *') -> "void":
    return _StgFEM.FeVariable_GetValueAtNodeGlobal(feVariable, gNode_I, value)
FeVariable_GetValueAtNodeGlobal = _StgFEM.FeVariable_GetValueAtNodeGlobal

def FeVariable_GetCoordAtNodeGlobal(feVariable: 'void *', gNode_I: 'Node_GlobalIndex', coord: 'double *') -> "void":
    return _StgFEM.FeVariable_GetCoordAtNodeGlobal(feVariable, gNode_I, coord)
FeVariable_GetCoordAtNodeGlobal = _StgFEM.FeVariable_GetCoordAtNodeGlobal

def FeVariable_ZeroField(feVariable: 'void *') -> "void":
    return _StgFEM.FeVariable_ZeroField(feVariable)
FeVariable_ZeroField = _StgFEM.FeVariable_ZeroField

def FeVariable_GetElementLocalCoordAtGlobalCoord(feVariable: 'void *', globalCoord: 'double *', elLocalCoord: 'double *', elementCoordInPtr: 'Element_DomainIndex *') -> "InterpolationResult":
    return _StgFEM.FeVariable_GetElementLocalCoordAtGlobalCoord(feVariable, globalCoord, elLocalCoord, elementCoordInPtr)
FeVariable_GetElementLocalCoordAtGlobalCoord = _StgFEM.FeVariable_GetElementLocalCoordAtGlobalCoord

def FeVariable_SetValueAtNode(feVariable: 'void *', dNode_I: 'Node_DomainIndex', componentValues: 'double *') -> "void":
    return _StgFEM.FeVariable_SetValueAtNode(feVariable, dNode_I, componentValues)
FeVariable_SetValueAtNode = _StgFEM.FeVariable_SetValueAtNode

def FeVariable_GetScalarAtNode(feVariable: 'void *', lNode_I: 'Node_LocalIndex') -> "double":
    return _StgFEM.FeVariable_GetScalarAtNode(feVariable, lNode_I)
FeVariable_GetScalarAtNode = _StgFEM.FeVariable_GetScalarAtNode

def FeVariable_PrintLocalDiscreteValues_2dBox(variable: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM.FeVariable_PrintLocalDiscreteValues_2dBox(variable, stream)
FeVariable_PrintLocalDiscreteValues_2dBox = _StgFEM.FeVariable_PrintLocalDiscreteValues_2dBox

def FeVariable_InterpolateDerivativesAt(variable: 'void *', globalCoord: 'double const *', value: 'double *') -> "InterpolationResult":
    return _StgFEM.FeVariable_InterpolateDerivativesAt(variable, globalCoord, value)
FeVariable_InterpolateDerivativesAt = _StgFEM.FeVariable_InterpolateDerivativesAt

def FeVariable_InterpolateDerivativesToElLocalCoord(_feVariable: 'void *', lElement_I: 'Element_LocalIndex', elLocalCoord: 'double const *', value: 'double *') -> "void":
    return _StgFEM.FeVariable_InterpolateDerivativesToElLocalCoord(_feVariable, lElement_I, elLocalCoord, value)
FeVariable_InterpolateDerivativesToElLocalCoord = _StgFEM.FeVariable_InterpolateDerivativesToElLocalCoord

def FeVariable_InterpolateDerivatives_WithGNx(_feVariable: 'void *', lElement_I: 'Element_LocalIndex', GNx: 'double **', value: 'double *') -> "void":
    return _StgFEM.FeVariable_InterpolateDerivatives_WithGNx(_feVariable, lElement_I, GNx, value)
FeVariable_InterpolateDerivatives_WithGNx = _StgFEM.FeVariable_InterpolateDerivatives_WithGNx

def FeVariable_InterpolateValue_WithNi(_feVariable: 'void *', lElement_I: 'Element_LocalIndex', Ni: 'double *', value: 'double *') -> "void":
    return _StgFEM.FeVariable_InterpolateValue_WithNi(_feVariable, lElement_I, Ni, value)
FeVariable_InterpolateValue_WithNi = _StgFEM.FeVariable_InterpolateValue_WithNi

def FeVariable_GetMinimumSeparation(feVariable: 'void *', minSeparationPtr: 'double *', minSeparationEachDim: 'double [3]') -> "void":
    return _StgFEM.FeVariable_GetMinimumSeparation(feVariable, minSeparationPtr, minSeparationEachDim)
FeVariable_GetMinimumSeparation = _StgFEM.FeVariable_GetMinimumSeparation

def _FeVariable_SyncShadowValues(feVariable: 'void *') -> "void":
    return _StgFEM._FeVariable_SyncShadowValues(feVariable)
_FeVariable_SyncShadowValues = _StgFEM._FeVariable_SyncShadowValues

def FeVariable_PrintDomainDiscreteValues(feVariable: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM.FeVariable_PrintDomainDiscreteValues(feVariable, stream)
FeVariable_PrintDomainDiscreteValues = _StgFEM.FeVariable_PrintDomainDiscreteValues

def FeVariable_PrintCoordsAndValues(_feVariable: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM.FeVariable_PrintCoordsAndValues(_feVariable, stream)
FeVariable_PrintCoordsAndValues = _StgFEM.FeVariable_PrintCoordsAndValues

def FeVariable_InterpolateFromMeshLocalCoord(feVariable: 'void *', mesh: 'FeMesh', dElement_I: 'Element_DomainIndex', localCoord: 'double *', value: 'double *') -> "InterpolationResult":
    return _StgFEM.FeVariable_InterpolateFromMeshLocalCoord(feVariable, mesh, dElement_I, localCoord, value)
FeVariable_InterpolateFromMeshLocalCoord = _StgFEM.FeVariable_InterpolateFromMeshLocalCoord

def FeVariable_IntegrateElement_AxisIndependent(feVariable: 'void *', _swarm: 'void *', dElement_I: 'Element_DomainIndex', dim: 'Dimension_Index', axis0: 'Axis', axis1: 'Axis', axis2: 'Axis') -> "double":
    return _StgFEM.FeVariable_IntegrateElement_AxisIndependent(feVariable, _swarm, dElement_I, dim, axis0, axis1, axis2)
FeVariable_IntegrateElement_AxisIndependent = _StgFEM.FeVariable_IntegrateElement_AxisIndependent

def FeVariable_Integrate(feVariable: 'void *', _swarm: 'void *') -> "double":
    return _StgFEM.FeVariable_Integrate(feVariable, _swarm)
FeVariable_Integrate = _StgFEM.FeVariable_Integrate

def FeVariable_AverageTopLayer(feVariable: 'void *', swarm: 'void *', layerAxis: 'Axis') -> "double":
    return _StgFEM.FeVariable_AverageTopLayer(feVariable, swarm, layerAxis)
FeVariable_AverageTopLayer = _StgFEM.FeVariable_AverageTopLayer

def FeVariable_AverageBottomLayer(feVariable: 'void *', swarm: 'void *', layerAxis: 'Axis') -> "double":
    return _StgFEM.FeVariable_AverageBottomLayer(feVariable, swarm, layerAxis)
FeVariable_AverageBottomLayer = _StgFEM.FeVariable_AverageBottomLayer

def FeVariable_AverageLayer(feVariable: 'void *', swarm: 'void *', layerAxis: 'Axis', layerIndex: 'Index') -> "double":
    return _StgFEM.FeVariable_AverageLayer(feVariable, swarm, layerAxis, layerIndex)
FeVariable_AverageLayer = _StgFEM.FeVariable_AverageLayer

def FeVariable_IntegrateLayer_AxisIndependent(feVariable: 'void *', _swarm: 'void *', layerAxis: 'Axis', layerIndex: 'Index', dim: 'Dimension_Index', axis0: 'Axis', axis1: 'Axis', axis2: 'Axis') -> "double":
    return _StgFEM.FeVariable_IntegrateLayer_AxisIndependent(feVariable, _swarm, layerAxis, layerIndex, dim, axis0, axis1, axis2)
FeVariable_IntegrateLayer_AxisIndependent = _StgFEM.FeVariable_IntegrateLayer_AxisIndependent

def FeVariable_AveragePlane(feVariable: 'void *', planeAxis: 'Axis', planeHeight: 'double') -> "double":
    return _StgFEM.FeVariable_AveragePlane(feVariable, planeAxis, planeHeight)
FeVariable_AveragePlane = _StgFEM.FeVariable_AveragePlane

def FeVariable_IntegratePlane(feVariable: 'void *', planeAxis: 'Axis', planeHeight: 'double') -> "double":
    return _StgFEM.FeVariable_IntegratePlane(feVariable, planeAxis, planeHeight)
FeVariable_IntegratePlane = _StgFEM.FeVariable_IntegratePlane

def _FeVariable_InterpolateNodeValuesToElLocalCoord(arg1: 'void *', element_lI: 'Element_DomainIndex', elLocalCoord: 'double const *', value: 'double *') -> "void":
    return _StgFEM._FeVariable_InterpolateNodeValuesToElLocalCoord(arg1, element_lI, elLocalCoord, value)
_FeVariable_InterpolateNodeValuesToElLocalCoord = _StgFEM._FeVariable_InterpolateNodeValuesToElLocalCoord

def _FeVariable_PrintLocalOrDomainValues(variable: 'void *', localOrDomainCount: 'Index', stream: 'Stream *') -> "void":
    return _StgFEM._FeVariable_PrintLocalOrDomainValues(variable, localOrDomainCount, stream)
_FeVariable_PrintLocalOrDomainValues = _StgFEM._FeVariable_PrintLocalOrDomainValues

def FeVariable_SetBC(feVariable: 'void *', bc: 'void *') -> "void":
    return _StgFEM.FeVariable_SetBC(feVariable, bc)
FeVariable_SetBC = _StgFEM.FeVariable_SetBC
class C0Generator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.C0Generator__sizeOfSelf_get, _StgFEM.C0Generator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.C0Generator__deleteSelf_get, _StgFEM.C0Generator__deleteSelf_set)
    type = _swig_property(_StgFEM.C0Generator_type_get, _StgFEM.C0Generator_type_set)
    nRefs = _swig_property(_StgFEM.C0Generator_nRefs_get, _StgFEM.C0Generator_nRefs_set)
    locked = _swig_property(_StgFEM.C0Generator_locked_get, _StgFEM.C0Generator_locked_set)
    _delete = _swig_property(_StgFEM.C0Generator__delete_get, _StgFEM.C0Generator__delete_set)
    _print = _swig_property(_StgFEM.C0Generator__print_get, _StgFEM.C0Generator__print_set)
    _copy = _swig_property(_StgFEM.C0Generator__copy_get, _StgFEM.C0Generator__copy_set)
    name = _swig_property(_StgFEM.C0Generator_name_get, _StgFEM.C0Generator_name_set)
    nameAllocationType = _swig_property(_StgFEM.C0Generator_nameAllocationType_get, _StgFEM.C0Generator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.C0Generator__defaultConstructor_get, _StgFEM.C0Generator__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.C0Generator__construct_get, _StgFEM.C0Generator__construct_set)
    _build = _swig_property(_StgFEM.C0Generator__build_get, _StgFEM.C0Generator__build_set)
    _initialise = _swig_property(_StgFEM.C0Generator__initialise_get, _StgFEM.C0Generator__initialise_set)
    _execute = _swig_property(_StgFEM.C0Generator__execute_get, _StgFEM.C0Generator__execute_set)
    _destroy = _swig_property(_StgFEM.C0Generator__destroy_get, _StgFEM.C0Generator__destroy_set)
    isConstructed = _swig_property(_StgFEM.C0Generator_isConstructed_get, _StgFEM.C0Generator_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.C0Generator_isBuilt_get, _StgFEM.C0Generator_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.C0Generator_isInitialised_get, _StgFEM.C0Generator_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.C0Generator_hasExecuted_get, _StgFEM.C0Generator_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.C0Generator_isDestroyed_get, _StgFEM.C0Generator_isDestroyed_set)
    constructType = _swig_property(_StgFEM.C0Generator_constructType_get, _StgFEM.C0Generator_constructType_set)
    buildType = _swig_property(_StgFEM.C0Generator_buildType_get, _StgFEM.C0Generator_buildType_set)
    initialiseType = _swig_property(_StgFEM.C0Generator_initialiseType_get, _StgFEM.C0Generator_initialiseType_set)
    executeType = _swig_property(_StgFEM.C0Generator_executeType_get, _StgFEM.C0Generator_executeType_set)
    destroyType = _swig_property(_StgFEM.C0Generator_destroyType_get, _StgFEM.C0Generator_destroyType_set)
    context = _swig_property(_StgFEM.C0Generator_context_get, _StgFEM.C0Generator_context_set)
    setDimSizeFunc = _swig_property(_StgFEM.C0Generator_setDimSizeFunc_get, _StgFEM.C0Generator_setDimSizeFunc_set)
    generateFunc = _swig_property(_StgFEM.C0Generator_generateFunc_get, _StgFEM.C0Generator_generateFunc_set)
    mpiComm = _swig_property(_StgFEM.C0Generator_mpiComm_get, _StgFEM.C0Generator_mpiComm_set)
    nMeshes = _swig_property(_StgFEM.C0Generator_nMeshes_get, _StgFEM.C0Generator_nMeshes_set)
    meshes = _swig_property(_StgFEM.C0Generator_meshes_get, _StgFEM.C0Generator_meshes_set)
    nDims = _swig_property(_StgFEM.C0Generator_nDims_get, _StgFEM.C0Generator_nDims_set)
    enabledDims = _swig_property(_StgFEM.C0Generator_enabledDims_get, _StgFEM.C0Generator_enabledDims_set)
    enabledInc = _swig_property(_StgFEM.C0Generator_enabledInc_get, _StgFEM.C0Generator_enabledInc_set)
    elMesh = _swig_property(_StgFEM.C0Generator_elMesh_get, _StgFEM.C0Generator_elMesh_set)

    def __init__(self):
        _StgFEM.C0Generator_swiginit(self, _StgFEM.new_C0Generator())
    __swig_destroy__ = _StgFEM.delete_C0Generator
C0Generator_swigregister = _StgFEM.C0Generator_swigregister
C0Generator_swigregister(C0Generator)
C0Generator_Type = cvar.C0Generator_Type


def C0Generator_New(name: 'Name', context: 'AbstractContext *') -> "C0Generator *":
    return _StgFEM.C0Generator_New(name, context)
C0Generator_New = _StgFEM.C0Generator_New

def _C0Generator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setDimSizeFunc: 'MeshGenerator_SetDimSizeFunc *', generateFunc: 'MeshGenerator_GenerateFunc *') -> "C0Generator *":
    return _StgFEM._C0Generator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setDimSizeFunc, generateFunc)
_C0Generator_New = _StgFEM._C0Generator_New

def _C0Generator_Init(arg1: 'C0Generator') -> "void":
    return _StgFEM._C0Generator_Init(arg1)
_C0Generator_Init = _StgFEM._C0Generator_Init

def _C0Generator_Delete(generator: 'void *') -> "void":
    return _StgFEM._C0Generator_Delete(generator)
_C0Generator_Delete = _StgFEM._C0Generator_Delete

def _C0Generator_Print(generator: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._C0Generator_Print(generator, stream)
_C0Generator_Print = _StgFEM._C0Generator_Print

def _C0Generator_AssignFromXML(generator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._C0Generator_AssignFromXML(generator, cf, data)
_C0Generator_AssignFromXML = _StgFEM._C0Generator_AssignFromXML

def _C0Generator_Build(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._C0Generator_Build(generator, data)
_C0Generator_Build = _StgFEM._C0Generator_Build

def _C0Generator_Initialise(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._C0Generator_Initialise(generator, data)
_C0Generator_Initialise = _StgFEM._C0Generator_Initialise

def _C0Generator_Execute(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._C0Generator_Execute(generator, data)
_C0Generator_Execute = _StgFEM._C0Generator_Execute

def _C0Generator_Destroy(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._C0Generator_Destroy(generator, data)
_C0Generator_Destroy = _StgFEM._C0Generator_Destroy

def C0Generator_Generate(generator: 'void *', _mesh: 'void *') -> "void":
    return _StgFEM.C0Generator_Generate(generator, _mesh)
C0Generator_Generate = _StgFEM.C0Generator_Generate

def C0Generator_SetElementMesh(generator: 'void *', mesh: 'void *') -> "void":
    return _StgFEM.C0Generator_SetElementMesh(generator, mesh)
C0Generator_SetElementMesh = _StgFEM.C0Generator_SetElementMesh

def C0Generator_BuildTopology(arg1: 'C0Generator', mesh: 'FeMesh') -> "void":
    return _StgFEM.C0Generator_BuildTopology(arg1, mesh)
C0Generator_BuildTopology = _StgFEM.C0Generator_BuildTopology

def C0Generator_BuildGeometry(arg1: 'C0Generator', mesh: 'FeMesh') -> "void":
    return _StgFEM.C0Generator_BuildGeometry(arg1, mesh)
C0Generator_BuildGeometry = _StgFEM.C0Generator_BuildGeometry

def C0Generator_BuildElementTypes(arg1: 'C0Generator', mesh: 'FeMesh') -> "void":
    return _StgFEM.C0Generator_BuildElementTypes(arg1, mesh)
C0Generator_BuildElementTypes = _StgFEM.C0Generator_BuildElementTypes
class C2Generator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.C2Generator__sizeOfSelf_get, _StgFEM.C2Generator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.C2Generator__deleteSelf_get, _StgFEM.C2Generator__deleteSelf_set)
    type = _swig_property(_StgFEM.C2Generator_type_get, _StgFEM.C2Generator_type_set)
    nRefs = _swig_property(_StgFEM.C2Generator_nRefs_get, _StgFEM.C2Generator_nRefs_set)
    locked = _swig_property(_StgFEM.C2Generator_locked_get, _StgFEM.C2Generator_locked_set)
    _delete = _swig_property(_StgFEM.C2Generator__delete_get, _StgFEM.C2Generator__delete_set)
    _print = _swig_property(_StgFEM.C2Generator__print_get, _StgFEM.C2Generator__print_set)
    _copy = _swig_property(_StgFEM.C2Generator__copy_get, _StgFEM.C2Generator__copy_set)
    name = _swig_property(_StgFEM.C2Generator_name_get, _StgFEM.C2Generator_name_set)
    nameAllocationType = _swig_property(_StgFEM.C2Generator_nameAllocationType_get, _StgFEM.C2Generator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.C2Generator__defaultConstructor_get, _StgFEM.C2Generator__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.C2Generator__construct_get, _StgFEM.C2Generator__construct_set)
    _build = _swig_property(_StgFEM.C2Generator__build_get, _StgFEM.C2Generator__build_set)
    _initialise = _swig_property(_StgFEM.C2Generator__initialise_get, _StgFEM.C2Generator__initialise_set)
    _execute = _swig_property(_StgFEM.C2Generator__execute_get, _StgFEM.C2Generator__execute_set)
    _destroy = _swig_property(_StgFEM.C2Generator__destroy_get, _StgFEM.C2Generator__destroy_set)
    isConstructed = _swig_property(_StgFEM.C2Generator_isConstructed_get, _StgFEM.C2Generator_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.C2Generator_isBuilt_get, _StgFEM.C2Generator_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.C2Generator_isInitialised_get, _StgFEM.C2Generator_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.C2Generator_hasExecuted_get, _StgFEM.C2Generator_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.C2Generator_isDestroyed_get, _StgFEM.C2Generator_isDestroyed_set)
    constructType = _swig_property(_StgFEM.C2Generator_constructType_get, _StgFEM.C2Generator_constructType_set)
    buildType = _swig_property(_StgFEM.C2Generator_buildType_get, _StgFEM.C2Generator_buildType_set)
    initialiseType = _swig_property(_StgFEM.C2Generator_initialiseType_get, _StgFEM.C2Generator_initialiseType_set)
    executeType = _swig_property(_StgFEM.C2Generator_executeType_get, _StgFEM.C2Generator_executeType_set)
    destroyType = _swig_property(_StgFEM.C2Generator_destroyType_get, _StgFEM.C2Generator_destroyType_set)
    context = _swig_property(_StgFEM.C2Generator_context_get, _StgFEM.C2Generator_context_set)
    setDimSizeFunc = _swig_property(_StgFEM.C2Generator_setDimSizeFunc_get, _StgFEM.C2Generator_setDimSizeFunc_set)
    generateFunc = _swig_property(_StgFEM.C2Generator_generateFunc_get, _StgFEM.C2Generator_generateFunc_set)
    mpiComm = _swig_property(_StgFEM.C2Generator_mpiComm_get, _StgFEM.C2Generator_mpiComm_set)
    nMeshes = _swig_property(_StgFEM.C2Generator_nMeshes_get, _StgFEM.C2Generator_nMeshes_set)
    meshes = _swig_property(_StgFEM.C2Generator_meshes_get, _StgFEM.C2Generator_meshes_set)
    nDims = _swig_property(_StgFEM.C2Generator_nDims_get, _StgFEM.C2Generator_nDims_set)
    enabledDims = _swig_property(_StgFEM.C2Generator_enabledDims_get, _StgFEM.C2Generator_enabledDims_set)
    enabledInc = _swig_property(_StgFEM.C2Generator_enabledInc_get, _StgFEM.C2Generator_enabledInc_set)
    setTopologyParamsFunc = _swig_property(_StgFEM.C2Generator_setTopologyParamsFunc_get, _StgFEM.C2Generator_setTopologyParamsFunc_set)
    genElementsFunc = _swig_property(_StgFEM.C2Generator_genElementsFunc_get, _StgFEM.C2Generator_genElementsFunc_set)
    genFacesFunc = _swig_property(_StgFEM.C2Generator_genFacesFunc_get, _StgFEM.C2Generator_genFacesFunc_set)
    genEdgesFunc = _swig_property(_StgFEM.C2Generator_genEdgesFunc_get, _StgFEM.C2Generator_genEdgesFunc_set)
    genVerticesFunc = _swig_property(_StgFEM.C2Generator_genVerticesFunc_get, _StgFEM.C2Generator_genVerticesFunc_set)
    genElementVertexIncFunc = _swig_property(_StgFEM.C2Generator_genElementVertexIncFunc_get, _StgFEM.C2Generator_genElementVertexIncFunc_set)
    genVolumeEdgeIncFunc = _swig_property(_StgFEM.C2Generator_genVolumeEdgeIncFunc_get, _StgFEM.C2Generator_genVolumeEdgeIncFunc_set)
    genVolumeFaceIncFunc = _swig_property(_StgFEM.C2Generator_genVolumeFaceIncFunc_get, _StgFEM.C2Generator_genVolumeFaceIncFunc_set)
    genFaceVertexIncFunc = _swig_property(_StgFEM.C2Generator_genFaceVertexIncFunc_get, _StgFEM.C2Generator_genFaceVertexIncFunc_set)
    genFaceEdgeIncFunc = _swig_property(_StgFEM.C2Generator_genFaceEdgeIncFunc_get, _StgFEM.C2Generator_genFaceEdgeIncFunc_set)
    genEdgeVertexIncFunc = _swig_property(_StgFEM.C2Generator_genEdgeVertexIncFunc_get, _StgFEM.C2Generator_genEdgeVertexIncFunc_set)
    genElementTypesFunc = _swig_property(_StgFEM.C2Generator_genElementTypesFunc_get, _StgFEM.C2Generator_genElementTypesFunc_set)
    calcGeomFunc = _swig_property(_StgFEM.C2Generator_calcGeomFunc_get, _StgFEM.C2Generator_calcGeomFunc_set)
    comm = _swig_property(_StgFEM.C2Generator_comm_get, _StgFEM.C2Generator_comm_set)
    regular = _swig_property(_StgFEM.C2Generator_regular_get, _StgFEM.C2Generator_regular_set)
    periodic = _swig_property(_StgFEM.C2Generator_periodic_get, _StgFEM.C2Generator_periodic_set)
    maxDecompDims = _swig_property(_StgFEM.C2Generator_maxDecompDims_get, _StgFEM.C2Generator_maxDecompDims_set)
    minDecomp = _swig_property(_StgFEM.C2Generator_minDecomp_get, _StgFEM.C2Generator_minDecomp_set)
    maxDecomp = _swig_property(_StgFEM.C2Generator_maxDecomp_get, _StgFEM.C2Generator_maxDecomp_set)
    shadowDepth = _swig_property(_StgFEM.C2Generator_shadowDepth_get, _StgFEM.C2Generator_shadowDepth_set)
    crdMin = _swig_property(_StgFEM.C2Generator_crdMin_get, _StgFEM.C2Generator_crdMin_set)
    crdMax = _swig_property(_StgFEM.C2Generator_crdMax_get, _StgFEM.C2Generator_crdMax_set)
    vertGrid = _swig_property(_StgFEM.C2Generator_vertGrid_get, _StgFEM.C2Generator_vertGrid_set)
    elGrid = _swig_property(_StgFEM.C2Generator_elGrid_get, _StgFEM.C2Generator_elGrid_set)
    procGrid = _swig_property(_StgFEM.C2Generator_procGrid_get, _StgFEM.C2Generator_procGrid_set)
    origin = _swig_property(_StgFEM.C2Generator_origin_get, _StgFEM.C2Generator_origin_set)
    range = _swig_property(_StgFEM.C2Generator_range_get, _StgFEM.C2Generator_range_set)
    vertOrigin = _swig_property(_StgFEM.C2Generator_vertOrigin_get, _StgFEM.C2Generator_vertOrigin_set)
    vertRange = _swig_property(_StgFEM.C2Generator_vertRange_get, _StgFEM.C2Generator_vertRange_set)
    contactDepth = _swig_property(_StgFEM.C2Generator_contactDepth_get, _StgFEM.C2Generator_contactDepth_set)
    contactGeom = _swig_property(_StgFEM.C2Generator_contactGeom_get, _StgFEM.C2Generator_contactGeom_set)

    def __init__(self):
        _StgFEM.C2Generator_swiginit(self, _StgFEM.new_C2Generator())
    __swig_destroy__ = _StgFEM.delete_C2Generator
C2Generator_swigregister = _StgFEM.C2Generator_swigregister
C2Generator_swigregister(C2Generator)
C2Generator_Type = cvar.C2Generator_Type


def C2Generator_New(name: 'Name', context: 'AbstractContext *') -> "C2Generator *":
    return _StgFEM.C2Generator_New(name, context)
C2Generator_New = _StgFEM.C2Generator_New

def _C2Generator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setDimSizeFunc: 'MeshGenerator_SetDimSizeFunc *', generateFunc: 'MeshGenerator_GenerateFunc *', setTopologyParamsFunc: 'CartesianGenerator_SetTopologyParamsFunc *', genElementsFunc: 'CartesianGenerator_GenElementsFunc *', genFacesFunc: 'CartesianGenerator_GenFacesFunc *', genEdgesFunc: 'CartesianGenerator_GenEdgesFunc *', genVerticesFunc: 'CartesianGenerator_GenVerticesFunc *', genElementVertexIncFunc: 'CartesianGenerator_GenElementVertexIncFunc *', genVolumeEdgeIncFunc: 'CartesianGenerator_GenVolumeEdgeIncFunc *', genVolumeFaceIncFunc: 'CartesianGenerator_GenVolumeFaceIncFunc *', genFaceVertexIncFunc: 'CartesianGenerator_GenFaceVertexIncFunc *', genFaceEdgeIncFunc: 'CartesianGenerator_GenFaceEdgeIncFunc *', genEdgeVertexIncFunc: 'CartesianGenerator_GenEdgeVertexIncFunc *', genElementTypesFunc: 'CartesianGenerator_GenElementTypesFunc *', calcGeomFunc: 'CartesianGenerator_CalcGeomFunc *') -> "C2Generator *":
    return _StgFEM._C2Generator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setDimSizeFunc, generateFunc, setTopologyParamsFunc, genElementsFunc, genFacesFunc, genEdgesFunc, genVerticesFunc, genElementVertexIncFunc, genVolumeEdgeIncFunc, genVolumeFaceIncFunc, genFaceVertexIncFunc, genFaceEdgeIncFunc, genEdgeVertexIncFunc, genElementTypesFunc, calcGeomFunc)
_C2Generator_New = _StgFEM._C2Generator_New

def _C2Generator_Init(arg1: 'C2Generator') -> "void":
    return _StgFEM._C2Generator_Init(arg1)
_C2Generator_Init = _StgFEM._C2Generator_Init

def _C2Generator_Delete(meshGenerator: 'void *') -> "void":
    return _StgFEM._C2Generator_Delete(meshGenerator)
_C2Generator_Delete = _StgFEM._C2Generator_Delete

def _C2Generator_Print(meshGenerator: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._C2Generator_Print(meshGenerator, stream)
_C2Generator_Print = _StgFEM._C2Generator_Print

def _C2Generator_AssignFromXML(meshGenerator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._C2Generator_AssignFromXML(meshGenerator, cf, data)
_C2Generator_AssignFromXML = _StgFEM._C2Generator_AssignFromXML

def _C2Generator_Build(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._C2Generator_Build(meshGenerator, data)
_C2Generator_Build = _StgFEM._C2Generator_Build

def _C2Generator_Initialise(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._C2Generator_Initialise(meshGenerator, data)
_C2Generator_Initialise = _StgFEM._C2Generator_Initialise

def _C2Generator_Execute(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._C2Generator_Execute(meshGenerator, data)
_C2Generator_Execute = _StgFEM._C2Generator_Execute

def _C2Generator_Destroy(meshGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._C2Generator_Destroy(meshGenerator, data)
_C2Generator_Destroy = _StgFEM._C2Generator_Destroy

def C2Generator_SetTopologyParams(meshGenerator: 'void *', sizes: 'unsigned int *', maxDecompDims: 'unsigned int', minDecomp: 'unsigned int *', maxDecomp: 'unsigned int *') -> "void":
    return _StgFEM.C2Generator_SetTopologyParams(meshGenerator, sizes, maxDecompDims, minDecomp, maxDecomp)
C2Generator_SetTopologyParams = _StgFEM.C2Generator_SetTopologyParams

def C2Generator_GenElementVertexInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgFEM.C2Generator_GenElementVertexInc(meshGenerator, topo, grids)
C2Generator_GenElementVertexInc = _StgFEM.C2Generator_GenElementVertexInc

def C2Generator_GenFaceVertexInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgFEM.C2Generator_GenFaceVertexInc(meshGenerator, topo, grids)
C2Generator_GenFaceVertexInc = _StgFEM.C2Generator_GenFaceVertexInc

def C2Generator_GenEdgeVertexInc(meshGenerator: 'void *', topo: 'IGraph *', grids: 'Grid ***') -> "void":
    return _StgFEM.C2Generator_GenEdgeVertexInc(meshGenerator, topo, grids)
C2Generator_GenEdgeVertexInc = _StgFEM.C2Generator_GenEdgeVertexInc

def C2Generator_GenElementTypes(meshGenerator: 'void *', mesh: 'Mesh') -> "void":
    return _StgFEM.C2Generator_GenElementTypes(meshGenerator, mesh)
C2Generator_GenElementTypes = _StgFEM.C2Generator_GenElementTypes
class RemappedNodeInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    remappedGlobal = _swig_property(_StgFEM.RemappedNodeInfo_remappedGlobal_get, _StgFEM.RemappedNodeInfo_remappedGlobal_set)
    domain = _swig_property(_StgFEM.RemappedNodeInfo_domain_get, _StgFEM.RemappedNodeInfo_domain_set)

    def __init__(self):
        _StgFEM.RemappedNodeInfo_swiginit(self, _StgFEM.new_RemappedNodeInfo())
    __swig_destroy__ = _StgFEM.delete_RemappedNodeInfo
RemappedNodeInfo_swigregister = _StgFEM.RemappedNodeInfo_swigregister
RemappedNodeInfo_swigregister(RemappedNodeInfo)
FeEquationNumber_Type = cvar.FeEquationNumber_Type

class FeEquationNumber(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.FeEquationNumber__sizeOfSelf_get, _StgFEM.FeEquationNumber__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.FeEquationNumber__deleteSelf_get, _StgFEM.FeEquationNumber__deleteSelf_set)
    type = _swig_property(_StgFEM.FeEquationNumber_type_get, _StgFEM.FeEquationNumber_type_set)
    nRefs = _swig_property(_StgFEM.FeEquationNumber_nRefs_get, _StgFEM.FeEquationNumber_nRefs_set)
    locked = _swig_property(_StgFEM.FeEquationNumber_locked_get, _StgFEM.FeEquationNumber_locked_set)
    _delete = _swig_property(_StgFEM.FeEquationNumber__delete_get, _StgFEM.FeEquationNumber__delete_set)
    _print = _swig_property(_StgFEM.FeEquationNumber__print_get, _StgFEM.FeEquationNumber__print_set)
    _copy = _swig_property(_StgFEM.FeEquationNumber__copy_get, _StgFEM.FeEquationNumber__copy_set)
    name = _swig_property(_StgFEM.FeEquationNumber_name_get, _StgFEM.FeEquationNumber_name_set)
    nameAllocationType = _swig_property(_StgFEM.FeEquationNumber_nameAllocationType_get, _StgFEM.FeEquationNumber_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.FeEquationNumber__defaultConstructor_get, _StgFEM.FeEquationNumber__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.FeEquationNumber__construct_get, _StgFEM.FeEquationNumber__construct_set)
    _build = _swig_property(_StgFEM.FeEquationNumber__build_get, _StgFEM.FeEquationNumber__build_set)
    _initialise = _swig_property(_StgFEM.FeEquationNumber__initialise_get, _StgFEM.FeEquationNumber__initialise_set)
    _execute = _swig_property(_StgFEM.FeEquationNumber__execute_get, _StgFEM.FeEquationNumber__execute_set)
    _destroy = _swig_property(_StgFEM.FeEquationNumber__destroy_get, _StgFEM.FeEquationNumber__destroy_set)
    isConstructed = _swig_property(_StgFEM.FeEquationNumber_isConstructed_get, _StgFEM.FeEquationNumber_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.FeEquationNumber_isBuilt_get, _StgFEM.FeEquationNumber_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.FeEquationNumber_isInitialised_get, _StgFEM.FeEquationNumber_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.FeEquationNumber_hasExecuted_get, _StgFEM.FeEquationNumber_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.FeEquationNumber_isDestroyed_get, _StgFEM.FeEquationNumber_isDestroyed_set)
    constructType = _swig_property(_StgFEM.FeEquationNumber_constructType_get, _StgFEM.FeEquationNumber_constructType_set)
    buildType = _swig_property(_StgFEM.FeEquationNumber_buildType_get, _StgFEM.FeEquationNumber_buildType_set)
    initialiseType = _swig_property(_StgFEM.FeEquationNumber_initialiseType_get, _StgFEM.FeEquationNumber_initialiseType_set)
    executeType = _swig_property(_StgFEM.FeEquationNumber_executeType_get, _StgFEM.FeEquationNumber_executeType_set)
    destroyType = _swig_property(_StgFEM.FeEquationNumber_destroyType_get, _StgFEM.FeEquationNumber_destroyType_set)
    context = _swig_property(_StgFEM.FeEquationNumber_context_get, _StgFEM.FeEquationNumber_context_set)
    debug = _swig_property(_StgFEM.FeEquationNumber_debug_get, _StgFEM.FeEquationNumber_debug_set)
    debugLM = _swig_property(_StgFEM.FeEquationNumber_debugLM_get, _StgFEM.FeEquationNumber_debugLM_set)
    warning = _swig_property(_StgFEM.FeEquationNumber_warning_get, _StgFEM.FeEquationNumber_warning_set)
    feMesh = _swig_property(_StgFEM.FeEquationNumber_feMesh_get, _StgFEM.FeEquationNumber_feMesh_set)
    dofLayout = _swig_property(_StgFEM.FeEquationNumber_dofLayout_get, _StgFEM.FeEquationNumber_dofLayout_set)
    linkedDofInfo = _swig_property(_StgFEM.FeEquationNumber_linkedDofInfo_get, _StgFEM.FeEquationNumber_linkedDofInfo_set)
    bcs = _swig_property(_StgFEM.FeEquationNumber_bcs_get, _StgFEM.FeEquationNumber_bcs_set)
    mapNodeDof2Eq = _swig_property(_StgFEM.FeEquationNumber_mapNodeDof2Eq_get, _StgFEM.FeEquationNumber_mapNodeDof2Eq_set)
    _highestLocalEqNum = _swig_property(_StgFEM.FeEquationNumber__highestLocalEqNum_get, _StgFEM.FeEquationNumber__highestLocalEqNum_set)
    _lowestLocalEqNum = _swig_property(_StgFEM.FeEquationNumber__lowestLocalEqNum_get, _StgFEM.FeEquationNumber__lowestLocalEqNum_set)
    _lowestGlobalEqNums = _swig_property(_StgFEM.FeEquationNumber__lowestGlobalEqNums_get, _StgFEM.FeEquationNumber__lowestGlobalEqNums_set)
    _eqNumsPerProcDivisor = _swig_property(_StgFEM.FeEquationNumber__eqNumsPerProcDivisor_get, _StgFEM.FeEquationNumber__eqNumsPerProcDivisor_set)
    _eqNumsRemainder = _swig_property(_StgFEM.FeEquationNumber__eqNumsRemainder_get, _StgFEM.FeEquationNumber__eqNumsRemainder_set)
    _remNotAddedChangeover = _swig_property(_StgFEM.FeEquationNumber__remNotAddedChangeover_get, _StgFEM.FeEquationNumber__remNotAddedChangeover_set)
    ownedMap = _swig_property(_StgFEM.FeEquationNumber_ownedMap_get, _StgFEM.FeEquationNumber_ownedMap_set)
    firstOwnedEqNum = _swig_property(_StgFEM.FeEquationNumber_firstOwnedEqNum_get, _StgFEM.FeEquationNumber_firstOwnedEqNum_set)
    lastOwnedEqNum = _swig_property(_StgFEM.FeEquationNumber_lastOwnedEqNum_get, _StgFEM.FeEquationNumber_lastOwnedEqNum_set)
    localEqNumsOwnedCount = _swig_property(_StgFEM.FeEquationNumber_localEqNumsOwnedCount_get, _StgFEM.FeEquationNumber_localEqNumsOwnedCount_set)
    globalSumUnconstrainedDofs = _swig_property(_StgFEM.FeEquationNumber_globalSumUnconstrainedDofs_get, _StgFEM.FeEquationNumber_globalSumUnconstrainedDofs_set)
    locationMatrix = _swig_property(_StgFEM.FeEquationNumber_locationMatrix_get, _StgFEM.FeEquationNumber_locationMatrix_set)
    locationMatrixBuilt = _swig_property(_StgFEM.FeEquationNumber_locationMatrixBuilt_get, _StgFEM.FeEquationNumber_locationMatrixBuilt_set)
    remappingActivated = _swig_property(_StgFEM.FeEquationNumber_remappingActivated_get, _StgFEM.FeEquationNumber_remappingActivated_set)
    removeBCs = _swig_property(_StgFEM.FeEquationNumber_removeBCs_get, _StgFEM.FeEquationNumber_removeBCs_set)
    periodic = _swig_property(_StgFEM.FeEquationNumber_periodic_get, _StgFEM.FeEquationNumber_periodic_set)
    bcEqNums = _swig_property(_StgFEM.FeEquationNumber_bcEqNums_get, _StgFEM.FeEquationNumber_bcEqNums_set)
    nDomainEls = _swig_property(_StgFEM.FeEquationNumber_nDomainEls_get, _StgFEM.FeEquationNumber_nDomainEls_set)

    def __init__(self):
        _StgFEM.FeEquationNumber_swiginit(self, _StgFEM.new_FeEquationNumber())
    __swig_destroy__ = _StgFEM.delete_FeEquationNumber
FeEquationNumber_swigregister = _StgFEM.FeEquationNumber_swigregister
FeEquationNumber_swigregister(FeEquationNumber)


def FeEquationNumber_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM.FeEquationNumber_DefaultNew(name)
FeEquationNumber_DefaultNew = _StgFEM.FeEquationNumber_DefaultNew

def FeEquationNumber_New(name: 'Name', context: 'DomainContext *', feMesh: 'void *', dofLayout: 'DofLayout', bcs: '_VariableCondition', linkedDofInfo: 'LinkedDofInfo *') -> "FeEquationNumber *":
    return _StgFEM.FeEquationNumber_New(name, context, feMesh, dofLayout, bcs, linkedDofInfo)
FeEquationNumber_New = _StgFEM.FeEquationNumber_New

def _FeEquationNumber_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "FeEquationNumber *":
    return _StgFEM._FeEquationNumber_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_FeEquationNumber_New = _StgFEM._FeEquationNumber_New

def _FeEquationNumber_Init(arg1: 'FeEquationNumber', context: 'DomainContext *', feMesh: 'void *', dofLayout: 'DofLayout', bcs: '_VariableCondition', linkedDofInfo: 'LinkedDofInfo *') -> "void":
    return _StgFEM._FeEquationNumber_Init(arg1, context, feMesh, dofLayout, bcs, linkedDofInfo)
_FeEquationNumber_Init = _StgFEM._FeEquationNumber_Init

def _FeEquationNumber_Delete(feEquationNumber: 'void *') -> "void":
    return _StgFEM._FeEquationNumber_Delete(feEquationNumber)
_FeEquationNumber_Delete = _StgFEM._FeEquationNumber_Delete

def _FeEquationNumber_Print(feEquationNumber: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._FeEquationNumber_Print(feEquationNumber, stream)
_FeEquationNumber_Print = _StgFEM._FeEquationNumber_Print

def _FeEquationNumber_AssignFromXML(feEquationNumber: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._FeEquationNumber_AssignFromXML(feEquationNumber, cf, data)
_FeEquationNumber_AssignFromXML = _StgFEM._FeEquationNumber_AssignFromXML

def _FeEquationNumber_Execute(feEquationNumber: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeEquationNumber_Execute(feEquationNumber, data)
_FeEquationNumber_Execute = _StgFEM._FeEquationNumber_Execute

def _FeEquationNumber_Destroy(feEquationNumber: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeEquationNumber_Destroy(feEquationNumber, data)
_FeEquationNumber_Destroy = _StgFEM._FeEquationNumber_Destroy

def _FeEquationNumber_Copy(feEquationNumber: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._FeEquationNumber_Copy(feEquationNumber, dest, deep, nameExt, ptrMap)
_FeEquationNumber_Copy = _StgFEM._FeEquationNumber_Copy

def _FeEquationNumber_Build(feEquationNumber: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeEquationNumber_Build(feEquationNumber, data)
_FeEquationNumber_Build = _StgFEM._FeEquationNumber_Build

def _FeEquationNumber_Initialise(feEquationNumber: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeEquationNumber_Initialise(feEquationNumber, data)
_FeEquationNumber_Initialise = _StgFEM._FeEquationNumber_Initialise

def FeEquationNumber_CalculateOwningProcessorOfEqNum(arg1: 'void *', eqNum: 'Dof_EquationNumber') -> "Partition_Index":
    return _StgFEM.FeEquationNumber_CalculateOwningProcessorOfEqNum(arg1, eqNum)
FeEquationNumber_CalculateOwningProcessorOfEqNum = _StgFEM.FeEquationNumber_CalculateOwningProcessorOfEqNum

def FeEquationNumber_BuildLocationMatrix(feEquationNumber: 'void *') -> "void":
    return _StgFEM.FeEquationNumber_BuildLocationMatrix(feEquationNumber)
FeEquationNumber_BuildLocationMatrix = _StgFEM.FeEquationNumber_BuildLocationMatrix

def FeEquationNumber_CalculateActiveEqCountAtNode(feEquationNumber: 'void *', dNode_I: 'Node_DomainIndex', lowestActiveEqNumAtNodePtr: 'Dof_EquationNumber *') -> "Index":
    return _StgFEM.FeEquationNumber_CalculateActiveEqCountAtNode(feEquationNumber, dNode_I, lowestActiveEqNumAtNodePtr)
FeEquationNumber_CalculateActiveEqCountAtNode = _StgFEM.FeEquationNumber_CalculateActiveEqCountAtNode

def FeEquationNumber_PrintmapNodeDof2Eq(feEquationNumber: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM.FeEquationNumber_PrintmapNodeDof2Eq(feEquationNumber, stream)
FeEquationNumber_PrintmapNodeDof2Eq = _StgFEM.FeEquationNumber_PrintmapNodeDof2Eq

def _FeEquationNumber_Create(_self: 'void *', removeBCs: 'Bool') -> "FeEquationNumber *":
    return _StgFEM._FeEquationNumber_Create(_self, removeBCs)
_FeEquationNumber_Create = _StgFEM._FeEquationNumber_Create

def FeEquationNumber_PrintLocationMatrix(feEquationNumber: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM.FeEquationNumber_PrintLocationMatrix(feEquationNumber, stream)
FeEquationNumber_PrintLocationMatrix = _StgFEM.FeEquationNumber_PrintLocationMatrix

def FeEquationNumber_BuildWithTopology(arg1: 'FeEquationNumber') -> "void":
    return _StgFEM.FeEquationNumber_BuildWithTopology(arg1)
FeEquationNumber_BuildWithTopology = _StgFEM.FeEquationNumber_BuildWithTopology

def FeEquationNumber_BuildWithDave(arg1: 'FeEquationNumber') -> "void":
    return _StgFEM.FeEquationNumber_BuildWithDave(arg1)
FeEquationNumber_BuildWithDave = _StgFEM.FeEquationNumber_BuildWithDave
class FeMesh(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.FeMesh__sizeOfSelf_get, _StgFEM.FeMesh__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.FeMesh__deleteSelf_get, _StgFEM.FeMesh__deleteSelf_set)
    type = _swig_property(_StgFEM.FeMesh_type_get, _StgFEM.FeMesh_type_set)
    nRefs = _swig_property(_StgFEM.FeMesh_nRefs_get, _StgFEM.FeMesh_nRefs_set)
    locked = _swig_property(_StgFEM.FeMesh_locked_get, _StgFEM.FeMesh_locked_set)
    _delete = _swig_property(_StgFEM.FeMesh__delete_get, _StgFEM.FeMesh__delete_set)
    _print = _swig_property(_StgFEM.FeMesh__print_get, _StgFEM.FeMesh__print_set)
    _copy = _swig_property(_StgFEM.FeMesh__copy_get, _StgFEM.FeMesh__copy_set)
    name = _swig_property(_StgFEM.FeMesh_name_get, _StgFEM.FeMesh_name_set)
    nameAllocationType = _swig_property(_StgFEM.FeMesh_nameAllocationType_get, _StgFEM.FeMesh_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.FeMesh__defaultConstructor_get, _StgFEM.FeMesh__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.FeMesh__construct_get, _StgFEM.FeMesh__construct_set)
    _build = _swig_property(_StgFEM.FeMesh__build_get, _StgFEM.FeMesh__build_set)
    _initialise = _swig_property(_StgFEM.FeMesh__initialise_get, _StgFEM.FeMesh__initialise_set)
    _execute = _swig_property(_StgFEM.FeMesh__execute_get, _StgFEM.FeMesh__execute_set)
    _destroy = _swig_property(_StgFEM.FeMesh__destroy_get, _StgFEM.FeMesh__destroy_set)
    isConstructed = _swig_property(_StgFEM.FeMesh_isConstructed_get, _StgFEM.FeMesh_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.FeMesh_isBuilt_get, _StgFEM.FeMesh_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.FeMesh_isInitialised_get, _StgFEM.FeMesh_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.FeMesh_hasExecuted_get, _StgFEM.FeMesh_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.FeMesh_isDestroyed_get, _StgFEM.FeMesh_isDestroyed_set)
    constructType = _swig_property(_StgFEM.FeMesh_constructType_get, _StgFEM.FeMesh_constructType_set)
    buildType = _swig_property(_StgFEM.FeMesh_buildType_get, _StgFEM.FeMesh_buildType_set)
    initialiseType = _swig_property(_StgFEM.FeMesh_initialiseType_get, _StgFEM.FeMesh_initialiseType_set)
    executeType = _swig_property(_StgFEM.FeMesh_executeType_get, _StgFEM.FeMesh_executeType_set)
    destroyType = _swig_property(_StgFEM.FeMesh_destroyType_get, _StgFEM.FeMesh_destroyType_set)
    topo = _swig_property(_StgFEM.FeMesh_topo_get, _StgFEM.FeMesh_topo_set)
    vertices = _swig_property(_StgFEM.FeMesh_vertices_get, _StgFEM.FeMesh_vertices_set)
    verticesVariable = _swig_property(_StgFEM.FeMesh_verticesVariable_get, _StgFEM.FeMesh_verticesVariable_set)
    elgid = _swig_property(_StgFEM.FeMesh_elgid_get, _StgFEM.FeMesh_elgid_set)
    eGlobalIdsVar = _swig_property(_StgFEM.FeMesh_eGlobalIdsVar_get, _StgFEM.FeMesh_eGlobalIdsVar_set)
    verticesgid = _swig_property(_StgFEM.FeMesh_verticesgid_get, _StgFEM.FeMesh_verticesgid_set)
    vGlobalIdsVar = _swig_property(_StgFEM.FeMesh_vGlobalIdsVar_get, _StgFEM.FeMesh_vGlobalIdsVar_set)
    e_n = _swig_property(_StgFEM.FeMesh_e_n_get, _StgFEM.FeMesh_e_n_set)
    enMapVar = _swig_property(_StgFEM.FeMesh_enMapVar_get, _StgFEM.FeMesh_enMapVar_set)
    nverts = _swig_property(_StgFEM.FeMesh_nverts_get, _StgFEM.FeMesh_nverts_set)
    dVerts = _swig_property(_StgFEM.FeMesh_dVerts_get, _StgFEM.FeMesh_dVerts_set)
    dEls = _swig_property(_StgFEM.FeMesh_dEls_get, _StgFEM.FeMesh_dEls_set)
    localtotalNodes = _swig_property(_StgFEM.FeMesh_localtotalNodes_get, _StgFEM.FeMesh_localtotalNodes_set)
    minSep = _swig_property(_StgFEM.FeMesh_minSep_get, _StgFEM.FeMesh_minSep_set)
    minAxialSep = _swig_property(_StgFEM.FeMesh_minAxialSep_get, _StgFEM.FeMesh_minAxialSep_set)
    minLocalCrd = _swig_property(_StgFEM.FeMesh_minLocalCrd_get, _StgFEM.FeMesh_minLocalCrd_set)
    maxLocalCrd = _swig_property(_StgFEM.FeMesh_maxLocalCrd_get, _StgFEM.FeMesh_maxLocalCrd_set)
    minDomainCrd = _swig_property(_StgFEM.FeMesh_minDomainCrd_get, _StgFEM.FeMesh_minDomainCrd_set)
    maxDomainCrd = _swig_property(_StgFEM.FeMesh_maxDomainCrd_get, _StgFEM.FeMesh_maxDomainCrd_set)
    minGlobalCrd = _swig_property(_StgFEM.FeMesh_minGlobalCrd_get, _StgFEM.FeMesh_minGlobalCrd_set)
    maxGlobalCrd = _swig_property(_StgFEM.FeMesh_maxGlobalCrd_get, _StgFEM.FeMesh_maxGlobalCrd_set)
    algorithms = _swig_property(_StgFEM.FeMesh_algorithms_get, _StgFEM.FeMesh_algorithms_set)
    nElTypes = _swig_property(_StgFEM.FeMesh_nElTypes_get, _StgFEM.FeMesh_nElTypes_set)
    elTypes = _swig_property(_StgFEM.FeMesh_elTypes_get, _StgFEM.FeMesh_elTypes_set)
    elTypeMap = _swig_property(_StgFEM.FeMesh_elTypeMap_get, _StgFEM.FeMesh_elTypeMap_set)
    topoDataSizes = _swig_property(_StgFEM.FeMesh_topoDataSizes_get, _StgFEM.FeMesh_topoDataSizes_set)
    topoDataInfos = _swig_property(_StgFEM.FeMesh_topoDataInfos_get, _StgFEM.FeMesh_topoDataInfos_set)
    topoDatas = _swig_property(_StgFEM.FeMesh_topoDatas_get, _StgFEM.FeMesh_topoDatas_set)
    info = _swig_property(_StgFEM.FeMesh_info_get, _StgFEM.FeMesh_info_set)
    vertGridId = _swig_property(_StgFEM.FeMesh_vertGridId_get, _StgFEM.FeMesh_vertGridId_set)
    elGridId = _swig_property(_StgFEM.FeMesh_elGridId_get, _StgFEM.FeMesh_elGridId_set)
    periodicId = _swig_property(_StgFEM.FeMesh_periodicId_get, _StgFEM.FeMesh_periodicId_set)
    localOriginId = _swig_property(_StgFEM.FeMesh_localOriginId_get, _StgFEM.FeMesh_localOriginId_set)
    localRangeId = _swig_property(_StgFEM.FeMesh_localRangeId_get, _StgFEM.FeMesh_localRangeId_set)
    isRegular = _swig_property(_StgFEM.FeMesh_isRegular_get, _StgFEM.FeMesh_isRegular_set)
    generator = _swig_property(_StgFEM.FeMesh_generator_get, _StgFEM.FeMesh_generator_set)
    isDeforming = _swig_property(_StgFEM.FeMesh_isDeforming_get, _StgFEM.FeMesh_isDeforming_set)
    emReg = _swig_property(_StgFEM.FeMesh_emReg_get, _StgFEM.FeMesh_emReg_set)
    parentMesh = _swig_property(_StgFEM.FeMesh_parentMesh_get, _StgFEM.FeMesh_parentMesh_set)
    feElFamily = _swig_property(_StgFEM.FeMesh_feElFamily_get, _StgFEM.FeMesh_feElFamily_set)
    feElType = _swig_property(_StgFEM.FeMesh_feElType_get, _StgFEM.FeMesh_feElType_set)
    elementMesh = _swig_property(_StgFEM.FeMesh_elementMesh_get, _StgFEM.FeMesh_elementMesh_set)
    useFeAlgorithms = _swig_property(_StgFEM.FeMesh_useFeAlgorithms_get, _StgFEM.FeMesh_useFeAlgorithms_set)
    inc = _swig_property(_StgFEM.FeMesh_inc_get, _StgFEM.FeMesh_inc_set)
    bndNodeSet = _swig_property(_StgFEM.FeMesh_bndNodeSet_get, _StgFEM.FeMesh_bndNodeSet_set)
    bndElementSet = _swig_property(_StgFEM.FeMesh_bndElementSet_get, _StgFEM.FeMesh_bndElementSet_set)

    def __init__(self):
        _StgFEM.FeMesh_swiginit(self, _StgFEM.new_FeMesh())
    __swig_destroy__ = _StgFEM.delete_FeMesh
FeMesh_swigregister = _StgFEM.FeMesh_swigregister
FeMesh_swigregister(FeMesh)
FeMesh_Type = cvar.FeMesh_Type


def FeMesh_New(name: 'Name') -> "FeMesh *":
    return _StgFEM.FeMesh_New(name)
FeMesh_New = _StgFEM.FeMesh_New

def _FeMesh_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "FeMesh *":
    return _StgFEM._FeMesh_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_FeMesh_New = _StgFEM._FeMesh_New

def _FeMesh_Init(arg1: 'FeMesh', elType: 'ElementType *', family: 'char const *', elementMesh: 'Bool') -> "void":
    return _StgFEM._FeMesh_Init(arg1, elType, family, elementMesh)
_FeMesh_Init = _StgFEM._FeMesh_Init

def _FeMesh_DefaultNew(name: 'Name') -> "FeMesh *":
    return _StgFEM._FeMesh_DefaultNew(name)
_FeMesh_DefaultNew = _StgFEM._FeMesh_DefaultNew

def _FeMesh_Delete(feMesh: 'void *') -> "void":
    return _StgFEM._FeMesh_Delete(feMesh)
_FeMesh_Delete = _StgFEM._FeMesh_Delete

def _FeMesh_Print(feMesh: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._FeMesh_Print(feMesh, stream)
_FeMesh_Print = _StgFEM._FeMesh_Print

def _FeMesh_AssignFromXML(feMesh: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._FeMesh_AssignFromXML(feMesh, cf, data)
_FeMesh_AssignFromXML = _StgFEM._FeMesh_AssignFromXML

def _FeMesh_Build(feMesh: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeMesh_Build(feMesh, data)
_FeMesh_Build = _StgFEM._FeMesh_Build

def _FeMesh_Initialise(feMesh: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeMesh_Initialise(feMesh, data)
_FeMesh_Initialise = _StgFEM._FeMesh_Initialise

def _FeMesh_Execute(feMesh: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeMesh_Execute(feMesh, data)
_FeMesh_Execute = _StgFEM._FeMesh_Execute

def _FeMesh_Destroy(feMesh: 'void *', data: 'void *') -> "void":
    return _StgFEM._FeMesh_Destroy(feMesh, data)
_FeMesh_Destroy = _StgFEM._FeMesh_Destroy

def FeMesh_SetElementFamily(feMesh: 'void *', family: 'char const *') -> "void":
    return _StgFEM.FeMesh_SetElementFamily(feMesh, family)
FeMesh_SetElementFamily = _StgFEM.FeMesh_SetElementFamily

def FeMesh_SetElementType(feMesh: 'void *', elType: 'ElementType *') -> "void":
    return _StgFEM.FeMesh_SetElementType(feMesh, elType)
FeMesh_SetElementType = _StgFEM.FeMesh_SetElementType

def FeMesh_GetElementType(feMesh: 'void *', element: 'unsigned int') -> "ElementType *":
    return _StgFEM.FeMesh_GetElementType(feMesh, element)
FeMesh_GetElementType = _StgFEM.FeMesh_GetElementType

def FeMesh_GetNodeLocalSize(feMesh: 'void *') -> "unsigned int":
    return _StgFEM.FeMesh_GetNodeLocalSize(feMesh)
FeMesh_GetNodeLocalSize = _StgFEM.FeMesh_GetNodeLocalSize

def FeMesh_GetNodeRemoteSize(feMesh: 'void *') -> "unsigned int":
    return _StgFEM.FeMesh_GetNodeRemoteSize(feMesh)
FeMesh_GetNodeRemoteSize = _StgFEM.FeMesh_GetNodeRemoteSize

def FeMesh_GetNodeDomainSize(feMesh: 'void *') -> "unsigned int":
    return _StgFEM.FeMesh_GetNodeDomainSize(feMesh)
FeMesh_GetNodeDomainSize = _StgFEM.FeMesh_GetNodeDomainSize

def FeMesh_GetNodeGlobalSize(feMesh: 'void *') -> "unsigned int":
    return _StgFEM.FeMesh_GetNodeGlobalSize(feMesh)
FeMesh_GetNodeGlobalSize = _StgFEM.FeMesh_GetNodeGlobalSize

def FeMesh_GetElementLocalSize(feMesh: 'void *') -> "unsigned int":
    return _StgFEM.FeMesh_GetElementLocalSize(feMesh)
FeMesh_GetElementLocalSize = _StgFEM.FeMesh_GetElementLocalSize

def FeMesh_GetElementDomainSize(feMesh: 'void *') -> "unsigned int":
    return _StgFEM.FeMesh_GetElementDomainSize(feMesh)
FeMesh_GetElementDomainSize = _StgFEM.FeMesh_GetElementDomainSize

def FeMesh_GetElementRemoteSize(feMesh: 'void *') -> "unsigned int":
    return _StgFEM.FeMesh_GetElementRemoteSize(feMesh)
FeMesh_GetElementRemoteSize = _StgFEM.FeMesh_GetElementRemoteSize

def FeMesh_GetElementGlobalSize(feMesh: 'void *') -> "unsigned int":
    return _StgFEM.FeMesh_GetElementGlobalSize(feMesh)
FeMesh_GetElementGlobalSize = _StgFEM.FeMesh_GetElementGlobalSize

def FeMesh_GetElementNodeSize(feMesh: 'void *', element: 'unsigned int') -> "unsigned int":
    return _StgFEM.FeMesh_GetElementNodeSize(feMesh, element)
FeMesh_GetElementNodeSize = _StgFEM.FeMesh_GetElementNodeSize

def FeMesh_GetNodeElementSize(feMesh: 'void *', node: 'unsigned int') -> "unsigned int":
    return _StgFEM.FeMesh_GetNodeElementSize(feMesh, node)
FeMesh_GetNodeElementSize = _StgFEM.FeMesh_GetNodeElementSize

def FeMesh_GetElementNodes(feMesh: 'void *', element: 'unsigned int', inc: 'IArray *') -> "void":
    return _StgFEM.FeMesh_GetElementNodes(feMesh, element, inc)
FeMesh_GetElementNodes = _StgFEM.FeMesh_GetElementNodes

def FeMesh_GetNodeElements(feMesh: 'void *', node: 'unsigned int', inc: 'IArray *') -> "void":
    return _StgFEM.FeMesh_GetNodeElements(feMesh, node, inc)
FeMesh_GetNodeElements = _StgFEM.FeMesh_GetNodeElements

def FeMesh_ElementDomainToGlobal(feMesh: 'void *', domain: 'unsigned int') -> "unsigned int":
    return _StgFEM.FeMesh_ElementDomainToGlobal(feMesh, domain)
FeMesh_ElementDomainToGlobal = _StgFEM.FeMesh_ElementDomainToGlobal

def FeMesh_ElementGlobalToDomain(feMesh: 'void *', arg2: 'unsigned int', domain: 'unsigned int *') -> "Bool":
    return _StgFEM.FeMesh_ElementGlobalToDomain(feMesh, arg2, domain)
FeMesh_ElementGlobalToDomain = _StgFEM.FeMesh_ElementGlobalToDomain

def FeMesh_NodeDomainToGlobal(feMesh: 'void *', domain: 'unsigned int') -> "unsigned int":
    return _StgFEM.FeMesh_NodeDomainToGlobal(feMesh, domain)
FeMesh_NodeDomainToGlobal = _StgFEM.FeMesh_NodeDomainToGlobal

def FeMesh_NodeGlobalToDomain(feMesh: 'void *', arg2: 'unsigned int', domain: 'unsigned int *') -> "Bool":
    return _StgFEM.FeMesh_NodeGlobalToDomain(feMesh, arg2, domain)
FeMesh_NodeGlobalToDomain = _StgFEM.FeMesh_NodeGlobalToDomain

def FeMesh_CoordGlobalToLocal(feMesh: 'void *', element: 'unsigned int', arg3: 'double const *', local: 'double *') -> "void":
    return _StgFEM.FeMesh_CoordGlobalToLocal(feMesh, element, arg3, local)
FeMesh_CoordGlobalToLocal = _StgFEM.FeMesh_CoordGlobalToLocal

def FeMesh_CoordLocalToGlobal(feMesh: 'void *', element: 'unsigned int', local: 'double const *', arg4: 'double *') -> "void":
    return _StgFEM.FeMesh_CoordLocalToGlobal(feMesh, element, local, arg4)
FeMesh_CoordLocalToGlobal = _StgFEM.FeMesh_CoordLocalToGlobal

def FeMesh_EvalBasis(feMesh: 'void *', element: 'unsigned int', localCoord: 'double *', basis: 'double *') -> "void":
    return _StgFEM.FeMesh_EvalBasis(feMesh, element, localCoord, basis)
FeMesh_EvalBasis = _StgFEM.FeMesh_EvalBasis

def FeMesh_EvalLocalDerivs(feMesh: 'void *', element: 'unsigned int', localCoord: 'double *', derivs: 'double **') -> "void":
    return _StgFEM.FeMesh_EvalLocalDerivs(feMesh, element, localCoord, derivs)
FeMesh_EvalLocalDerivs = _StgFEM.FeMesh_EvalLocalDerivs

def FeMesh_EvalGlobalDerivs(feMesh: 'void *', element: 'unsigned int', localCoord: 'double *', derivs: 'double **', jacDet: 'double *') -> "void":
    return _StgFEM.FeMesh_EvalGlobalDerivs(feMesh, element, localCoord, derivs, jacDet)
FeMesh_EvalGlobalDerivs = _StgFEM.FeMesh_EvalGlobalDerivs

def FeMesh_Destruct(arg1: 'FeMesh') -> "void":
    return _StgFEM.FeMesh_Destruct(arg1)
FeMesh_Destruct = _StgFEM.FeMesh_Destruct
class Inner2DGenerator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.Inner2DGenerator__sizeOfSelf_get, _StgFEM.Inner2DGenerator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.Inner2DGenerator__deleteSelf_get, _StgFEM.Inner2DGenerator__deleteSelf_set)
    type = _swig_property(_StgFEM.Inner2DGenerator_type_get, _StgFEM.Inner2DGenerator_type_set)
    nRefs = _swig_property(_StgFEM.Inner2DGenerator_nRefs_get, _StgFEM.Inner2DGenerator_nRefs_set)
    locked = _swig_property(_StgFEM.Inner2DGenerator_locked_get, _StgFEM.Inner2DGenerator_locked_set)
    _delete = _swig_property(_StgFEM.Inner2DGenerator__delete_get, _StgFEM.Inner2DGenerator__delete_set)
    _print = _swig_property(_StgFEM.Inner2DGenerator__print_get, _StgFEM.Inner2DGenerator__print_set)
    _copy = _swig_property(_StgFEM.Inner2DGenerator__copy_get, _StgFEM.Inner2DGenerator__copy_set)
    name = _swig_property(_StgFEM.Inner2DGenerator_name_get, _StgFEM.Inner2DGenerator_name_set)
    nameAllocationType = _swig_property(_StgFEM.Inner2DGenerator_nameAllocationType_get, _StgFEM.Inner2DGenerator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.Inner2DGenerator__defaultConstructor_get, _StgFEM.Inner2DGenerator__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.Inner2DGenerator__construct_get, _StgFEM.Inner2DGenerator__construct_set)
    _build = _swig_property(_StgFEM.Inner2DGenerator__build_get, _StgFEM.Inner2DGenerator__build_set)
    _initialise = _swig_property(_StgFEM.Inner2DGenerator__initialise_get, _StgFEM.Inner2DGenerator__initialise_set)
    _execute = _swig_property(_StgFEM.Inner2DGenerator__execute_get, _StgFEM.Inner2DGenerator__execute_set)
    _destroy = _swig_property(_StgFEM.Inner2DGenerator__destroy_get, _StgFEM.Inner2DGenerator__destroy_set)
    isConstructed = _swig_property(_StgFEM.Inner2DGenerator_isConstructed_get, _StgFEM.Inner2DGenerator_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.Inner2DGenerator_isBuilt_get, _StgFEM.Inner2DGenerator_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.Inner2DGenerator_isInitialised_get, _StgFEM.Inner2DGenerator_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.Inner2DGenerator_hasExecuted_get, _StgFEM.Inner2DGenerator_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.Inner2DGenerator_isDestroyed_get, _StgFEM.Inner2DGenerator_isDestroyed_set)
    constructType = _swig_property(_StgFEM.Inner2DGenerator_constructType_get, _StgFEM.Inner2DGenerator_constructType_set)
    buildType = _swig_property(_StgFEM.Inner2DGenerator_buildType_get, _StgFEM.Inner2DGenerator_buildType_set)
    initialiseType = _swig_property(_StgFEM.Inner2DGenerator_initialiseType_get, _StgFEM.Inner2DGenerator_initialiseType_set)
    executeType = _swig_property(_StgFEM.Inner2DGenerator_executeType_get, _StgFEM.Inner2DGenerator_executeType_set)
    destroyType = _swig_property(_StgFEM.Inner2DGenerator_destroyType_get, _StgFEM.Inner2DGenerator_destroyType_set)
    context = _swig_property(_StgFEM.Inner2DGenerator_context_get, _StgFEM.Inner2DGenerator_context_set)
    setDimSizeFunc = _swig_property(_StgFEM.Inner2DGenerator_setDimSizeFunc_get, _StgFEM.Inner2DGenerator_setDimSizeFunc_set)
    generateFunc = _swig_property(_StgFEM.Inner2DGenerator_generateFunc_get, _StgFEM.Inner2DGenerator_generateFunc_set)
    mpiComm = _swig_property(_StgFEM.Inner2DGenerator_mpiComm_get, _StgFEM.Inner2DGenerator_mpiComm_set)
    nMeshes = _swig_property(_StgFEM.Inner2DGenerator_nMeshes_get, _StgFEM.Inner2DGenerator_nMeshes_set)
    meshes = _swig_property(_StgFEM.Inner2DGenerator_meshes_get, _StgFEM.Inner2DGenerator_meshes_set)
    nDims = _swig_property(_StgFEM.Inner2DGenerator_nDims_get, _StgFEM.Inner2DGenerator_nDims_set)
    enabledDims = _swig_property(_StgFEM.Inner2DGenerator_enabledDims_get, _StgFEM.Inner2DGenerator_enabledDims_set)
    enabledInc = _swig_property(_StgFEM.Inner2DGenerator_enabledInc_get, _StgFEM.Inner2DGenerator_enabledInc_set)
    elMesh = _swig_property(_StgFEM.Inner2DGenerator_elMesh_get, _StgFEM.Inner2DGenerator_elMesh_set)

    def __init__(self):
        _StgFEM.Inner2DGenerator_swiginit(self, _StgFEM.new_Inner2DGenerator())
    __swig_destroy__ = _StgFEM.delete_Inner2DGenerator
Inner2DGenerator_swigregister = _StgFEM.Inner2DGenerator_swigregister
Inner2DGenerator_swigregister(Inner2DGenerator)
Inner2DGenerator_Type = cvar.Inner2DGenerator_Type


def Inner2DGenerator_New(name: 'Name', context: 'AbstractContext *') -> "Inner2DGenerator *":
    return _StgFEM.Inner2DGenerator_New(name, context)
Inner2DGenerator_New = _StgFEM.Inner2DGenerator_New

def _Inner2DGenerator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setDimSizeFunc: 'MeshGenerator_SetDimSizeFunc *', generateFunc: 'MeshGenerator_GenerateFunc *') -> "Inner2DGenerator *":
    return _StgFEM._Inner2DGenerator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setDimSizeFunc, generateFunc)
_Inner2DGenerator_New = _StgFEM._Inner2DGenerator_New

def _Inner2DGenerator_Init(arg1: 'Inner2DGenerator') -> "void":
    return _StgFEM._Inner2DGenerator_Init(arg1)
_Inner2DGenerator_Init = _StgFEM._Inner2DGenerator_Init

def _Inner2DGenerator_Delete(generator: 'void *') -> "void":
    return _StgFEM._Inner2DGenerator_Delete(generator)
_Inner2DGenerator_Delete = _StgFEM._Inner2DGenerator_Delete

def _Inner2DGenerator_Print(generator: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._Inner2DGenerator_Print(generator, stream)
_Inner2DGenerator_Print = _StgFEM._Inner2DGenerator_Print

def _Inner2DGenerator_AssignFromXML(generator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._Inner2DGenerator_AssignFromXML(generator, cf, data)
_Inner2DGenerator_AssignFromXML = _StgFEM._Inner2DGenerator_AssignFromXML

def _Inner2DGenerator_Build(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._Inner2DGenerator_Build(generator, data)
_Inner2DGenerator_Build = _StgFEM._Inner2DGenerator_Build

def _Inner2DGenerator_Initialise(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._Inner2DGenerator_Initialise(generator, data)
_Inner2DGenerator_Initialise = _StgFEM._Inner2DGenerator_Initialise

def _Inner2DGenerator_Execute(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._Inner2DGenerator_Execute(generator, data)
_Inner2DGenerator_Execute = _StgFEM._Inner2DGenerator_Execute

def _Inner2DGenerator_Destroy(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._Inner2DGenerator_Destroy(generator, data)
_Inner2DGenerator_Destroy = _StgFEM._Inner2DGenerator_Destroy

def Inner2DGenerator_Generate(generator: 'void *', _mesh: 'void *') -> "void":
    return _StgFEM.Inner2DGenerator_Generate(generator, _mesh)
Inner2DGenerator_Generate = _StgFEM.Inner2DGenerator_Generate

def Inner2DGenerator_SetElementMesh(generator: 'void *', mesh: 'void *') -> "void":
    return _StgFEM.Inner2DGenerator_SetElementMesh(generator, mesh)
Inner2DGenerator_SetElementMesh = _StgFEM.Inner2DGenerator_SetElementMesh

def Inner2DGenerator_BuildTopology(arg1: 'Inner2DGenerator', mesh: 'FeMesh') -> "void":
    return _StgFEM.Inner2DGenerator_BuildTopology(arg1, mesh)
Inner2DGenerator_BuildTopology = _StgFEM.Inner2DGenerator_BuildTopology

def Inner2DGenerator_BuildGeometry(arg1: 'Inner2DGenerator', mesh: 'FeMesh') -> "void":
    return _StgFEM.Inner2DGenerator_BuildGeometry(arg1, mesh)
Inner2DGenerator_BuildGeometry = _StgFEM.Inner2DGenerator_BuildGeometry

def Inner2DGenerator_BuildElementTypes(arg1: 'Inner2DGenerator', mesh: 'FeMesh') -> "void":
    return _StgFEM.Inner2DGenerator_BuildElementTypes(arg1, mesh)
Inner2DGenerator_BuildElementTypes = _StgFEM.Inner2DGenerator_BuildElementTypes
class dQ1Generator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.dQ1Generator__sizeOfSelf_get, _StgFEM.dQ1Generator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.dQ1Generator__deleteSelf_get, _StgFEM.dQ1Generator__deleteSelf_set)
    type = _swig_property(_StgFEM.dQ1Generator_type_get, _StgFEM.dQ1Generator_type_set)
    nRefs = _swig_property(_StgFEM.dQ1Generator_nRefs_get, _StgFEM.dQ1Generator_nRefs_set)
    locked = _swig_property(_StgFEM.dQ1Generator_locked_get, _StgFEM.dQ1Generator_locked_set)
    _delete = _swig_property(_StgFEM.dQ1Generator__delete_get, _StgFEM.dQ1Generator__delete_set)
    _print = _swig_property(_StgFEM.dQ1Generator__print_get, _StgFEM.dQ1Generator__print_set)
    _copy = _swig_property(_StgFEM.dQ1Generator__copy_get, _StgFEM.dQ1Generator__copy_set)
    name = _swig_property(_StgFEM.dQ1Generator_name_get, _StgFEM.dQ1Generator_name_set)
    nameAllocationType = _swig_property(_StgFEM.dQ1Generator_nameAllocationType_get, _StgFEM.dQ1Generator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.dQ1Generator__defaultConstructor_get, _StgFEM.dQ1Generator__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.dQ1Generator__construct_get, _StgFEM.dQ1Generator__construct_set)
    _build = _swig_property(_StgFEM.dQ1Generator__build_get, _StgFEM.dQ1Generator__build_set)
    _initialise = _swig_property(_StgFEM.dQ1Generator__initialise_get, _StgFEM.dQ1Generator__initialise_set)
    _execute = _swig_property(_StgFEM.dQ1Generator__execute_get, _StgFEM.dQ1Generator__execute_set)
    _destroy = _swig_property(_StgFEM.dQ1Generator__destroy_get, _StgFEM.dQ1Generator__destroy_set)
    isConstructed = _swig_property(_StgFEM.dQ1Generator_isConstructed_get, _StgFEM.dQ1Generator_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.dQ1Generator_isBuilt_get, _StgFEM.dQ1Generator_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.dQ1Generator_isInitialised_get, _StgFEM.dQ1Generator_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.dQ1Generator_hasExecuted_get, _StgFEM.dQ1Generator_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.dQ1Generator_isDestroyed_get, _StgFEM.dQ1Generator_isDestroyed_set)
    constructType = _swig_property(_StgFEM.dQ1Generator_constructType_get, _StgFEM.dQ1Generator_constructType_set)
    buildType = _swig_property(_StgFEM.dQ1Generator_buildType_get, _StgFEM.dQ1Generator_buildType_set)
    initialiseType = _swig_property(_StgFEM.dQ1Generator_initialiseType_get, _StgFEM.dQ1Generator_initialiseType_set)
    executeType = _swig_property(_StgFEM.dQ1Generator_executeType_get, _StgFEM.dQ1Generator_executeType_set)
    destroyType = _swig_property(_StgFEM.dQ1Generator_destroyType_get, _StgFEM.dQ1Generator_destroyType_set)
    context = _swig_property(_StgFEM.dQ1Generator_context_get, _StgFEM.dQ1Generator_context_set)
    setDimSizeFunc = _swig_property(_StgFEM.dQ1Generator_setDimSizeFunc_get, _StgFEM.dQ1Generator_setDimSizeFunc_set)
    generateFunc = _swig_property(_StgFEM.dQ1Generator_generateFunc_get, _StgFEM.dQ1Generator_generateFunc_set)
    mpiComm = _swig_property(_StgFEM.dQ1Generator_mpiComm_get, _StgFEM.dQ1Generator_mpiComm_set)
    nMeshes = _swig_property(_StgFEM.dQ1Generator_nMeshes_get, _StgFEM.dQ1Generator_nMeshes_set)
    meshes = _swig_property(_StgFEM.dQ1Generator_meshes_get, _StgFEM.dQ1Generator_meshes_set)
    nDims = _swig_property(_StgFEM.dQ1Generator_nDims_get, _StgFEM.dQ1Generator_nDims_set)
    enabledDims = _swig_property(_StgFEM.dQ1Generator_enabledDims_get, _StgFEM.dQ1Generator_enabledDims_set)
    enabledInc = _swig_property(_StgFEM.dQ1Generator_enabledInc_get, _StgFEM.dQ1Generator_enabledInc_set)
    elMesh = _swig_property(_StgFEM.dQ1Generator_elMesh_get, _StgFEM.dQ1Generator_elMesh_set)

    def __init__(self):
        _StgFEM.dQ1Generator_swiginit(self, _StgFEM.new_dQ1Generator())
    __swig_destroy__ = _StgFEM.delete_dQ1Generator
dQ1Generator_swigregister = _StgFEM.dQ1Generator_swigregister
dQ1Generator_swigregister(dQ1Generator)
dQ1Generator_Type = cvar.dQ1Generator_Type


def dQ1Generator_New(name: 'Name', context: 'AbstractContext *') -> "dQ1Generator *":
    return _StgFEM.dQ1Generator_New(name, context)
dQ1Generator_New = _StgFEM.dQ1Generator_New

def _dQ1Generator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setDimSizeFunc: 'MeshGenerator_SetDimSizeFunc *', generateFunc: 'MeshGenerator_GenerateFunc *') -> "dQ1Generator *":
    return _StgFEM._dQ1Generator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setDimSizeFunc, generateFunc)
_dQ1Generator_New = _StgFEM._dQ1Generator_New

def _dQ1Generator_Init(arg1: 'dQ1Generator') -> "void":
    return _StgFEM._dQ1Generator_Init(arg1)
_dQ1Generator_Init = _StgFEM._dQ1Generator_Init

def _dQ1Generator_Delete(generator: 'void *') -> "void":
    return _StgFEM._dQ1Generator_Delete(generator)
_dQ1Generator_Delete = _StgFEM._dQ1Generator_Delete

def _dQ1Generator_Print(generator: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._dQ1Generator_Print(generator, stream)
_dQ1Generator_Print = _StgFEM._dQ1Generator_Print

def _dQ1Generator_AssignFromXML(generator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._dQ1Generator_AssignFromXML(generator, cf, data)
_dQ1Generator_AssignFromXML = _StgFEM._dQ1Generator_AssignFromXML

def _dQ1Generator_Build(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._dQ1Generator_Build(generator, data)
_dQ1Generator_Build = _StgFEM._dQ1Generator_Build

def _dQ1Generator_Initialise(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._dQ1Generator_Initialise(generator, data)
_dQ1Generator_Initialise = _StgFEM._dQ1Generator_Initialise

def _dQ1Generator_Execute(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._dQ1Generator_Execute(generator, data)
_dQ1Generator_Execute = _StgFEM._dQ1Generator_Execute

def _dQ1Generator_Destroy(generator: 'void *', data: 'void *') -> "void":
    return _StgFEM._dQ1Generator_Destroy(generator, data)
_dQ1Generator_Destroy = _StgFEM._dQ1Generator_Destroy

def dQ1Generator_Generate(generator: 'void *', _mesh: 'void *') -> "void":
    return _StgFEM.dQ1Generator_Generate(generator, _mesh)
dQ1Generator_Generate = _StgFEM.dQ1Generator_Generate

def dQ1Generator_SetElementMesh(generator: 'void *', mesh: 'void *') -> "void":
    return _StgFEM.dQ1Generator_SetElementMesh(generator, mesh)
dQ1Generator_SetElementMesh = _StgFEM.dQ1Generator_SetElementMesh

def dQ1Generator_BuildTopology(arg1: 'dQ1Generator', mesh: 'FeMesh') -> "void":
    return _StgFEM.dQ1Generator_BuildTopology(arg1, mesh)
dQ1Generator_BuildTopology = _StgFEM.dQ1Generator_BuildTopology

def dQ1Generator_BuildGeometry(arg1: 'dQ1Generator', mesh: 'FeMesh') -> "void":
    return _StgFEM.dQ1Generator_BuildGeometry(arg1, mesh)
dQ1Generator_BuildGeometry = _StgFEM.dQ1Generator_BuildGeometry

def dQ1Generator_BuildElementTypes(arg1: 'dQ1Generator', mesh: 'FeMesh') -> "void":
    return _StgFEM.dQ1Generator_BuildElementTypes(arg1, mesh)
dQ1Generator_BuildElementTypes = _StgFEM.dQ1Generator_BuildElementTypes
class IrregularMeshGaussLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.IrregularMeshGaussLayout__sizeOfSelf_get, _StgFEM.IrregularMeshGaussLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.IrregularMeshGaussLayout__deleteSelf_get, _StgFEM.IrregularMeshGaussLayout__deleteSelf_set)
    type = _swig_property(_StgFEM.IrregularMeshGaussLayout_type_get, _StgFEM.IrregularMeshGaussLayout_type_set)
    nRefs = _swig_property(_StgFEM.IrregularMeshGaussLayout_nRefs_get, _StgFEM.IrregularMeshGaussLayout_nRefs_set)
    locked = _swig_property(_StgFEM.IrregularMeshGaussLayout_locked_get, _StgFEM.IrregularMeshGaussLayout_locked_set)
    _delete = _swig_property(_StgFEM.IrregularMeshGaussLayout__delete_get, _StgFEM.IrregularMeshGaussLayout__delete_set)
    _print = _swig_property(_StgFEM.IrregularMeshGaussLayout__print_get, _StgFEM.IrregularMeshGaussLayout__print_set)
    _copy = _swig_property(_StgFEM.IrregularMeshGaussLayout__copy_get, _StgFEM.IrregularMeshGaussLayout__copy_set)
    name = _swig_property(_StgFEM.IrregularMeshGaussLayout_name_get, _StgFEM.IrregularMeshGaussLayout_name_set)
    nameAllocationType = _swig_property(_StgFEM.IrregularMeshGaussLayout_nameAllocationType_get, _StgFEM.IrregularMeshGaussLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.IrregularMeshGaussLayout__defaultConstructor_get, _StgFEM.IrregularMeshGaussLayout__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.IrregularMeshGaussLayout__construct_get, _StgFEM.IrregularMeshGaussLayout__construct_set)
    _build = _swig_property(_StgFEM.IrregularMeshGaussLayout__build_get, _StgFEM.IrregularMeshGaussLayout__build_set)
    _initialise = _swig_property(_StgFEM.IrregularMeshGaussLayout__initialise_get, _StgFEM.IrregularMeshGaussLayout__initialise_set)
    _execute = _swig_property(_StgFEM.IrregularMeshGaussLayout__execute_get, _StgFEM.IrregularMeshGaussLayout__execute_set)
    _destroy = _swig_property(_StgFEM.IrregularMeshGaussLayout__destroy_get, _StgFEM.IrregularMeshGaussLayout__destroy_set)
    isConstructed = _swig_property(_StgFEM.IrregularMeshGaussLayout_isConstructed_get, _StgFEM.IrregularMeshGaussLayout_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.IrregularMeshGaussLayout_isBuilt_get, _StgFEM.IrregularMeshGaussLayout_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.IrregularMeshGaussLayout_isInitialised_get, _StgFEM.IrregularMeshGaussLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.IrregularMeshGaussLayout_hasExecuted_get, _StgFEM.IrregularMeshGaussLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.IrregularMeshGaussLayout_isDestroyed_get, _StgFEM.IrregularMeshGaussLayout_isDestroyed_set)
    constructType = _swig_property(_StgFEM.IrregularMeshGaussLayout_constructType_get, _StgFEM.IrregularMeshGaussLayout_constructType_set)
    buildType = _swig_property(_StgFEM.IrregularMeshGaussLayout_buildType_get, _StgFEM.IrregularMeshGaussLayout_buildType_set)
    initialiseType = _swig_property(_StgFEM.IrregularMeshGaussLayout_initialiseType_get, _StgFEM.IrregularMeshGaussLayout_initialiseType_set)
    executeType = _swig_property(_StgFEM.IrregularMeshGaussLayout_executeType_get, _StgFEM.IrregularMeshGaussLayout_executeType_set)
    destroyType = _swig_property(_StgFEM.IrregularMeshGaussLayout_destroyType_get, _StgFEM.IrregularMeshGaussLayout_destroyType_set)
    context = _swig_property(_StgFEM.IrregularMeshGaussLayout_context_get, _StgFEM.IrregularMeshGaussLayout_context_set)
    _setInitialCounts = _swig_property(_StgFEM.IrregularMeshGaussLayout__setInitialCounts_get, _StgFEM.IrregularMeshGaussLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgFEM.IrregularMeshGaussLayout__initialiseParticles_get, _StgFEM.IrregularMeshGaussLayout__initialiseParticles_set)
    debug = _swig_property(_StgFEM.IrregularMeshGaussLayout_debug_get, _StgFEM.IrregularMeshGaussLayout_debug_set)
    coordSystem = _swig_property(_StgFEM.IrregularMeshGaussLayout_coordSystem_get, _StgFEM.IrregularMeshGaussLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgFEM.IrregularMeshGaussLayout_weightsInitialisedAtStartup_get, _StgFEM.IrregularMeshGaussLayout_weightsInitialisedAtStartup_set)
    _initialCount = _swig_property(_StgFEM.IrregularMeshGaussLayout__initialCount_get, _StgFEM.IrregularMeshGaussLayout__initialCount_set)
    _initialiseParticlesOfCell = _swig_property(_StgFEM.IrregularMeshGaussLayout__initialiseParticlesOfCell_get, _StgFEM.IrregularMeshGaussLayout__initialiseParticlesOfCell_set)
    dim = _swig_property(_StgFEM.IrregularMeshGaussLayout_dim_get, _StgFEM.IrregularMeshGaussLayout_dim_set)
    particlesPerDim = _swig_property(_StgFEM.IrregularMeshGaussLayout_particlesPerDim_get, _StgFEM.IrregularMeshGaussLayout_particlesPerDim_set)
    abscissa = _swig_property(_StgFEM.IrregularMeshGaussLayout_abscissa_get, _StgFEM.IrregularMeshGaussLayout_abscissa_set)
    feMesh = _swig_property(_StgFEM.IrregularMeshGaussLayout_feMesh_get, _StgFEM.IrregularMeshGaussLayout_feMesh_set)

    def __init__(self):
        _StgFEM.IrregularMeshGaussLayout_swiginit(self, _StgFEM.new_IrregularMeshGaussLayout())
    __swig_destroy__ = _StgFEM.delete_IrregularMeshGaussLayout
IrregularMeshGaussLayout_swigregister = _StgFEM.IrregularMeshGaussLayout_swigregister
IrregularMeshGaussLayout_swigregister(IrregularMeshGaussLayout)
IrregularMeshGaussLayout_Type = cvar.IrregularMeshGaussLayout_Type


def IrregularMeshGaussLayout_New(name: 'Name', dim: 'Dimension_Index', particlesPerDim: 'Particle_InCellIndex *', feMesh: 'FeMesh') -> "IrregularMeshGaussLayout *":
    return _StgFEM.IrregularMeshGaussLayout_New(name, dim, particlesPerDim, feMesh)
IrregularMeshGaussLayout_New = _StgFEM.IrregularMeshGaussLayout_New

def _IrregularMeshGaussLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', _initialCount: 'PerCellParticleLayout_InitialCountFunction *', _initialiseParticlesOfCell: 'PerCellParticleLayout_InitialiseParticlesOfCellFunction *', dim: 'Dimension_Index', particlesPerDim: 'Particle_InCellIndex *') -> "IrregularMeshGaussLayout *":
    return _StgFEM._IrregularMeshGaussLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup, _initialCount, _initialiseParticlesOfCell, dim, particlesPerDim)
_IrregularMeshGaussLayout_New = _StgFEM._IrregularMeshGaussLayout_New

def _IrregularMeshGaussLayout_Delete(gaussParticleLayout: 'void *') -> "void":
    return _StgFEM._IrregularMeshGaussLayout_Delete(gaussParticleLayout)
_IrregularMeshGaussLayout_Delete = _StgFEM._IrregularMeshGaussLayout_Delete

def _IrregularMeshGaussLayout_Print(gaussParticleLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._IrregularMeshGaussLayout_Print(gaussParticleLayout, stream)
_IrregularMeshGaussLayout_Print = _StgFEM._IrregularMeshGaussLayout_Print

def _IrregularMeshGaussLayout_Copy(gaussParticleLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._IrregularMeshGaussLayout_Copy(gaussParticleLayout, dest, deep, nameExt, ptrMap)
_IrregularMeshGaussLayout_Copy = _StgFEM._IrregularMeshGaussLayout_Copy

def _IrregularMeshGaussLayout_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._IrregularMeshGaussLayout_DefaultNew(name)
_IrregularMeshGaussLayout_DefaultNew = _StgFEM._IrregularMeshGaussLayout_DefaultNew

def _IrregularMeshGaussLayout_AssignFromXML(gaussParticleLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshGaussLayout_AssignFromXML(gaussParticleLayout, cf, data)
_IrregularMeshGaussLayout_AssignFromXML = _StgFEM._IrregularMeshGaussLayout_AssignFromXML

def _IrregularMeshGaussLayout_Build(gaussParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshGaussLayout_Build(gaussParticleLayout, data)
_IrregularMeshGaussLayout_Build = _StgFEM._IrregularMeshGaussLayout_Build

def _IrregularMeshGaussLayout_Initialise(gaussParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshGaussLayout_Initialise(gaussParticleLayout, data)
_IrregularMeshGaussLayout_Initialise = _StgFEM._IrregularMeshGaussLayout_Initialise

def _IrregularMeshGaussLayout_Execute(gaussParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshGaussLayout_Execute(gaussParticleLayout, data)
_IrregularMeshGaussLayout_Execute = _StgFEM._IrregularMeshGaussLayout_Execute

def _IrregularMeshGaussLayout_Destroy(gaussParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshGaussLayout_Destroy(gaussParticleLayout, data)
_IrregularMeshGaussLayout_Destroy = _StgFEM._IrregularMeshGaussLayout_Destroy

def _IrregularMeshGaussLayout_InitialiseParticlesOfCell(gaussParticleLayout: 'void *', swarm: 'void *', cell_I: 'Cell_Index') -> "void":
    return _StgFEM._IrregularMeshGaussLayout_InitialiseParticlesOfCell(gaussParticleLayout, swarm, cell_I)
_IrregularMeshGaussLayout_InitialiseParticlesOfCell = _StgFEM._IrregularMeshGaussLayout_InitialiseParticlesOfCell
class ForceTerm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.ForceTerm__sizeOfSelf_get, _StgFEM.ForceTerm__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.ForceTerm__deleteSelf_get, _StgFEM.ForceTerm__deleteSelf_set)
    type = _swig_property(_StgFEM.ForceTerm_type_get, _StgFEM.ForceTerm_type_set)
    nRefs = _swig_property(_StgFEM.ForceTerm_nRefs_get, _StgFEM.ForceTerm_nRefs_set)
    locked = _swig_property(_StgFEM.ForceTerm_locked_get, _StgFEM.ForceTerm_locked_set)
    _delete = _swig_property(_StgFEM.ForceTerm__delete_get, _StgFEM.ForceTerm__delete_set)
    _print = _swig_property(_StgFEM.ForceTerm__print_get, _StgFEM.ForceTerm__print_set)
    _copy = _swig_property(_StgFEM.ForceTerm__copy_get, _StgFEM.ForceTerm__copy_set)
    name = _swig_property(_StgFEM.ForceTerm_name_get, _StgFEM.ForceTerm_name_set)
    nameAllocationType = _swig_property(_StgFEM.ForceTerm_nameAllocationType_get, _StgFEM.ForceTerm_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.ForceTerm__defaultConstructor_get, _StgFEM.ForceTerm__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.ForceTerm__construct_get, _StgFEM.ForceTerm__construct_set)
    _build = _swig_property(_StgFEM.ForceTerm__build_get, _StgFEM.ForceTerm__build_set)
    _initialise = _swig_property(_StgFEM.ForceTerm__initialise_get, _StgFEM.ForceTerm__initialise_set)
    _execute = _swig_property(_StgFEM.ForceTerm__execute_get, _StgFEM.ForceTerm__execute_set)
    _destroy = _swig_property(_StgFEM.ForceTerm__destroy_get, _StgFEM.ForceTerm__destroy_set)
    isConstructed = _swig_property(_StgFEM.ForceTerm_isConstructed_get, _StgFEM.ForceTerm_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.ForceTerm_isBuilt_get, _StgFEM.ForceTerm_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.ForceTerm_isInitialised_get, _StgFEM.ForceTerm_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.ForceTerm_hasExecuted_get, _StgFEM.ForceTerm_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.ForceTerm_isDestroyed_get, _StgFEM.ForceTerm_isDestroyed_set)
    constructType = _swig_property(_StgFEM.ForceTerm_constructType_get, _StgFEM.ForceTerm_constructType_set)
    buildType = _swig_property(_StgFEM.ForceTerm_buildType_get, _StgFEM.ForceTerm_buildType_set)
    initialiseType = _swig_property(_StgFEM.ForceTerm_initialiseType_get, _StgFEM.ForceTerm_initialiseType_set)
    executeType = _swig_property(_StgFEM.ForceTerm_executeType_get, _StgFEM.ForceTerm_executeType_set)
    destroyType = _swig_property(_StgFEM.ForceTerm_destroyType_get, _StgFEM.ForceTerm_destroyType_set)
    context = _swig_property(_StgFEM.ForceTerm_context_get, _StgFEM.ForceTerm_context_set)
    _assembleElement = _swig_property(_StgFEM.ForceTerm__assembleElement_get, _StgFEM.ForceTerm__assembleElement_set)
    debug = _swig_property(_StgFEM.ForceTerm_debug_get, _StgFEM.ForceTerm_debug_set)
    forceVector = _swig_property(_StgFEM.ForceTerm_forceVector_get, _StgFEM.ForceTerm_forceVector_set)
    integrationSwarm = _swig_property(_StgFEM.ForceTerm_integrationSwarm_get, _StgFEM.ForceTerm_integrationSwarm_set)
    extraInfo = _swig_property(_StgFEM.ForceTerm_extraInfo_get, _StgFEM.ForceTerm_extraInfo_set)

    def __init__(self):
        _StgFEM.ForceTerm_swiginit(self, _StgFEM.new_ForceTerm())
    __swig_destroy__ = _StgFEM.delete_ForceTerm
ForceTerm_swigregister = _StgFEM.ForceTerm_swigregister
ForceTerm_swigregister(ForceTerm)
ForceTerm_Type = cvar.ForceTerm_Type


def ForceTerm_New(name: 'Name', context: 'FiniteElementContext *', forceVector: 'ForceVector', integrationSwarm: 'Swarm', extraInfo: 'Stg_Component *') -> "ForceTerm *":
    return _StgFEM.ForceTerm_New(name, context, forceVector, integrationSwarm, extraInfo)
ForceTerm_New = _StgFEM.ForceTerm_New

def _ForceTerm_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'ForceTerm_AssembleElementFunction *') -> "ForceTerm *":
    return _StgFEM._ForceTerm_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_ForceTerm_New = _StgFEM._ForceTerm_New

def _ForceTerm_Init(forceTerm: 'void *', context: 'FiniteElementContext *', forceVector: 'ForceVector', integrationSwarm: 'Swarm', extraInfo: 'Stg_Component *') -> "void":
    return _StgFEM._ForceTerm_Init(forceTerm, context, forceVector, integrationSwarm, extraInfo)
_ForceTerm_Init = _StgFEM._ForceTerm_Init

def _ForceTerm_Delete(forceTerm: 'void *') -> "void":
    return _StgFEM._ForceTerm_Delete(forceTerm)
_ForceTerm_Delete = _StgFEM._ForceTerm_Delete

def _ForceTerm_Print(forceTerm: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._ForceTerm_Print(forceTerm, stream)
_ForceTerm_Print = _StgFEM._ForceTerm_Print

def _ForceTerm_Copy(forceTerm: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._ForceTerm_Copy(forceTerm, dest, deep, nameExt, ptrMap)
_ForceTerm_Copy = _StgFEM._ForceTerm_Copy

def _ForceTerm_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._ForceTerm_DefaultNew(name)
_ForceTerm_DefaultNew = _StgFEM._ForceTerm_DefaultNew

def _ForceTerm_AssignFromXML(forceTerm: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._ForceTerm_AssignFromXML(forceTerm, cf, data)
_ForceTerm_AssignFromXML = _StgFEM._ForceTerm_AssignFromXML

def _ForceTerm_Build(forceTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._ForceTerm_Build(forceTerm, data)
_ForceTerm_Build = _StgFEM._ForceTerm_Build

def _ForceTerm_Initialise(forceTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._ForceTerm_Initialise(forceTerm, data)
_ForceTerm_Initialise = _StgFEM._ForceTerm_Initialise

def _ForceTerm_Execute(forceTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._ForceTerm_Execute(forceTerm, data)
_ForceTerm_Execute = _StgFEM._ForceTerm_Execute

def _ForceTerm_Destroy(forceTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._ForceTerm_Destroy(forceTerm, data)
_ForceTerm_Destroy = _StgFEM._ForceTerm_Destroy

def ForceTerm_AssembleElement(forceTerm: 'void *', forceVector: 'ForceVector', lElement_I: 'Element_LocalIndex', elForceVecToAdd: 'double *') -> "void":
    return _StgFEM.ForceTerm_AssembleElement(forceTerm, forceVector, lElement_I, elForceVecToAdd)
ForceTerm_AssembleElement = _StgFEM.ForceTerm_AssembleElement

def _ForceTerm_AssembleElement(forceTerm: 'void *', forceVec: 'ForceVector', lElement_I: 'Element_LocalIndex', elForceVecToAdd: 'double *') -> "void":
    return _StgFEM._ForceTerm_AssembleElement(forceTerm, forceVec, lElement_I, elForceVecToAdd)
_ForceTerm_AssembleElement = _StgFEM._ForceTerm_AssembleElement

def ForceTerm_SetAssembleElementFunction(forceTerm: 'void *', assembleElementFunction: 'ForceTerm_AssembleElementFunction *') -> "void":
    return _StgFEM.ForceTerm_SetAssembleElementFunction(forceTerm, assembleElementFunction)
ForceTerm_SetAssembleElementFunction = _StgFEM.ForceTerm_SetAssembleElementFunction
class MGOpGenerator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.MGOpGenerator__sizeOfSelf_get, _StgFEM.MGOpGenerator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.MGOpGenerator__deleteSelf_get, _StgFEM.MGOpGenerator__deleteSelf_set)
    type = _swig_property(_StgFEM.MGOpGenerator_type_get, _StgFEM.MGOpGenerator_type_set)
    nRefs = _swig_property(_StgFEM.MGOpGenerator_nRefs_get, _StgFEM.MGOpGenerator_nRefs_set)
    locked = _swig_property(_StgFEM.MGOpGenerator_locked_get, _StgFEM.MGOpGenerator_locked_set)
    _delete = _swig_property(_StgFEM.MGOpGenerator__delete_get, _StgFEM.MGOpGenerator__delete_set)
    _print = _swig_property(_StgFEM.MGOpGenerator__print_get, _StgFEM.MGOpGenerator__print_set)
    _copy = _swig_property(_StgFEM.MGOpGenerator__copy_get, _StgFEM.MGOpGenerator__copy_set)
    name = _swig_property(_StgFEM.MGOpGenerator_name_get, _StgFEM.MGOpGenerator_name_set)
    nameAllocationType = _swig_property(_StgFEM.MGOpGenerator_nameAllocationType_get, _StgFEM.MGOpGenerator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.MGOpGenerator__defaultConstructor_get, _StgFEM.MGOpGenerator__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.MGOpGenerator__construct_get, _StgFEM.MGOpGenerator__construct_set)
    _build = _swig_property(_StgFEM.MGOpGenerator__build_get, _StgFEM.MGOpGenerator__build_set)
    _initialise = _swig_property(_StgFEM.MGOpGenerator__initialise_get, _StgFEM.MGOpGenerator__initialise_set)
    _execute = _swig_property(_StgFEM.MGOpGenerator__execute_get, _StgFEM.MGOpGenerator__execute_set)
    _destroy = _swig_property(_StgFEM.MGOpGenerator__destroy_get, _StgFEM.MGOpGenerator__destroy_set)
    isConstructed = _swig_property(_StgFEM.MGOpGenerator_isConstructed_get, _StgFEM.MGOpGenerator_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.MGOpGenerator_isBuilt_get, _StgFEM.MGOpGenerator_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.MGOpGenerator_isInitialised_get, _StgFEM.MGOpGenerator_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.MGOpGenerator_hasExecuted_get, _StgFEM.MGOpGenerator_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.MGOpGenerator_isDestroyed_get, _StgFEM.MGOpGenerator_isDestroyed_set)
    constructType = _swig_property(_StgFEM.MGOpGenerator_constructType_get, _StgFEM.MGOpGenerator_constructType_set)
    buildType = _swig_property(_StgFEM.MGOpGenerator_buildType_get, _StgFEM.MGOpGenerator_buildType_set)
    initialiseType = _swig_property(_StgFEM.MGOpGenerator_initialiseType_get, _StgFEM.MGOpGenerator_initialiseType_set)
    executeType = _swig_property(_StgFEM.MGOpGenerator_executeType_get, _StgFEM.MGOpGenerator_executeType_set)
    destroyType = _swig_property(_StgFEM.MGOpGenerator_destroyType_get, _StgFEM.MGOpGenerator_destroyType_set)
    setNumLevelsFunc = _swig_property(_StgFEM.MGOpGenerator_setNumLevelsFunc_get, _StgFEM.MGOpGenerator_setNumLevelsFunc_set)
    hasExpiredFunc = _swig_property(_StgFEM.MGOpGenerator_hasExpiredFunc_get, _StgFEM.MGOpGenerator_hasExpiredFunc_set)
    generateFunc = _swig_property(_StgFEM.MGOpGenerator_generateFunc_get, _StgFEM.MGOpGenerator_generateFunc_set)
    solver = _swig_property(_StgFEM.MGOpGenerator_solver_get, _StgFEM.MGOpGenerator_solver_set)
    nLevels = _swig_property(_StgFEM.MGOpGenerator_nLevels_get, _StgFEM.MGOpGenerator_nLevels_set)

    def __init__(self):
        _StgFEM.MGOpGenerator_swiginit(self, _StgFEM.new_MGOpGenerator())
    __swig_destroy__ = _StgFEM.delete_MGOpGenerator
MGOpGenerator_swigregister = _StgFEM.MGOpGenerator_swigregister
MGOpGenerator_swigregister(MGOpGenerator)
MGOpGenerator_Type = cvar.MGOpGenerator_Type


def _MGOpGenerator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setNumLevelsFunc: 'MGOpGenerator_SetNumLevelsFunc *', hasExpiredFunc: 'MGOpGenerator_HasExpiredFunc *', generateFunc: 'MGOpGenerator_GenerateFunc *') -> "MGOpGenerator *":
    return _StgFEM._MGOpGenerator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setNumLevelsFunc, hasExpiredFunc, generateFunc)
_MGOpGenerator_New = _StgFEM._MGOpGenerator_New

def _MGOpGenerator_Init(arg1: 'MGOpGenerator') -> "void":
    return _StgFEM._MGOpGenerator_Init(arg1)
_MGOpGenerator_Init = _StgFEM._MGOpGenerator_Init

def _MGOpGenerator_Delete(mgOpGenerator: 'void *') -> "void":
    return _StgFEM._MGOpGenerator_Delete(mgOpGenerator)
_MGOpGenerator_Delete = _StgFEM._MGOpGenerator_Delete

def _MGOpGenerator_Print(mgOpGenerator: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._MGOpGenerator_Print(mgOpGenerator, stream)
_MGOpGenerator_Print = _StgFEM._MGOpGenerator_Print

def _MGOpGenerator_AssignFromXML(mgOpGenerator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._MGOpGenerator_AssignFromXML(mgOpGenerator, cf, data)
_MGOpGenerator_AssignFromXML = _StgFEM._MGOpGenerator_AssignFromXML

def _MGOpGenerator_Build(mgOpGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._MGOpGenerator_Build(mgOpGenerator, data)
_MGOpGenerator_Build = _StgFEM._MGOpGenerator_Build

def _MGOpGenerator_Initialise(mgOpGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._MGOpGenerator_Initialise(mgOpGenerator, data)
_MGOpGenerator_Initialise = _StgFEM._MGOpGenerator_Initialise

def _MGOpGenerator_Execute(mgOpGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._MGOpGenerator_Execute(mgOpGenerator, data)
_MGOpGenerator_Execute = _StgFEM._MGOpGenerator_Execute

def _MGOpGenerator_Destroy(mgOpGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._MGOpGenerator_Destroy(mgOpGenerator, data)
_MGOpGenerator_Destroy = _StgFEM._MGOpGenerator_Destroy

def _MGOpGenerator_SetNumLevels(mgOpGenerator: 'void *', nLevels: 'unsigned int') -> "void":
    return _StgFEM._MGOpGenerator_SetNumLevels(mgOpGenerator, nLevels)
_MGOpGenerator_SetNumLevels = _StgFEM._MGOpGenerator_SetNumLevels

def MGOpGenerator_SetMatrixSolver(mgOpGenerator: 'void *', solver: 'void *') -> "void":
    return _StgFEM.MGOpGenerator_SetMatrixSolver(mgOpGenerator, solver)
MGOpGenerator_SetMatrixSolver = _StgFEM.MGOpGenerator_SetMatrixSolver

def MGOpGenerator_GetNumLevels(mgOpGenerator: 'void *') -> "unsigned int":
    return _StgFEM.MGOpGenerator_GetNumLevels(mgOpGenerator)
MGOpGenerator_GetNumLevels = _StgFEM.MGOpGenerator_GetNumLevels
class PETScMGSolver_Level(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    nDownIts = _swig_property(_StgFEM.PETScMGSolver_Level_nDownIts_get, _StgFEM.PETScMGSolver_Level_nDownIts_set)
    nUpIts = _swig_property(_StgFEM.PETScMGSolver_Level_nUpIts_get, _StgFEM.PETScMGSolver_Level_nUpIts_set)
    nCycles = _swig_property(_StgFEM.PETScMGSolver_Level_nCycles_get, _StgFEM.PETScMGSolver_Level_nCycles_set)
    R = _swig_property(_StgFEM.PETScMGSolver_Level_R_get, _StgFEM.PETScMGSolver_Level_R_set)
    P = _swig_property(_StgFEM.PETScMGSolver_Level_P_get, _StgFEM.PETScMGSolver_Level_P_set)
    A = _swig_property(_StgFEM.PETScMGSolver_Level_A_get, _StgFEM.PETScMGSolver_Level_A_set)
    workRes = _swig_property(_StgFEM.PETScMGSolver_Level_workRes_get, _StgFEM.PETScMGSolver_Level_workRes_set)
    workSol = _swig_property(_StgFEM.PETScMGSolver_Level_workSol_get, _StgFEM.PETScMGSolver_Level_workSol_set)
    workRHS = _swig_property(_StgFEM.PETScMGSolver_Level_workRHS_get, _StgFEM.PETScMGSolver_Level_workRHS_set)

    def __init__(self):
        _StgFEM.PETScMGSolver_Level_swiginit(self, _StgFEM.new_PETScMGSolver_Level())
    __swig_destroy__ = _StgFEM.delete_PETScMGSolver_Level
PETScMGSolver_Level_swigregister = _StgFEM.PETScMGSolver_Level_swigregister
PETScMGSolver_Level_swigregister(PETScMGSolver_Level)
PETScMGSolver_Type = cvar.PETScMGSolver_Type

class PETScMGSolver(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.PETScMGSolver__sizeOfSelf_get, _StgFEM.PETScMGSolver__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.PETScMGSolver__deleteSelf_get, _StgFEM.PETScMGSolver__deleteSelf_set)
    type = _swig_property(_StgFEM.PETScMGSolver_type_get, _StgFEM.PETScMGSolver_type_set)
    nRefs = _swig_property(_StgFEM.PETScMGSolver_nRefs_get, _StgFEM.PETScMGSolver_nRefs_set)
    locked = _swig_property(_StgFEM.PETScMGSolver_locked_get, _StgFEM.PETScMGSolver_locked_set)
    _delete = _swig_property(_StgFEM.PETScMGSolver__delete_get, _StgFEM.PETScMGSolver__delete_set)
    _print = _swig_property(_StgFEM.PETScMGSolver__print_get, _StgFEM.PETScMGSolver__print_set)
    _copy = _swig_property(_StgFEM.PETScMGSolver__copy_get, _StgFEM.PETScMGSolver__copy_set)
    name = _swig_property(_StgFEM.PETScMGSolver_name_get, _StgFEM.PETScMGSolver_name_set)
    nameAllocationType = _swig_property(_StgFEM.PETScMGSolver_nameAllocationType_get, _StgFEM.PETScMGSolver_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.PETScMGSolver__defaultConstructor_get, _StgFEM.PETScMGSolver__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.PETScMGSolver__construct_get, _StgFEM.PETScMGSolver__construct_set)
    _build = _swig_property(_StgFEM.PETScMGSolver__build_get, _StgFEM.PETScMGSolver__build_set)
    _initialise = _swig_property(_StgFEM.PETScMGSolver__initialise_get, _StgFEM.PETScMGSolver__initialise_set)
    _execute = _swig_property(_StgFEM.PETScMGSolver__execute_get, _StgFEM.PETScMGSolver__execute_set)
    _destroy = _swig_property(_StgFEM.PETScMGSolver__destroy_get, _StgFEM.PETScMGSolver__destroy_set)
    isConstructed = _swig_property(_StgFEM.PETScMGSolver_isConstructed_get, _StgFEM.PETScMGSolver_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.PETScMGSolver_isBuilt_get, _StgFEM.PETScMGSolver_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.PETScMGSolver_isInitialised_get, _StgFEM.PETScMGSolver_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.PETScMGSolver_hasExecuted_get, _StgFEM.PETScMGSolver_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.PETScMGSolver_isDestroyed_get, _StgFEM.PETScMGSolver_isDestroyed_set)
    constructType = _swig_property(_StgFEM.PETScMGSolver_constructType_get, _StgFEM.PETScMGSolver_constructType_set)
    buildType = _swig_property(_StgFEM.PETScMGSolver_buildType_get, _StgFEM.PETScMGSolver_buildType_set)
    initialiseType = _swig_property(_StgFEM.PETScMGSolver_initialiseType_get, _StgFEM.PETScMGSolver_initialiseType_set)
    executeType = _swig_property(_StgFEM.PETScMGSolver_executeType_get, _StgFEM.PETScMGSolver_executeType_set)
    destroyType = _swig_property(_StgFEM.PETScMGSolver_destroyType_get, _StgFEM.PETScMGSolver_destroyType_set)
    setCommFunc = _swig_property(_StgFEM.PETScMGSolver_setCommFunc_get, _StgFEM.PETScMGSolver_setCommFunc_set)
    setMatrixFunc = _swig_property(_StgFEM.PETScMGSolver_setMatrixFunc_get, _StgFEM.PETScMGSolver_setMatrixFunc_set)
    setMaxIterationsFunc = _swig_property(_StgFEM.PETScMGSolver_setMaxIterationsFunc_get, _StgFEM.PETScMGSolver_setMaxIterationsFunc_set)
    setRelativeToleranceFunc = _swig_property(_StgFEM.PETScMGSolver_setRelativeToleranceFunc_get, _StgFEM.PETScMGSolver_setRelativeToleranceFunc_set)
    setAbsoluteToleranceFunc = _swig_property(_StgFEM.PETScMGSolver_setAbsoluteToleranceFunc_get, _StgFEM.PETScMGSolver_setAbsoluteToleranceFunc_set)
    setUseInitialSolutionFunc = _swig_property(_StgFEM.PETScMGSolver_setUseInitialSolutionFunc_get, _StgFEM.PETScMGSolver_setUseInitialSolutionFunc_set)
    solveFunc = _swig_property(_StgFEM.PETScMGSolver_solveFunc_get, _StgFEM.PETScMGSolver_solveFunc_set)
    setupFunc = _swig_property(_StgFEM.PETScMGSolver_setupFunc_get, _StgFEM.PETScMGSolver_setupFunc_set)
    getSolveStatusFunc = _swig_property(_StgFEM.PETScMGSolver_getSolveStatusFunc_get, _StgFEM.PETScMGSolver_getSolveStatusFunc_set)
    getIterationsFunc = _swig_property(_StgFEM.PETScMGSolver_getIterationsFunc_get, _StgFEM.PETScMGSolver_getIterationsFunc_set)
    getMaxIterationsFunc = _swig_property(_StgFEM.PETScMGSolver_getMaxIterationsFunc_get, _StgFEM.PETScMGSolver_getMaxIterationsFunc_set)
    getResidualNormFunc = _swig_property(_StgFEM.PETScMGSolver_getResidualNormFunc_get, _StgFEM.PETScMGSolver_getResidualNormFunc_set)
    pure = _swig_property(_StgFEM.PETScMGSolver_pure_get, _StgFEM.PETScMGSolver_pure_set)
    nLevels = _swig_property(_StgFEM.PETScMGSolver_nLevels_get, _StgFEM.PETScMGSolver_nLevels_set)
    levels = _swig_property(_StgFEM.PETScMGSolver_levels_get, _StgFEM.PETScMGSolver_levels_set)
    opGen = _swig_property(_StgFEM.PETScMGSolver_opGen_get, _StgFEM.PETScMGSolver_opGen_set)
    solversChanged = _swig_property(_StgFEM.PETScMGSolver_solversChanged_get, _StgFEM.PETScMGSolver_solversChanged_set)
    opsChanged = _swig_property(_StgFEM.PETScMGSolver_opsChanged_get, _StgFEM.PETScMGSolver_opsChanged_set)
    mgData = _swig_property(_StgFEM.PETScMGSolver_mgData_get, _StgFEM.PETScMGSolver_mgData_set)

    def __init__(self):
        _StgFEM.PETScMGSolver_swiginit(self, _StgFEM.new_PETScMGSolver())
    __swig_destroy__ = _StgFEM.delete_PETScMGSolver
PETScMGSolver_swigregister = _StgFEM.PETScMGSolver_swigregister
PETScMGSolver_swigregister(PETScMGSolver)


def PETScMGSolver_New(name: 'Name') -> "PETScMGSolver *":
    return _StgFEM.PETScMGSolver_New(name)
PETScMGSolver_New = _StgFEM.PETScMGSolver_New

def _PETScMGSolver_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setCommFunc: 'MGSolver_SetCommFunc *', setMatrixFunc: 'MGSolver_SetMatrixFunc *', setMaxIterationsFunc: 'MGSolver_SetMaxIterationsFunc *', setRelativeToleranceFunc: 'MGSolver_SetRelativeToleranceFunc *', setAbsoluteToleranceFunc: 'MGSolver_SetAbsoluteToleranceFunc *', setUseInitialSolutionFunc: 'MGSolver_SetUseInitialSolutionFunc *', solveFunc: 'MGSolver_SolveFunc *', setupFunc: 'MGSolver_SetupFunc *', getSolveStatusFunc: 'MGSolver_GetSolveStatusFunc *', getIterationsFunc: 'MGSolver_GetIterationsFunc *', getMaxIterationsFunc: 'MGSolver_GetMaxIterationsFunc *', getResidualNormFunc: 'MGSolver_GetResidualNormFunc *') -> "PETScMGSolver *":
    return _StgFEM._PETScMGSolver_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setCommFunc, setMatrixFunc, setMaxIterationsFunc, setRelativeToleranceFunc, setAbsoluteToleranceFunc, setUseInitialSolutionFunc, solveFunc, setupFunc, getSolveStatusFunc, getIterationsFunc, getMaxIterationsFunc, getResidualNormFunc)
_PETScMGSolver_New = _StgFEM._PETScMGSolver_New

def _PETScMGSolver_Init(arg1: 'PETScMGSolver') -> "void":
    return _StgFEM._PETScMGSolver_Init(arg1)
_PETScMGSolver_Init = _StgFEM._PETScMGSolver_Init

def _PETScMGSolver_Delete(matrixSolver: 'void *') -> "void":
    return _StgFEM._PETScMGSolver_Delete(matrixSolver)
_PETScMGSolver_Delete = _StgFEM._PETScMGSolver_Delete

def _PETScMGSolver_Print(matrixSolver: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._PETScMGSolver_Print(matrixSolver, stream)
_PETScMGSolver_Print = _StgFEM._PETScMGSolver_Print

def _PETScMGSolver_AssignFromXML(matrixSolver: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._PETScMGSolver_AssignFromXML(matrixSolver, cf, data)
_PETScMGSolver_AssignFromXML = _StgFEM._PETScMGSolver_AssignFromXML

def _PETScMGSolver_Build(matrixSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._PETScMGSolver_Build(matrixSolver, data)
_PETScMGSolver_Build = _StgFEM._PETScMGSolver_Build

def _PETScMGSolver_Initialise(matrixSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._PETScMGSolver_Initialise(matrixSolver, data)
_PETScMGSolver_Initialise = _StgFEM._PETScMGSolver_Initialise

def _PETScMGSolver_Execute(matrixSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._PETScMGSolver_Execute(matrixSolver, data)
_PETScMGSolver_Execute = _StgFEM._PETScMGSolver_Execute

def _PETScMGSolver_Destroy(matrixSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._PETScMGSolver_Destroy(matrixSolver, data)
_PETScMGSolver_Destroy = _StgFEM._PETScMGSolver_Destroy

def PETScMGSolver_SetComm(matrixSolver: 'void *', comm: 'MPI_Comm') -> "void":
    return _StgFEM.PETScMGSolver_SetComm(matrixSolver, comm)
PETScMGSolver_SetComm = _StgFEM.PETScMGSolver_SetComm

def PETScMGSolver_Setup(matrixSolver: 'void *', rhs: 'void *', solution: 'void *') -> "void":
    return _StgFEM.PETScMGSolver_Setup(matrixSolver, rhs, solution)
PETScMGSolver_Setup = _StgFEM.PETScMGSolver_Setup

def PETScMGSolver_SetLevels(matrixSolver: 'void *', nLevels: 'unsigned int') -> "void":
    return _StgFEM.PETScMGSolver_SetLevels(matrixSolver, nLevels)
PETScMGSolver_SetLevels = _StgFEM.PETScMGSolver_SetLevels

def PETScMGSolver_SetRestriction(matrixSolver: 'void *', levelInd: 'unsigned int', R: 'void *') -> "void":
    return _StgFEM.PETScMGSolver_SetRestriction(matrixSolver, levelInd, R)
PETScMGSolver_SetRestriction = _StgFEM.PETScMGSolver_SetRestriction

def PETScMGSolver_SetProlongation(matrixSolver: 'void *', levelInd: 'unsigned int', P: 'void *') -> "void":
    return _StgFEM.PETScMGSolver_SetProlongation(matrixSolver, levelInd, P)
PETScMGSolver_SetProlongation = _StgFEM.PETScMGSolver_SetProlongation

def PETScMGSolver_SetLevelDownIterations(matrixSolver: 'void *', level: 'unsigned int', nIts: 'unsigned int') -> "void":
    return _StgFEM.PETScMGSolver_SetLevelDownIterations(matrixSolver, level, nIts)
PETScMGSolver_SetLevelDownIterations = _StgFEM.PETScMGSolver_SetLevelDownIterations

def PETScMGSolver_SetLevelUpIterations(matrixSolver: 'void *', level: 'unsigned int', nIts: 'unsigned int') -> "void":
    return _StgFEM.PETScMGSolver_SetLevelUpIterations(matrixSolver, level, nIts)
PETScMGSolver_SetLevelUpIterations = _StgFEM.PETScMGSolver_SetLevelUpIterations

def PETScMGSolver_SetLevelCycles(matrixSolver: 'void *', level: 'unsigned int', nCycles: 'unsigned int') -> "void":
    return _StgFEM.PETScMGSolver_SetLevelCycles(matrixSolver, level, nCycles)
PETScMGSolver_SetLevelCycles = _StgFEM.PETScMGSolver_SetLevelCycles

def PETScMGSolver_SetAllDownIterations(matrixSolver: 'void *', nIts: 'unsigned int') -> "void":
    return _StgFEM.PETScMGSolver_SetAllDownIterations(matrixSolver, nIts)
PETScMGSolver_SetAllDownIterations = _StgFEM.PETScMGSolver_SetAllDownIterations

def PETScMGSolver_SetAllUpIterations(matrixSolver: 'void *', nIts: 'unsigned int') -> "void":
    return _StgFEM.PETScMGSolver_SetAllUpIterations(matrixSolver, nIts)
PETScMGSolver_SetAllUpIterations = _StgFEM.PETScMGSolver_SetAllUpIterations

def PETScMGSolver_GetNumLevels(matrixSolver: 'void *') -> "unsigned int":
    return _StgFEM.PETScMGSolver_GetNumLevels(matrixSolver)
PETScMGSolver_GetNumLevels = _StgFEM.PETScMGSolver_GetNumLevels

def PETScMGSolver_UpdateOps(arg1: 'PETScMGSolver') -> "void":
    return _StgFEM.PETScMGSolver_UpdateOps(arg1)
PETScMGSolver_UpdateOps = _StgFEM.PETScMGSolver_UpdateOps

def PETScMGSolver_UpdateMatrices(arg1: 'PETScMGSolver') -> "void":
    return _StgFEM.PETScMGSolver_UpdateMatrices(arg1)
PETScMGSolver_UpdateMatrices = _StgFEM.PETScMGSolver_UpdateMatrices

def PETScMGSolver_UpdateWorkVectors(arg1: 'PETScMGSolver') -> "void":
    return _StgFEM.PETScMGSolver_UpdateWorkVectors(arg1)
PETScMGSolver_UpdateWorkVectors = _StgFEM.PETScMGSolver_UpdateWorkVectors

def PETScMGSolver_UpdateSolvers(arg1: 'PETScMGSolver') -> "void":
    return _StgFEM.PETScMGSolver_UpdateSolvers(arg1)
PETScMGSolver_UpdateSolvers = _StgFEM.PETScMGSolver_UpdateSolvers

def PETScMGSolver_Destruct(arg1: 'PETScMGSolver') -> "void":
    return _StgFEM.PETScMGSolver_Destruct(arg1)
PETScMGSolver_Destruct = _StgFEM.PETScMGSolver_Destruct

def PETScMGSolver_DestructLevels(arg1: 'PETScMGSolver') -> "void":
    return _StgFEM.PETScMGSolver_DestructLevels(arg1)
PETScMGSolver_DestructLevels = _StgFEM.PETScMGSolver_DestructLevels
class SLE_Solver(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.SLE_Solver__sizeOfSelf_get, _StgFEM.SLE_Solver__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.SLE_Solver__deleteSelf_get, _StgFEM.SLE_Solver__deleteSelf_set)
    type = _swig_property(_StgFEM.SLE_Solver_type_get, _StgFEM.SLE_Solver_type_set)
    nRefs = _swig_property(_StgFEM.SLE_Solver_nRefs_get, _StgFEM.SLE_Solver_nRefs_set)
    locked = _swig_property(_StgFEM.SLE_Solver_locked_get, _StgFEM.SLE_Solver_locked_set)
    _delete = _swig_property(_StgFEM.SLE_Solver__delete_get, _StgFEM.SLE_Solver__delete_set)
    _print = _swig_property(_StgFEM.SLE_Solver__print_get, _StgFEM.SLE_Solver__print_set)
    _copy = _swig_property(_StgFEM.SLE_Solver__copy_get, _StgFEM.SLE_Solver__copy_set)
    name = _swig_property(_StgFEM.SLE_Solver_name_get, _StgFEM.SLE_Solver_name_set)
    nameAllocationType = _swig_property(_StgFEM.SLE_Solver_nameAllocationType_get, _StgFEM.SLE_Solver_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.SLE_Solver__defaultConstructor_get, _StgFEM.SLE_Solver__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.SLE_Solver__construct_get, _StgFEM.SLE_Solver__construct_set)
    _build = _swig_property(_StgFEM.SLE_Solver__build_get, _StgFEM.SLE_Solver__build_set)
    _initialise = _swig_property(_StgFEM.SLE_Solver__initialise_get, _StgFEM.SLE_Solver__initialise_set)
    _execute = _swig_property(_StgFEM.SLE_Solver__execute_get, _StgFEM.SLE_Solver__execute_set)
    _destroy = _swig_property(_StgFEM.SLE_Solver__destroy_get, _StgFEM.SLE_Solver__destroy_set)
    isConstructed = _swig_property(_StgFEM.SLE_Solver_isConstructed_get, _StgFEM.SLE_Solver_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.SLE_Solver_isBuilt_get, _StgFEM.SLE_Solver_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.SLE_Solver_isInitialised_get, _StgFEM.SLE_Solver_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.SLE_Solver_hasExecuted_get, _StgFEM.SLE_Solver_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.SLE_Solver_isDestroyed_get, _StgFEM.SLE_Solver_isDestroyed_set)
    constructType = _swig_property(_StgFEM.SLE_Solver_constructType_get, _StgFEM.SLE_Solver_constructType_set)
    buildType = _swig_property(_StgFEM.SLE_Solver_buildType_get, _StgFEM.SLE_Solver_buildType_set)
    initialiseType = _swig_property(_StgFEM.SLE_Solver_initialiseType_get, _StgFEM.SLE_Solver_initialiseType_set)
    executeType = _swig_property(_StgFEM.SLE_Solver_executeType_get, _StgFEM.SLE_Solver_executeType_set)
    destroyType = _swig_property(_StgFEM.SLE_Solver_destroyType_get, _StgFEM.SLE_Solver_destroyType_set)
    extensionManager = _swig_property(_StgFEM.SLE_Solver_extensionManager_get, _StgFEM.SLE_Solver_extensionManager_set)
    _solverSetup = _swig_property(_StgFEM.SLE_Solver__solverSetup_get, _StgFEM.SLE_Solver__solverSetup_set)
    _solve = _swig_property(_StgFEM.SLE_Solver__solve_get, _StgFEM.SLE_Solver__solve_set)
    _getResidual = _swig_property(_StgFEM.SLE_Solver__getResidual_get, _StgFEM.SLE_Solver__getResidual_set)
    _formResidual = _swig_property(_StgFEM.SLE_Solver__formResidual_get, _StgFEM.SLE_Solver__formResidual_set)
    _getRhs = _swig_property(_StgFEM.SLE_Solver__getRhs_get, _StgFEM.SLE_Solver__getRhs_set)
    _getSolution = _swig_property(_StgFEM.SLE_Solver__getSolution_get, _StgFEM.SLE_Solver__getSolution_set)
    debug = _swig_property(_StgFEM.SLE_Solver_debug_get, _StgFEM.SLE_Solver_debug_set)
    info = _swig_property(_StgFEM.SLE_Solver_info_get, _StgFEM.SLE_Solver_info_set)
    maxIterations = _swig_property(_StgFEM.SLE_Solver_maxIterations_get, _StgFEM.SLE_Solver_maxIterations_set)
    hasSolved = _swig_property(_StgFEM.SLE_Solver_hasSolved_get, _StgFEM.SLE_Solver_hasSolved_set)
    inneritsinitialtime = _swig_property(_StgFEM.SLE_Solver_inneritsinitialtime_get, _StgFEM.SLE_Solver_inneritsinitialtime_set)
    outeritsinitialtime = _swig_property(_StgFEM.SLE_Solver_outeritsinitialtime_get, _StgFEM.SLE_Solver_outeritsinitialtime_set)
    nonlinearitsinitialtime = _swig_property(_StgFEM.SLE_Solver_nonlinearitsinitialtime_get, _StgFEM.SLE_Solver_nonlinearitsinitialtime_set)
    inneritsendtime = _swig_property(_StgFEM.SLE_Solver_inneritsendtime_get, _StgFEM.SLE_Solver_inneritsendtime_set)
    outeritsendtime = _swig_property(_StgFEM.SLE_Solver_outeritsendtime_get, _StgFEM.SLE_Solver_outeritsendtime_set)
    nonlinearitsendtime = _swig_property(_StgFEM.SLE_Solver_nonlinearitsendtime_get, _StgFEM.SLE_Solver_nonlinearitsendtime_set)
    totalinneritstime = _swig_property(_StgFEM.SLE_Solver_totalinneritstime_get, _StgFEM.SLE_Solver_totalinneritstime_set)
    totalouteritstime = _swig_property(_StgFEM.SLE_Solver_totalouteritstime_get, _StgFEM.SLE_Solver_totalouteritstime_set)
    totalnonlinearitstime = _swig_property(_StgFEM.SLE_Solver_totalnonlinearitstime_get, _StgFEM.SLE_Solver_totalnonlinearitstime_set)
    totalnuminnerits = _swig_property(_StgFEM.SLE_Solver_totalnuminnerits_get, _StgFEM.SLE_Solver_totalnuminnerits_set)
    totalnumouterits = _swig_property(_StgFEM.SLE_Solver_totalnumouterits_get, _StgFEM.SLE_Solver_totalnumouterits_set)
    totalnumnonlinearits = _swig_property(_StgFEM.SLE_Solver_totalnumnonlinearits_get, _StgFEM.SLE_Solver_totalnumnonlinearits_set)
    avgnuminnerits = _swig_property(_StgFEM.SLE_Solver_avgnuminnerits_get, _StgFEM.SLE_Solver_avgnuminnerits_set)
    avgnumouterits = _swig_property(_StgFEM.SLE_Solver_avgnumouterits_get, _StgFEM.SLE_Solver_avgnumouterits_set)
    avgtimeinnerits = _swig_property(_StgFEM.SLE_Solver_avgtimeinnerits_get, _StgFEM.SLE_Solver_avgtimeinnerits_set)
    avgtimeouterits = _swig_property(_StgFEM.SLE_Solver_avgtimeouterits_get, _StgFEM.SLE_Solver_avgtimeouterits_set)
    avgtimenonlinearits = _swig_property(_StgFEM.SLE_Solver_avgtimenonlinearits_get, _StgFEM.SLE_Solver_avgtimenonlinearits_set)
    currenttimestep = _swig_property(_StgFEM.SLE_Solver_currenttimestep_get, _StgFEM.SLE_Solver_currenttimestep_set)
    previoustimestep = _swig_property(_StgFEM.SLE_Solver_previoustimestep_get, _StgFEM.SLE_Solver_previoustimestep_set)

    def __init__(self):
        _StgFEM.SLE_Solver_swiginit(self, _StgFEM.new_SLE_Solver())
    __swig_destroy__ = _StgFEM.delete_SLE_Solver
SLE_Solver_swigregister = _StgFEM.SLE_Solver_swigregister
SLE_Solver_swigregister(SLE_Solver)
SLE_Solver_Type = cvar.SLE_Solver_Type


def _SLE_Solver_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _solverSetup: 'SLE_Solver_SolverSetupFunction *', _solve: 'SLE_Solver_SolveFunction *', _getResidual: 'SLE_Solver_GetResidualFunc *') -> "SLE_Solver *":
    return _StgFEM._SLE_Solver_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _solverSetup, _solve, _getResidual)
_SLE_Solver_New = _StgFEM._SLE_Solver_New

def _SLE_Solver_Init(arg1: 'SLE_Solver') -> "void":
    return _StgFEM._SLE_Solver_Init(arg1)
_SLE_Solver_Init = _StgFEM._SLE_Solver_Init

def SLE_Solver_InitAll(sleSolver: 'void *') -> "void":
    return _StgFEM.SLE_Solver_InitAll(sleSolver)
SLE_Solver_InitAll = _StgFEM.SLE_Solver_InitAll

def _SLE_Solver_Copy(sleSolver: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._SLE_Solver_Copy(sleSolver, dest, deep, nameExt, ptrMap)
_SLE_Solver_Copy = _StgFEM._SLE_Solver_Copy

def _SLE_Solver_Delete(sleSolver: 'void *') -> "void":
    return _StgFEM._SLE_Solver_Delete(sleSolver)
_SLE_Solver_Delete = _StgFEM._SLE_Solver_Delete

def _SLE_Solver_Print(sleSolver: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._SLE_Solver_Print(sleSolver, stream)
_SLE_Solver_Print = _StgFEM._SLE_Solver_Print

def _SLE_Solver_Build(sleSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._SLE_Solver_Build(sleSolver, data)
_SLE_Solver_Build = _StgFEM._SLE_Solver_Build

def _SLE_Solver_AssignFromXML(sleSolver: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._SLE_Solver_AssignFromXML(sleSolver, cf, data)
_SLE_Solver_AssignFromXML = _StgFEM._SLE_Solver_AssignFromXML

def _SLE_Solver_Initialise(sleSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._SLE_Solver_Initialise(sleSolver, data)
_SLE_Solver_Initialise = _StgFEM._SLE_Solver_Initialise

def _SLE_Solver_Execute(sleSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._SLE_Solver_Execute(sleSolver, data)
_SLE_Solver_Execute = _StgFEM._SLE_Solver_Execute

def _SLE_Solver_Destroy(sleSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._SLE_Solver_Destroy(sleSolver, data)
_SLE_Solver_Destroy = _StgFEM._SLE_Solver_Destroy

def SLE_Solver_SolverSetup(sleSolver: 'void *', sle: 'void *') -> "void":
    return _StgFEM.SLE_Solver_SolverSetup(sleSolver, sle)
SLE_Solver_SolverSetup = _StgFEM.SLE_Solver_SolverSetup

def SLE_Solver_Solve(sleSolver: 'void *', sle: 'void *') -> "void":
    return _StgFEM.SLE_Solver_Solve(sleSolver, sle)
SLE_Solver_Solve = _StgFEM.SLE_Solver_Solve
class SolutionVector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.SolutionVector__sizeOfSelf_get, _StgFEM.SolutionVector__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.SolutionVector__deleteSelf_get, _StgFEM.SolutionVector__deleteSelf_set)
    type = _swig_property(_StgFEM.SolutionVector_type_get, _StgFEM.SolutionVector_type_set)
    nRefs = _swig_property(_StgFEM.SolutionVector_nRefs_get, _StgFEM.SolutionVector_nRefs_set)
    locked = _swig_property(_StgFEM.SolutionVector_locked_get, _StgFEM.SolutionVector_locked_set)
    _delete = _swig_property(_StgFEM.SolutionVector__delete_get, _StgFEM.SolutionVector__delete_set)
    _print = _swig_property(_StgFEM.SolutionVector__print_get, _StgFEM.SolutionVector__print_set)
    _copy = _swig_property(_StgFEM.SolutionVector__copy_get, _StgFEM.SolutionVector__copy_set)
    name = _swig_property(_StgFEM.SolutionVector_name_get, _StgFEM.SolutionVector_name_set)
    nameAllocationType = _swig_property(_StgFEM.SolutionVector_nameAllocationType_get, _StgFEM.SolutionVector_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.SolutionVector__defaultConstructor_get, _StgFEM.SolutionVector__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.SolutionVector__construct_get, _StgFEM.SolutionVector__construct_set)
    _build = _swig_property(_StgFEM.SolutionVector__build_get, _StgFEM.SolutionVector__build_set)
    _initialise = _swig_property(_StgFEM.SolutionVector__initialise_get, _StgFEM.SolutionVector__initialise_set)
    _execute = _swig_property(_StgFEM.SolutionVector__execute_get, _StgFEM.SolutionVector__execute_set)
    _destroy = _swig_property(_StgFEM.SolutionVector__destroy_get, _StgFEM.SolutionVector__destroy_set)
    isConstructed = _swig_property(_StgFEM.SolutionVector_isConstructed_get, _StgFEM.SolutionVector_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.SolutionVector_isBuilt_get, _StgFEM.SolutionVector_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.SolutionVector_isInitialised_get, _StgFEM.SolutionVector_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.SolutionVector_hasExecuted_get, _StgFEM.SolutionVector_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.SolutionVector_isDestroyed_get, _StgFEM.SolutionVector_isDestroyed_set)
    constructType = _swig_property(_StgFEM.SolutionVector_constructType_get, _StgFEM.SolutionVector_constructType_set)
    buildType = _swig_property(_StgFEM.SolutionVector_buildType_get, _StgFEM.SolutionVector_buildType_set)
    initialiseType = _swig_property(_StgFEM.SolutionVector_initialiseType_get, _StgFEM.SolutionVector_initialiseType_set)
    executeType = _swig_property(_StgFEM.SolutionVector_executeType_get, _StgFEM.SolutionVector_executeType_set)
    destroyType = _swig_property(_StgFEM.SolutionVector_destroyType_get, _StgFEM.SolutionVector_destroyType_set)
    debug = _swig_property(_StgFEM.SolutionVector_debug_get, _StgFEM.SolutionVector_debug_set)
    vector = _swig_property(_StgFEM.SolutionVector_vector_get, _StgFEM.SolutionVector_vector_set)
    comm = _swig_property(_StgFEM.SolutionVector_comm_get, _StgFEM.SolutionVector_comm_set)
    feVariable = _swig_property(_StgFEM.SolutionVector_feVariable_get, _StgFEM.SolutionVector_feVariable_set)
    eqNum = _swig_property(_StgFEM.SolutionVector_eqNum_get, _StgFEM.SolutionVector_eqNum_set)

    def __init__(self):
        _StgFEM.SolutionVector_swiginit(self, _StgFEM.new_SolutionVector())
    __swig_destroy__ = _StgFEM.delete_SolutionVector
SolutionVector_swigregister = _StgFEM.SolutionVector_swigregister
SolutionVector_swigregister(SolutionVector)
SolutionVector_Type = cvar.SolutionVector_Type


def _SolutionVector_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._SolutionVector_DefaultNew(name)
_SolutionVector_DefaultNew = _StgFEM._SolutionVector_DefaultNew

def SolutionVector_New(name: 'Name', comm: 'MPI_Comm', feVariable: 'FeVariable') -> "SolutionVector *":
    return _StgFEM.SolutionVector_New(name, comm, feVariable)
SolutionVector_New = _StgFEM.SolutionVector_New

def _SolutionVector_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "SolutionVector *":
    return _StgFEM._SolutionVector_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_SolutionVector_New = _StgFEM._SolutionVector_New

def _SolutionVector_Init(arg1: 'SolutionVector', comm: 'MPI_Comm', feVariable: 'FeVariable') -> "void":
    return _StgFEM._SolutionVector_Init(arg1, comm, feVariable)
_SolutionVector_Init = _StgFEM._SolutionVector_Init

def _SolutionVector_Delete(solutionVector: 'void *') -> "void":
    return _StgFEM._SolutionVector_Delete(solutionVector)
_SolutionVector_Delete = _StgFEM._SolutionVector_Delete

def _SolutionVector_Print(solutionVector: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._SolutionVector_Print(solutionVector, stream)
_SolutionVector_Print = _StgFEM._SolutionVector_Print

def _SolutionVector_Copy(solutionVector: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._SolutionVector_Copy(solutionVector, dest, deep, nameExt, ptrMap)
_SolutionVector_Copy = _StgFEM._SolutionVector_Copy

def _SolutionVector_Build(solutionVector: 'void *', data: 'void *') -> "void":
    return _StgFEM._SolutionVector_Build(solutionVector, data)
_SolutionVector_Build = _StgFEM._SolutionVector_Build

def _SolutionVector_AssignFromXML(solutionVector: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._SolutionVector_AssignFromXML(solutionVector, cf, data)
_SolutionVector_AssignFromXML = _StgFEM._SolutionVector_AssignFromXML

def _SolutionVector_Initialise(solutionVector: 'void *', data: 'void *') -> "void":
    return _StgFEM._SolutionVector_Initialise(solutionVector, data)
_SolutionVector_Initialise = _StgFEM._SolutionVector_Initialise

def _SolutionVector_Execute(solutionVector: 'void *', data: 'void *') -> "void":
    return _StgFEM._SolutionVector_Execute(solutionVector, data)
_SolutionVector_Execute = _StgFEM._SolutionVector_Execute

def _SolutionVector_Destroy(solutionVector: 'void *', data: 'void *') -> "void":
    return _StgFEM._SolutionVector_Destroy(solutionVector, data)
_SolutionVector_Destroy = _StgFEM._SolutionVector_Destroy

def SolutionVector_ApplyBCsToVariables(solutionVector: 'void *', data: 'void *') -> "void":
    return _StgFEM.SolutionVector_ApplyBCsToVariables(solutionVector, data)
SolutionVector_ApplyBCsToVariables = _StgFEM.SolutionVector_ApplyBCsToVariables

def SolutionVector_UpdateSolutionOntoNodes(solutionVector: 'void *') -> "void":
    return _StgFEM.SolutionVector_UpdateSolutionOntoNodes(solutionVector)
SolutionVector_UpdateSolutionOntoNodes = _StgFEM.SolutionVector_UpdateSolutionOntoNodes

def SolutionVector_LoadCurrentFeVariableValuesOntoVector(solutionVector: 'void *') -> "void":
    return _StgFEM.SolutionVector_LoadCurrentFeVariableValuesOntoVector(solutionVector)
SolutionVector_LoadCurrentFeVariableValuesOntoVector = _StgFEM.SolutionVector_LoadCurrentFeVariableValuesOntoVector
class SROpGenerator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.SROpGenerator__sizeOfSelf_get, _StgFEM.SROpGenerator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.SROpGenerator__deleteSelf_get, _StgFEM.SROpGenerator__deleteSelf_set)
    type = _swig_property(_StgFEM.SROpGenerator_type_get, _StgFEM.SROpGenerator_type_set)
    nRefs = _swig_property(_StgFEM.SROpGenerator_nRefs_get, _StgFEM.SROpGenerator_nRefs_set)
    locked = _swig_property(_StgFEM.SROpGenerator_locked_get, _StgFEM.SROpGenerator_locked_set)
    _delete = _swig_property(_StgFEM.SROpGenerator__delete_get, _StgFEM.SROpGenerator__delete_set)
    _print = _swig_property(_StgFEM.SROpGenerator__print_get, _StgFEM.SROpGenerator__print_set)
    _copy = _swig_property(_StgFEM.SROpGenerator__copy_get, _StgFEM.SROpGenerator__copy_set)
    name = _swig_property(_StgFEM.SROpGenerator_name_get, _StgFEM.SROpGenerator_name_set)
    nameAllocationType = _swig_property(_StgFEM.SROpGenerator_nameAllocationType_get, _StgFEM.SROpGenerator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.SROpGenerator__defaultConstructor_get, _StgFEM.SROpGenerator__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.SROpGenerator__construct_get, _StgFEM.SROpGenerator__construct_set)
    _build = _swig_property(_StgFEM.SROpGenerator__build_get, _StgFEM.SROpGenerator__build_set)
    _initialise = _swig_property(_StgFEM.SROpGenerator__initialise_get, _StgFEM.SROpGenerator__initialise_set)
    _execute = _swig_property(_StgFEM.SROpGenerator__execute_get, _StgFEM.SROpGenerator__execute_set)
    _destroy = _swig_property(_StgFEM.SROpGenerator__destroy_get, _StgFEM.SROpGenerator__destroy_set)
    isConstructed = _swig_property(_StgFEM.SROpGenerator_isConstructed_get, _StgFEM.SROpGenerator_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.SROpGenerator_isBuilt_get, _StgFEM.SROpGenerator_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.SROpGenerator_isInitialised_get, _StgFEM.SROpGenerator_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.SROpGenerator_hasExecuted_get, _StgFEM.SROpGenerator_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.SROpGenerator_isDestroyed_get, _StgFEM.SROpGenerator_isDestroyed_set)
    constructType = _swig_property(_StgFEM.SROpGenerator_constructType_get, _StgFEM.SROpGenerator_constructType_set)
    buildType = _swig_property(_StgFEM.SROpGenerator_buildType_get, _StgFEM.SROpGenerator_buildType_set)
    initialiseType = _swig_property(_StgFEM.SROpGenerator_initialiseType_get, _StgFEM.SROpGenerator_initialiseType_set)
    executeType = _swig_property(_StgFEM.SROpGenerator_executeType_get, _StgFEM.SROpGenerator_executeType_set)
    destroyType = _swig_property(_StgFEM.SROpGenerator_destroyType_get, _StgFEM.SROpGenerator_destroyType_set)
    setNumLevelsFunc = _swig_property(_StgFEM.SROpGenerator_setNumLevelsFunc_get, _StgFEM.SROpGenerator_setNumLevelsFunc_set)
    hasExpiredFunc = _swig_property(_StgFEM.SROpGenerator_hasExpiredFunc_get, _StgFEM.SROpGenerator_hasExpiredFunc_set)
    generateFunc = _swig_property(_StgFEM.SROpGenerator_generateFunc_get, _StgFEM.SROpGenerator_generateFunc_set)
    solver = _swig_property(_StgFEM.SROpGenerator_solver_get, _StgFEM.SROpGenerator_solver_set)
    nLevels = _swig_property(_StgFEM.SROpGenerator_nLevels_get, _StgFEM.SROpGenerator_nLevels_set)
    fineVar = _swig_property(_StgFEM.SROpGenerator_fineVar_get, _StgFEM.SROpGenerator_fineVar_set)
    fineEqNum = _swig_property(_StgFEM.SROpGenerator_fineEqNum_get, _StgFEM.SROpGenerator_fineEqNum_set)
    meshes = _swig_property(_StgFEM.SROpGenerator_meshes_get, _StgFEM.SROpGenerator_meshes_set)
    topMaps = _swig_property(_StgFEM.SROpGenerator_topMaps_get, _StgFEM.SROpGenerator_topMaps_set)
    eqNums = _swig_property(_StgFEM.SROpGenerator_eqNums_get, _StgFEM.SROpGenerator_eqNums_set)
    nLocalEqNums = _swig_property(_StgFEM.SROpGenerator_nLocalEqNums_get, _StgFEM.SROpGenerator_nLocalEqNums_set)
    eqNumBases = _swig_property(_StgFEM.SROpGenerator_eqNumBases_get, _StgFEM.SROpGenerator_eqNumBases_set)

    def __init__(self):
        _StgFEM.SROpGenerator_swiginit(self, _StgFEM.new_SROpGenerator())
    __swig_destroy__ = _StgFEM.delete_SROpGenerator
SROpGenerator_swigregister = _StgFEM.SROpGenerator_swigregister
SROpGenerator_swigregister(SROpGenerator)
SROpGenerator_Type = cvar.SROpGenerator_Type


def SROpGenerator_New(name: 'Name') -> "SROpGenerator *":
    return _StgFEM.SROpGenerator_New(name)
SROpGenerator_New = _StgFEM.SROpGenerator_New

def _SROpGenerator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', setNumLevelsFunc: 'MGOpGenerator_SetNumLevelsFunc *', hasExpiredFunc: 'MGOpGenerator_HasExpiredFunc *', generateFunc: 'MGOpGenerator_GenerateFunc *') -> "SROpGenerator *":
    return _StgFEM._SROpGenerator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, setNumLevelsFunc, hasExpiredFunc, generateFunc)
_SROpGenerator_New = _StgFEM._SROpGenerator_New

def _SROpGenerator_Init(arg1: 'SROpGenerator') -> "void":
    return _StgFEM._SROpGenerator_Init(arg1)
_SROpGenerator_Init = _StgFEM._SROpGenerator_Init

def _SROpGenerator_Delete(srOpGenerator: 'void *') -> "void":
    return _StgFEM._SROpGenerator_Delete(srOpGenerator)
_SROpGenerator_Delete = _StgFEM._SROpGenerator_Delete

def _SROpGenerator_Print(srOpGenerator: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._SROpGenerator_Print(srOpGenerator, stream)
_SROpGenerator_Print = _StgFEM._SROpGenerator_Print

def _SROpGenerator_AssignFromXML(srOpGenerator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._SROpGenerator_AssignFromXML(srOpGenerator, cf, data)
_SROpGenerator_AssignFromXML = _StgFEM._SROpGenerator_AssignFromXML

def _SROpGenerator_Build(srOpGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._SROpGenerator_Build(srOpGenerator, data)
_SROpGenerator_Build = _StgFEM._SROpGenerator_Build

def _SROpGenerator_Initialise(srOpGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._SROpGenerator_Initialise(srOpGenerator, data)
_SROpGenerator_Initialise = _StgFEM._SROpGenerator_Initialise

def _SROpGenerator_Execute(srOpGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._SROpGenerator_Execute(srOpGenerator, data)
_SROpGenerator_Execute = _StgFEM._SROpGenerator_Execute

def _SROpGenerator_Destroy(srOpGenerator: 'void *', data: 'void *') -> "void":
    return _StgFEM._SROpGenerator_Destroy(srOpGenerator, data)
_SROpGenerator_Destroy = _StgFEM._SROpGenerator_Destroy

def SROpGenerator_HasExpired(srOpGenerator: 'void *') -> "Bool":
    return _StgFEM.SROpGenerator_HasExpired(srOpGenerator)
SROpGenerator_HasExpired = _StgFEM.SROpGenerator_HasExpired

def SROpGenerator_Generate(srOpGenerator: 'void *', pOps: 'Mat **', rOps: 'Mat **') -> "void":
    return _StgFEM.SROpGenerator_Generate(srOpGenerator, pOps, rOps)
SROpGenerator_Generate = _StgFEM.SROpGenerator_Generate

def SROpGenerator_SetFineVariable(srOpGenerator: 'void *', variable: 'void *') -> "void":
    return _StgFEM.SROpGenerator_SetFineVariable(srOpGenerator, variable)
SROpGenerator_SetFineVariable = _StgFEM.SROpGenerator_SetFineVariable

def SROpGenerator_GenMeshes(arg1: 'SROpGenerator') -> "void":
    return _StgFEM.SROpGenerator_GenMeshes(arg1)
SROpGenerator_GenMeshes = _StgFEM.SROpGenerator_GenMeshes

def SROpGenerator_GenLevelMesh(arg1: 'SROpGenerator', level: 'unsigned int') -> "void":
    return _StgFEM.SROpGenerator_GenLevelMesh(arg1, level)
SROpGenerator_GenLevelMesh = _StgFEM.SROpGenerator_GenLevelMesh

def SROpGenerator_GenLevelTopMap(arg1: 'SROpGenerator', level: 'unsigned int') -> "void":
    return _StgFEM.SROpGenerator_GenLevelTopMap(arg1, level)
SROpGenerator_GenLevelTopMap = _StgFEM.SROpGenerator_GenLevelTopMap

def SROpGenerator_GenLevelEqNums(arg1: 'SROpGenerator', level: 'unsigned int') -> "void":
    return _StgFEM.SROpGenerator_GenLevelEqNums(arg1, level)
SROpGenerator_GenLevelEqNums = _StgFEM.SROpGenerator_GenLevelEqNums

def SROpGenerator_GenOps(arg1: 'SROpGenerator', pOps: 'Mat *', rOps: 'Mat *') -> "void":
    return _StgFEM.SROpGenerator_GenOps(arg1, pOps, rOps)
SROpGenerator_GenOps = _StgFEM.SROpGenerator_GenOps

def SROpGenerator_GenLevelOp(arg1: 'SROpGenerator', level: 'unsigned int', P: 'Mat') -> "void":
    return _StgFEM.SROpGenerator_GenLevelOp(arg1, level, P)
SROpGenerator_GenLevelOp = _StgFEM.SROpGenerator_GenLevelOp

def SROpGenerator_CalcOpNonZeros(arg1: 'SROpGenerator', level: 'unsigned int', nDiagNonZeros: 'unsigned int **', nOffDiagNonZeros: 'unsigned int **') -> "void":
    return _StgFEM.SROpGenerator_CalcOpNonZeros(arg1, level, nDiagNonZeros, nOffDiagNonZeros)
SROpGenerator_CalcOpNonZeros = _StgFEM.SROpGenerator_CalcOpNonZeros

def SROpGenerator_DestructMeshes(arg1: 'SROpGenerator') -> "void":
    return _StgFEM.SROpGenerator_DestructMeshes(arg1)
SROpGenerator_DestructMeshes = _StgFEM.SROpGenerator_DestructMeshes

def SROpGenerator_Simple(arg1: 'SROpGenerator', pOps: 'Mat *', rOps: 'Mat *') -> "void":
    return _StgFEM.SROpGenerator_Simple(arg1, pOps, rOps)
SROpGenerator_Simple = _StgFEM.SROpGenerator_Simple

def SROpGenerator_SimpleFinestLevel(arg1: 'SROpGenerator') -> "Mat":
    return _StgFEM.SROpGenerator_SimpleFinestLevel(arg1)
SROpGenerator_SimpleFinestLevel = _StgFEM.SROpGenerator_SimpleFinestLevel

def SROpGenerator_SimpleCoarserLevel(arg1: 'SROpGenerator', level: 'int') -> "Mat":
    return _StgFEM.SROpGenerator_SimpleCoarserLevel(arg1, level)
SROpGenerator_SimpleCoarserLevel = _StgFEM.SROpGenerator_SimpleCoarserLevel
MAX_FE_VARS = _StgFEM.MAX_FE_VARS
ROW_VAR = _StgFEM.ROW_VAR
COL_VAR = _StgFEM.COL_VAR
class StiffnessMatrix(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.StiffnessMatrix__sizeOfSelf_get, _StgFEM.StiffnessMatrix__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.StiffnessMatrix__deleteSelf_get, _StgFEM.StiffnessMatrix__deleteSelf_set)
    type = _swig_property(_StgFEM.StiffnessMatrix_type_get, _StgFEM.StiffnessMatrix_type_set)
    nRefs = _swig_property(_StgFEM.StiffnessMatrix_nRefs_get, _StgFEM.StiffnessMatrix_nRefs_set)
    locked = _swig_property(_StgFEM.StiffnessMatrix_locked_get, _StgFEM.StiffnessMatrix_locked_set)
    _delete = _swig_property(_StgFEM.StiffnessMatrix__delete_get, _StgFEM.StiffnessMatrix__delete_set)
    _print = _swig_property(_StgFEM.StiffnessMatrix__print_get, _StgFEM.StiffnessMatrix__print_set)
    _copy = _swig_property(_StgFEM.StiffnessMatrix__copy_get, _StgFEM.StiffnessMatrix__copy_set)
    name = _swig_property(_StgFEM.StiffnessMatrix_name_get, _StgFEM.StiffnessMatrix_name_set)
    nameAllocationType = _swig_property(_StgFEM.StiffnessMatrix_nameAllocationType_get, _StgFEM.StiffnessMatrix_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.StiffnessMatrix__defaultConstructor_get, _StgFEM.StiffnessMatrix__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.StiffnessMatrix__construct_get, _StgFEM.StiffnessMatrix__construct_set)
    _build = _swig_property(_StgFEM.StiffnessMatrix__build_get, _StgFEM.StiffnessMatrix__build_set)
    _initialise = _swig_property(_StgFEM.StiffnessMatrix__initialise_get, _StgFEM.StiffnessMatrix__initialise_set)
    _execute = _swig_property(_StgFEM.StiffnessMatrix__execute_get, _StgFEM.StiffnessMatrix__execute_set)
    _destroy = _swig_property(_StgFEM.StiffnessMatrix__destroy_get, _StgFEM.StiffnessMatrix__destroy_set)
    isConstructed = _swig_property(_StgFEM.StiffnessMatrix_isConstructed_get, _StgFEM.StiffnessMatrix_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.StiffnessMatrix_isBuilt_get, _StgFEM.StiffnessMatrix_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.StiffnessMatrix_isInitialised_get, _StgFEM.StiffnessMatrix_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.StiffnessMatrix_hasExecuted_get, _StgFEM.StiffnessMatrix_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.StiffnessMatrix_isDestroyed_get, _StgFEM.StiffnessMatrix_isDestroyed_set)
    constructType = _swig_property(_StgFEM.StiffnessMatrix_constructType_get, _StgFEM.StiffnessMatrix_constructType_set)
    buildType = _swig_property(_StgFEM.StiffnessMatrix_buildType_get, _StgFEM.StiffnessMatrix_buildType_set)
    initialiseType = _swig_property(_StgFEM.StiffnessMatrix_initialiseType_get, _StgFEM.StiffnessMatrix_initialiseType_set)
    executeType = _swig_property(_StgFEM.StiffnessMatrix_executeType_get, _StgFEM.StiffnessMatrix_executeType_set)
    destroyType = _swig_property(_StgFEM.StiffnessMatrix_destroyType_get, _StgFEM.StiffnessMatrix_destroyType_set)
    context = _swig_property(_StgFEM.StiffnessMatrix_context_get, _StgFEM.StiffnessMatrix_context_set)
    _calculateNonZeroEntries = _swig_property(_StgFEM.StiffnessMatrix__calculateNonZeroEntries_get, _StgFEM.StiffnessMatrix__calculateNonZeroEntries_set)
    _assemblyFunction = _swig_property(_StgFEM.StiffnessMatrix__assemblyFunction_get, _StgFEM.StiffnessMatrix__assemblyFunction_set)
    debug = _swig_property(_StgFEM.StiffnessMatrix_debug_get, _StgFEM.StiffnessMatrix_debug_set)
    rowVariable = _swig_property(_StgFEM.StiffnessMatrix_rowVariable_get, _StgFEM.StiffnessMatrix_rowVariable_set)
    columnVariable = _swig_property(_StgFEM.StiffnessMatrix_columnVariable_get, _StgFEM.StiffnessMatrix_columnVariable_set)
    rowEqNum = _swig_property(_StgFEM.StiffnessMatrix_rowEqNum_get, _StgFEM.StiffnessMatrix_rowEqNum_set)
    colEqNum = _swig_property(_StgFEM.StiffnessMatrix_colEqNum_get, _StgFEM.StiffnessMatrix_colEqNum_set)
    rhs = _swig_property(_StgFEM.StiffnessMatrix_rhs_get, _StgFEM.StiffnessMatrix_rhs_set)
    transRHS = _swig_property(_StgFEM.StiffnessMatrix_transRHS_get, _StgFEM.StiffnessMatrix_transRHS_set)
    matrix = _swig_property(_StgFEM.StiffnessMatrix_matrix_get, _StgFEM.StiffnessMatrix_matrix_set)
    applicationDepInfo = _swig_property(_StgFEM.StiffnessMatrix_applicationDepInfo_get, _StgFEM.StiffnessMatrix_applicationDepInfo_set)
    isNonLinear = _swig_property(_StgFEM.StiffnessMatrix_isNonLinear_get, _StgFEM.StiffnessMatrix_isNonLinear_set)
    entryPoint_Register = _swig_property(_StgFEM.StiffnessMatrix_entryPoint_Register_get, _StgFEM.StiffnessMatrix_entryPoint_Register_set)
    stiffnessMatrixTermList = _swig_property(_StgFEM.StiffnessMatrix_stiffnessMatrixTermList_get, _StgFEM.StiffnessMatrix_stiffnessMatrixTermList_set)
    comm = _swig_property(_StgFEM.StiffnessMatrix_comm_get, _StgFEM.StiffnessMatrix_comm_set)
    rowLocalSize = _swig_property(_StgFEM.StiffnessMatrix_rowLocalSize_get, _StgFEM.StiffnessMatrix_rowLocalSize_set)
    colLocalSize = _swig_property(_StgFEM.StiffnessMatrix_colLocalSize_get, _StgFEM.StiffnessMatrix_colLocalSize_set)
    dim = _swig_property(_StgFEM.StiffnessMatrix_dim_get, _StgFEM.StiffnessMatrix_dim_set)
    nonZeroCount = _swig_property(_StgFEM.StiffnessMatrix_nonZeroCount_get, _StgFEM.StiffnessMatrix_nonZeroCount_set)
    diagonalNonZeroCount = _swig_property(_StgFEM.StiffnessMatrix_diagonalNonZeroCount_get, _StgFEM.StiffnessMatrix_diagonalNonZeroCount_set)
    diagonalNonZeroIndices = _swig_property(_StgFEM.StiffnessMatrix_diagonalNonZeroIndices_get, _StgFEM.StiffnessMatrix_diagonalNonZeroIndices_set)
    offDiagonalNonZeroCount = _swig_property(_StgFEM.StiffnessMatrix_offDiagonalNonZeroCount_get, _StgFEM.StiffnessMatrix_offDiagonalNonZeroCount_set)
    offDiagonalNonZeroIndices = _swig_property(_StgFEM.StiffnessMatrix_offDiagonalNonZeroIndices_get, _StgFEM.StiffnessMatrix_offDiagonalNonZeroIndices_set)
    assembleOnNodes = _swig_property(_StgFEM.StiffnessMatrix_assembleOnNodes_get, _StgFEM.StiffnessMatrix_assembleOnNodes_set)
    elStiffMat = _swig_property(_StgFEM.StiffnessMatrix_elStiffMat_get, _StgFEM.StiffnessMatrix_elStiffMat_set)
    bcVals = _swig_property(_StgFEM.StiffnessMatrix_bcVals_get, _StgFEM.StiffnessMatrix_bcVals_set)
    nRowDofs = _swig_property(_StgFEM.StiffnessMatrix_nRowDofs_get, _StgFEM.StiffnessMatrix_nRowDofs_set)
    nColDofs = _swig_property(_StgFEM.StiffnessMatrix_nColDofs_get, _StgFEM.StiffnessMatrix_nColDofs_set)
    rowInc = _swig_property(_StgFEM.StiffnessMatrix_rowInc_get, _StgFEM.StiffnessMatrix_rowInc_set)
    colInc = _swig_property(_StgFEM.StiffnessMatrix_colInc_get, _StgFEM.StiffnessMatrix_colInc_set)

    def __init__(self):
        _StgFEM.StiffnessMatrix_swiginit(self, _StgFEM.new_StiffnessMatrix())
    __swig_destroy__ = _StgFEM.delete_StiffnessMatrix
StiffnessMatrix_swigregister = _StgFEM.StiffnessMatrix_swigregister
StiffnessMatrix_swigregister(StiffnessMatrix)
StiffnessMatrix_Type = cvar.StiffnessMatrix_Type


def StiffnessMatrix_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM.StiffnessMatrix_DefaultNew(name)
StiffnessMatrix_DefaultNew = _StgFEM.StiffnessMatrix_DefaultNew

def StiffnessMatrix_New(name: 'Name', rowVariable: 'void *', columnVariable: 'void *', rhs: 'void *', applicationDepInfo: 'Stg_Component *', dim: 'Dimension_Index', isNonLinear: 'Bool', assebmleOnNodes: 'Bool', entryPoint_Register: 'void *', comm: 'MPI_Comm') -> "StiffnessMatrix *":
    return _StgFEM.StiffnessMatrix_New(name, rowVariable, columnVariable, rhs, applicationDepInfo, dim, isNonLinear, assebmleOnNodes, entryPoint_Register, comm)
StiffnessMatrix_New = _StgFEM.StiffnessMatrix_New

def _StiffnessMatrix_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', initFlag: 'Bool', _calculateNonZeroEntries: 'StiffnessMatrix_CalculateNonZeroEntriesFunction *', _assemblyFunction: 'StiffnessMatrix_AssembleFunc *', rowVariable: 'void *', columnVariable: 'void *', rhs: 'void *', applicationDepInfo: 'Stg_Component *', dim: 'Dimension_Index', isNonLinear: 'Bool', assembleOnNodes: 'Bool', entryPoint_Register: 'void *', comm: 'MPI_Comm') -> "StiffnessMatrix *":
    return _StgFEM._StiffnessMatrix_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, initFlag, _calculateNonZeroEntries, _assemblyFunction, rowVariable, columnVariable, rhs, applicationDepInfo, dim, isNonLinear, assembleOnNodes, entryPoint_Register, comm)
_StiffnessMatrix_New = _StgFEM._StiffnessMatrix_New

def _StiffnessMatrix_Init(arg1: 'StiffnessMatrix', rowVariable: 'void *', columnVariable: 'void *', rhs: 'void *', applicationDepInfo: 'Stg_Component *', dim: 'Dimension_Index', isNonLinear: 'Bool', assembleOnNodes: 'Bool', entryPoint_Register: 'void *', comm: 'MPI_Comm') -> "void":
    return _StgFEM._StiffnessMatrix_Init(arg1, rowVariable, columnVariable, rhs, applicationDepInfo, dim, isNonLinear, assembleOnNodes, entryPoint_Register, comm)
_StiffnessMatrix_Init = _StgFEM._StiffnessMatrix_Init

def _StiffnessMatrix_Delete(stiffnessMatrix: 'void *') -> "void":
    return _StgFEM._StiffnessMatrix_Delete(stiffnessMatrix)
_StiffnessMatrix_Delete = _StgFEM._StiffnessMatrix_Delete

def _StiffnessMatrix_Print(stiffnessMatrix: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._StiffnessMatrix_Print(stiffnessMatrix, stream)
_StiffnessMatrix_Print = _StgFEM._StiffnessMatrix_Print

def _StiffnessMatrix_Copy(stiffnessMatrix: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._StiffnessMatrix_Copy(stiffnessMatrix, dest, deep, nameExt, ptrMap)
_StiffnessMatrix_Copy = _StgFEM._StiffnessMatrix_Copy

def _StiffnessMatrix_Build(stiffnessMatrix: 'void *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrix_Build(stiffnessMatrix, data)
_StiffnessMatrix_Build = _StgFEM._StiffnessMatrix_Build

def _StiffnessMatrix_AssignFromXML(stiffnessMatrix: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrix_AssignFromXML(stiffnessMatrix, cf, data)
_StiffnessMatrix_AssignFromXML = _StgFEM._StiffnessMatrix_AssignFromXML

def _StiffnessMatrix_Initialise(stiffnessMatrix: 'void *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrix_Initialise(stiffnessMatrix, data)
_StiffnessMatrix_Initialise = _StgFEM._StiffnessMatrix_Initialise

def _StiffnessMatrix_Execute(stiffnessMatrix: 'void *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrix_Execute(stiffnessMatrix, data)
_StiffnessMatrix_Execute = _StgFEM._StiffnessMatrix_Execute

def _StiffnessMatrix_Destroy(stiffnessMatrix: 'void *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrix_Destroy(stiffnessMatrix, data)
_StiffnessMatrix_Destroy = _StgFEM._StiffnessMatrix_Destroy

def StiffnessMatrix_Assemble(stiffnessMatrix: 'void *', _sle: 'void *', _context: 'void *') -> "void":
    return _StgFEM.StiffnessMatrix_Assemble(stiffnessMatrix, _sle, _context)
StiffnessMatrix_Assemble = _StgFEM.StiffnessMatrix_Assemble

def __StiffnessMatrix_NewAssembleNodeWise(stiffnessMatrix: 'void *', _sle: 'void *', _context: 'void *') -> "void":
    return _StgFEM.__StiffnessMatrix_NewAssembleNodeWise(stiffnessMatrix, _sle, _context)
__StiffnessMatrix_NewAssembleNodeWise = _StgFEM.__StiffnessMatrix_NewAssembleNodeWise

def _StiffnessMatrix_PrintElementStiffnessMatrix(arg1: 'StiffnessMatrix', element_lI: 'Element_LocalIndex', rowElementLM: 'Dof_EquationNumber **', colElementLM: 'Dof_EquationNumber **', elStiffMatToAdd: 'double **') -> "void":
    return _StgFEM._StiffnessMatrix_PrintElementStiffnessMatrix(arg1, element_lI, rowElementLM, colElementLM, elStiffMatToAdd)
_StiffnessMatrix_PrintElementStiffnessMatrix = _StgFEM._StiffnessMatrix_PrintElementStiffnessMatrix

def StiffnessMatrix_AssembleElement(stiffnessMatrix: 'void *', element_lI: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMatVecToAdd: 'double **') -> "void":
    return _StgFEM.StiffnessMatrix_AssembleElement(stiffnessMatrix, element_lI, sle, context, elStiffMatVecToAdd)
StiffnessMatrix_AssembleElement = _StgFEM.StiffnessMatrix_AssembleElement

def StiffnessMatrix_AddStiffnessMatrixTerm(stiffnessMatrix: 'void *', stiffnessMatrixTerm: 'void *') -> "void":
    return _StgFEM.StiffnessMatrix_AddStiffnessMatrixTerm(stiffnessMatrix, stiffnessMatrixTerm)
StiffnessMatrix_AddStiffnessMatrixTerm = _StgFEM.StiffnessMatrix_AddStiffnessMatrixTerm

def StiffnessMatrix_RefreshMatrix(arg1: 'StiffnessMatrix') -> "void":
    return _StgFEM.StiffnessMatrix_RefreshMatrix(arg1)
StiffnessMatrix_RefreshMatrix = _StgFEM.StiffnessMatrix_RefreshMatrix

def StiffnessMatrix_CalcNonZeros(stiffnessMatrix: 'void *') -> "void":
    return _StgFEM.StiffnessMatrix_CalcNonZeros(stiffnessMatrix)
StiffnessMatrix_CalcNonZeros = _StgFEM.StiffnessMatrix_CalcNonZeros
class StiffnessMatrixTerm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.StiffnessMatrixTerm__sizeOfSelf_get, _StgFEM.StiffnessMatrixTerm__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.StiffnessMatrixTerm__deleteSelf_get, _StgFEM.StiffnessMatrixTerm__deleteSelf_set)
    type = _swig_property(_StgFEM.StiffnessMatrixTerm_type_get, _StgFEM.StiffnessMatrixTerm_type_set)
    nRefs = _swig_property(_StgFEM.StiffnessMatrixTerm_nRefs_get, _StgFEM.StiffnessMatrixTerm_nRefs_set)
    locked = _swig_property(_StgFEM.StiffnessMatrixTerm_locked_get, _StgFEM.StiffnessMatrixTerm_locked_set)
    _delete = _swig_property(_StgFEM.StiffnessMatrixTerm__delete_get, _StgFEM.StiffnessMatrixTerm__delete_set)
    _print = _swig_property(_StgFEM.StiffnessMatrixTerm__print_get, _StgFEM.StiffnessMatrixTerm__print_set)
    _copy = _swig_property(_StgFEM.StiffnessMatrixTerm__copy_get, _StgFEM.StiffnessMatrixTerm__copy_set)
    name = _swig_property(_StgFEM.StiffnessMatrixTerm_name_get, _StgFEM.StiffnessMatrixTerm_name_set)
    nameAllocationType = _swig_property(_StgFEM.StiffnessMatrixTerm_nameAllocationType_get, _StgFEM.StiffnessMatrixTerm_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.StiffnessMatrixTerm__defaultConstructor_get, _StgFEM.StiffnessMatrixTerm__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.StiffnessMatrixTerm__construct_get, _StgFEM.StiffnessMatrixTerm__construct_set)
    _build = _swig_property(_StgFEM.StiffnessMatrixTerm__build_get, _StgFEM.StiffnessMatrixTerm__build_set)
    _initialise = _swig_property(_StgFEM.StiffnessMatrixTerm__initialise_get, _StgFEM.StiffnessMatrixTerm__initialise_set)
    _execute = _swig_property(_StgFEM.StiffnessMatrixTerm__execute_get, _StgFEM.StiffnessMatrixTerm__execute_set)
    _destroy = _swig_property(_StgFEM.StiffnessMatrixTerm__destroy_get, _StgFEM.StiffnessMatrixTerm__destroy_set)
    isConstructed = _swig_property(_StgFEM.StiffnessMatrixTerm_isConstructed_get, _StgFEM.StiffnessMatrixTerm_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.StiffnessMatrixTerm_isBuilt_get, _StgFEM.StiffnessMatrixTerm_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.StiffnessMatrixTerm_isInitialised_get, _StgFEM.StiffnessMatrixTerm_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.StiffnessMatrixTerm_hasExecuted_get, _StgFEM.StiffnessMatrixTerm_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.StiffnessMatrixTerm_isDestroyed_get, _StgFEM.StiffnessMatrixTerm_isDestroyed_set)
    constructType = _swig_property(_StgFEM.StiffnessMatrixTerm_constructType_get, _StgFEM.StiffnessMatrixTerm_constructType_set)
    buildType = _swig_property(_StgFEM.StiffnessMatrixTerm_buildType_get, _StgFEM.StiffnessMatrixTerm_buildType_set)
    initialiseType = _swig_property(_StgFEM.StiffnessMatrixTerm_initialiseType_get, _StgFEM.StiffnessMatrixTerm_initialiseType_set)
    executeType = _swig_property(_StgFEM.StiffnessMatrixTerm_executeType_get, _StgFEM.StiffnessMatrixTerm_executeType_set)
    destroyType = _swig_property(_StgFEM.StiffnessMatrixTerm_destroyType_get, _StgFEM.StiffnessMatrixTerm_destroyType_set)
    context = _swig_property(_StgFEM.StiffnessMatrixTerm_context_get, _StgFEM.StiffnessMatrixTerm_context_set)
    _assembleElement = _swig_property(_StgFEM.StiffnessMatrixTerm__assembleElement_get, _StgFEM.StiffnessMatrixTerm__assembleElement_set)
    debug = _swig_property(_StgFEM.StiffnessMatrixTerm_debug_get, _StgFEM.StiffnessMatrixTerm_debug_set)
    integrationSwarm = _swig_property(_StgFEM.StiffnessMatrixTerm_integrationSwarm_get, _StgFEM.StiffnessMatrixTerm_integrationSwarm_set)
    extraInfo = _swig_property(_StgFEM.StiffnessMatrixTerm_extraInfo_get, _StgFEM.StiffnessMatrixTerm_extraInfo_set)
    stiffnessMatrix = _swig_property(_StgFEM.StiffnessMatrixTerm_stiffnessMatrix_get, _StgFEM.StiffnessMatrixTerm_stiffnessMatrix_set)
    GNx = _swig_property(_StgFEM.StiffnessMatrixTerm_GNx_get, _StgFEM.StiffnessMatrixTerm_GNx_set)
    N = _swig_property(_StgFEM.StiffnessMatrixTerm_N_get, _StgFEM.StiffnessMatrixTerm_N_set)
    max_nElNodes = _swig_property(_StgFEM.StiffnessMatrixTerm_max_nElNodes_get, _StgFEM.StiffnessMatrixTerm_max_nElNodes_set)

    def __init__(self):
        _StgFEM.StiffnessMatrixTerm_swiginit(self, _StgFEM.new_StiffnessMatrixTerm())
    __swig_destroy__ = _StgFEM.delete_StiffnessMatrixTerm
StiffnessMatrixTerm_swigregister = _StgFEM.StiffnessMatrixTerm_swigregister
StiffnessMatrixTerm_swigregister(StiffnessMatrixTerm)
StiffnessMatrixTerm_Type = cvar.StiffnessMatrixTerm_Type


def StiffnessMatrixTerm_New(name: 'Name', context: 'FiniteElementContext *', stiffnessMatrix: 'StiffnessMatrix', integrationSwarm: 'Swarm', extraInfo: 'Stg_Component *') -> "StiffnessMatrixTerm *":
    return _StgFEM.StiffnessMatrixTerm_New(name, context, stiffnessMatrix, integrationSwarm, extraInfo)
StiffnessMatrixTerm_New = _StgFEM.StiffnessMatrixTerm_New

def _StiffnessMatrixTerm_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'StiffnessMatrixTerm_AssembleElementFunction *') -> "StiffnessMatrixTerm *":
    return _StgFEM._StiffnessMatrixTerm_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_StiffnessMatrixTerm_New = _StgFEM._StiffnessMatrixTerm_New

def _StiffnessMatrixTerm_Delete(stiffnessMatrixTerm: 'void *') -> "void":
    return _StgFEM._StiffnessMatrixTerm_Delete(stiffnessMatrixTerm)
_StiffnessMatrixTerm_Delete = _StgFEM._StiffnessMatrixTerm_Delete

def _StiffnessMatrixTerm_Print(stiffnessMatrixTerm: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._StiffnessMatrixTerm_Print(stiffnessMatrixTerm, stream)
_StiffnessMatrixTerm_Print = _StgFEM._StiffnessMatrixTerm_Print

def _StiffnessMatrixTerm_Copy(stiffnessMatrixTerm: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._StiffnessMatrixTerm_Copy(stiffnessMatrixTerm, dest, deep, nameExt, ptrMap)
_StiffnessMatrixTerm_Copy = _StgFEM._StiffnessMatrixTerm_Copy

def _StiffnessMatrixTerm_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._StiffnessMatrixTerm_DefaultNew(name)
_StiffnessMatrixTerm_DefaultNew = _StgFEM._StiffnessMatrixTerm_DefaultNew

def _StiffnessMatrixTerm_AssignFromXML(stiffnessMatrixTerm: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrixTerm_AssignFromXML(stiffnessMatrixTerm, cf, data)
_StiffnessMatrixTerm_AssignFromXML = _StgFEM._StiffnessMatrixTerm_AssignFromXML

def _StiffnessMatrixTerm_Build(stiffnessMatrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrixTerm_Build(stiffnessMatrixTerm, data)
_StiffnessMatrixTerm_Build = _StgFEM._StiffnessMatrixTerm_Build

def _StiffnessMatrixTerm_Initialise(stiffnessMatrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrixTerm_Initialise(stiffnessMatrixTerm, data)
_StiffnessMatrixTerm_Initialise = _StgFEM._StiffnessMatrixTerm_Initialise

def _StiffnessMatrixTerm_Execute(stiffnessMatrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrixTerm_Execute(stiffnessMatrixTerm, data)
_StiffnessMatrixTerm_Execute = _StgFEM._StiffnessMatrixTerm_Execute

def _StiffnessMatrixTerm_Destroy(stiffnessMatrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._StiffnessMatrixTerm_Destroy(stiffnessMatrixTerm, data)
_StiffnessMatrixTerm_Destroy = _StgFEM._StiffnessMatrixTerm_Destroy

def _StiffnessMatrixTerm_Init(stiffnessMatrixTerm: 'void *', context: 'FiniteElementContext *', stiffnessMatrix: 'StiffnessMatrix', integrationSwarm: 'Swarm', extraInfo: 'Stg_Component *') -> "void":
    return _StgFEM._StiffnessMatrixTerm_Init(stiffnessMatrixTerm, context, stiffnessMatrix, integrationSwarm, extraInfo)
_StiffnessMatrixTerm_Init = _StgFEM._StiffnessMatrixTerm_Init

def StiffnessMatrixTerm_AssembleElement(stiffnessMatrixTerm: 'void *', stiffnessMatrix: 'StiffnessMatrix', lElement_I: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMatToAdd: 'double **') -> "void":
    return _StgFEM.StiffnessMatrixTerm_AssembleElement(stiffnessMatrixTerm, stiffnessMatrix, lElement_I, sle, context, elStiffMatToAdd)
StiffnessMatrixTerm_AssembleElement = _StgFEM.StiffnessMatrixTerm_AssembleElement

def _StiffnessMatrixTerm_AssembleElement(stiffnessMatrixTerm: 'void *', stiffnessMatrix: 'StiffnessMatrix', lElement_I: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMatToAdd: 'double **') -> "void":
    return _StgFEM._StiffnessMatrixTerm_AssembleElement(stiffnessMatrixTerm, stiffnessMatrix, lElement_I, sle, context, elStiffMatToAdd)
_StiffnessMatrixTerm_AssembleElement = _StgFEM._StiffnessMatrixTerm_AssembleElement

def StiffnessMatrixTerm_SetAssembleElementFunction(stiffnessMatrixTerm: 'void *', assembleElementFunction: 'StiffnessMatrixTerm_AssembleElementFunction *') -> "void":
    return _StgFEM.StiffnessMatrixTerm_SetAssembleElementFunction(stiffnessMatrixTerm, assembleElementFunction)
StiffnessMatrixTerm_SetAssembleElementFunction = _StgFEM.StiffnessMatrixTerm_SetAssembleElementFunction
class SystemLinearEquations(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.SystemLinearEquations__sizeOfSelf_get, _StgFEM.SystemLinearEquations__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.SystemLinearEquations__deleteSelf_get, _StgFEM.SystemLinearEquations__deleteSelf_set)
    type = _swig_property(_StgFEM.SystemLinearEquations_type_get, _StgFEM.SystemLinearEquations_type_set)
    nRefs = _swig_property(_StgFEM.SystemLinearEquations_nRefs_get, _StgFEM.SystemLinearEquations_nRefs_set)
    locked = _swig_property(_StgFEM.SystemLinearEquations_locked_get, _StgFEM.SystemLinearEquations_locked_set)
    _delete = _swig_property(_StgFEM.SystemLinearEquations__delete_get, _StgFEM.SystemLinearEquations__delete_set)
    _print = _swig_property(_StgFEM.SystemLinearEquations__print_get, _StgFEM.SystemLinearEquations__print_set)
    _copy = _swig_property(_StgFEM.SystemLinearEquations__copy_get, _StgFEM.SystemLinearEquations__copy_set)
    name = _swig_property(_StgFEM.SystemLinearEquations_name_get, _StgFEM.SystemLinearEquations_name_set)
    nameAllocationType = _swig_property(_StgFEM.SystemLinearEquations_nameAllocationType_get, _StgFEM.SystemLinearEquations_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.SystemLinearEquations__defaultConstructor_get, _StgFEM.SystemLinearEquations__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.SystemLinearEquations__construct_get, _StgFEM.SystemLinearEquations__construct_set)
    _build = _swig_property(_StgFEM.SystemLinearEquations__build_get, _StgFEM.SystemLinearEquations__build_set)
    _initialise = _swig_property(_StgFEM.SystemLinearEquations__initialise_get, _StgFEM.SystemLinearEquations__initialise_set)
    _execute = _swig_property(_StgFEM.SystemLinearEquations__execute_get, _StgFEM.SystemLinearEquations__execute_set)
    _destroy = _swig_property(_StgFEM.SystemLinearEquations__destroy_get, _StgFEM.SystemLinearEquations__destroy_set)
    isConstructed = _swig_property(_StgFEM.SystemLinearEquations_isConstructed_get, _StgFEM.SystemLinearEquations_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.SystemLinearEquations_isBuilt_get, _StgFEM.SystemLinearEquations_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.SystemLinearEquations_isInitialised_get, _StgFEM.SystemLinearEquations_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.SystemLinearEquations_hasExecuted_get, _StgFEM.SystemLinearEquations_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.SystemLinearEquations_isDestroyed_get, _StgFEM.SystemLinearEquations_isDestroyed_set)
    constructType = _swig_property(_StgFEM.SystemLinearEquations_constructType_get, _StgFEM.SystemLinearEquations_constructType_set)
    buildType = _swig_property(_StgFEM.SystemLinearEquations_buildType_get, _StgFEM.SystemLinearEquations_buildType_set)
    initialiseType = _swig_property(_StgFEM.SystemLinearEquations_initialiseType_get, _StgFEM.SystemLinearEquations_initialiseType_set)
    executeType = _swig_property(_StgFEM.SystemLinearEquations_executeType_get, _StgFEM.SystemLinearEquations_executeType_set)
    destroyType = _swig_property(_StgFEM.SystemLinearEquations_destroyType_get, _StgFEM.SystemLinearEquations_destroyType_set)
    extensionManager = _swig_property(_StgFEM.SystemLinearEquations_extensionManager_get, _StgFEM.SystemLinearEquations_extensionManager_set)
    _LM_Setup = _swig_property(_StgFEM.SystemLinearEquations__LM_Setup_get, _StgFEM.SystemLinearEquations__LM_Setup_set)
    _matrixSetup = _swig_property(_StgFEM.SystemLinearEquations__matrixSetup_get, _StgFEM.SystemLinearEquations__matrixSetup_set)
    _vectorSetup = _swig_property(_StgFEM.SystemLinearEquations__vectorSetup_get, _StgFEM.SystemLinearEquations__vectorSetup_set)
    _updateSolutionOntoNodes = _swig_property(_StgFEM.SystemLinearEquations__updateSolutionOntoNodes_get, _StgFEM.SystemLinearEquations__updateSolutionOntoNodes_set)
    _mgSelectStiffMats = _swig_property(_StgFEM.SystemLinearEquations__mgSelectStiffMats_get, _StgFEM.SystemLinearEquations__mgSelectStiffMats_set)
    debug = _swig_property(_StgFEM.SystemLinearEquations_debug_get, _StgFEM.SystemLinearEquations_debug_set)
    info = _swig_property(_StgFEM.SystemLinearEquations_info_get, _StgFEM.SystemLinearEquations_info_set)
    convergenceStream = _swig_property(_StgFEM.SystemLinearEquations_convergenceStream_get, _StgFEM.SystemLinearEquations_convergenceStream_set)
    makeConvergenceFile = _swig_property(_StgFEM.SystemLinearEquations_makeConvergenceFile_get, _StgFEM.SystemLinearEquations_makeConvergenceFile_set)
    comm = _swig_property(_StgFEM.SystemLinearEquations_comm_get, _StgFEM.SystemLinearEquations_comm_set)
    stiffnessMatrices = _swig_property(_StgFEM.SystemLinearEquations_stiffnessMatrices_get, _StgFEM.SystemLinearEquations_stiffnessMatrices_set)
    forceVectors = _swig_property(_StgFEM.SystemLinearEquations_forceVectors_get, _StgFEM.SystemLinearEquations_forceVectors_set)
    solutionVectors = _swig_property(_StgFEM.SystemLinearEquations_solutionVectors_get, _StgFEM.SystemLinearEquations_solutionVectors_set)
    solver = _swig_property(_StgFEM.SystemLinearEquations_solver_get, _StgFEM.SystemLinearEquations_solver_set)
    context = _swig_property(_StgFEM.SystemLinearEquations_context_get, _StgFEM.SystemLinearEquations_context_set)
    executeEPName = _swig_property(_StgFEM.SystemLinearEquations_executeEPName_get, _StgFEM.SystemLinearEquations_executeEPName_set)
    executeEP = _swig_property(_StgFEM.SystemLinearEquations_executeEP_get, _StgFEM.SystemLinearEquations_executeEP_set)
    integrationSetupEPName = _swig_property(_StgFEM.SystemLinearEquations_integrationSetupEPName_get, _StgFEM.SystemLinearEquations_integrationSetupEPName_set)
    integrationSetupEP = _swig_property(_StgFEM.SystemLinearEquations_integrationSetupEP_get, _StgFEM.SystemLinearEquations_integrationSetupEP_set)
    entryPoint_Register = _swig_property(_StgFEM.SystemLinearEquations_entryPoint_Register_get, _StgFEM.SystemLinearEquations_entryPoint_Register_set)
    isNonLinear = _swig_property(_StgFEM.SystemLinearEquations_isNonLinear_get, _StgFEM.SystemLinearEquations_isNonLinear_set)
    linearExecute = _swig_property(_StgFEM.SystemLinearEquations_linearExecute_get, _StgFEM.SystemLinearEquations_linearExecute_set)
    nonLinearTolerance = _swig_property(_StgFEM.SystemLinearEquations_nonLinearTolerance_get, _StgFEM.SystemLinearEquations_nonLinearTolerance_set)
    nonLinearMaxIterations = _swig_property(_StgFEM.SystemLinearEquations_nonLinearMaxIterations_get, _StgFEM.SystemLinearEquations_nonLinearMaxIterations_set)
    nonLinearIteration_I = _swig_property(_StgFEM.SystemLinearEquations_nonLinearIteration_I_get, _StgFEM.SystemLinearEquations_nonLinearIteration_I_set)
    killNonConvergent = _swig_property(_StgFEM.SystemLinearEquations_killNonConvergent_get, _StgFEM.SystemLinearEquations_killNonConvergent_set)
    nonLinearMinIterations = _swig_property(_StgFEM.SystemLinearEquations_nonLinearMinIterations_get, _StgFEM.SystemLinearEquations_nonLinearMinIterations_set)
    curResidual = _swig_property(_StgFEM.SystemLinearEquations_curResidual_get, _StgFEM.SystemLinearEquations_curResidual_set)
    curSolveTime = _swig_property(_StgFEM.SystemLinearEquations_curSolveTime_get, _StgFEM.SystemLinearEquations_curSolveTime_set)
    nlSetupEPName = _swig_property(_StgFEM.SystemLinearEquations_nlSetupEPName_get, _StgFEM.SystemLinearEquations_nlSetupEPName_set)
    nlSetupEP = _swig_property(_StgFEM.SystemLinearEquations_nlSetupEP_get, _StgFEM.SystemLinearEquations_nlSetupEP_set)
    nlEPName = _swig_property(_StgFEM.SystemLinearEquations_nlEPName_get, _StgFEM.SystemLinearEquations_nlEPName_set)
    nlEP = _swig_property(_StgFEM.SystemLinearEquations_nlEP_get, _StgFEM.SystemLinearEquations_nlEP_set)
    postNlEPName = _swig_property(_StgFEM.SystemLinearEquations_postNlEPName_get, _StgFEM.SystemLinearEquations_postNlEPName_set)
    postNlEP = _swig_property(_StgFEM.SystemLinearEquations_postNlEP_get, _StgFEM.SystemLinearEquations_postNlEP_set)
    nlConvergedEPName = _swig_property(_StgFEM.SystemLinearEquations_nlConvergedEPName_get, _StgFEM.SystemLinearEquations_nlConvergedEPName_set)
    nlConvergedEP = _swig_property(_StgFEM.SystemLinearEquations_nlConvergedEP_get, _StgFEM.SystemLinearEquations_nlConvergedEP_set)
    nlFormJacobian = _swig_property(_StgFEM.SystemLinearEquations_nlFormJacobian_get, _StgFEM.SystemLinearEquations_nlFormJacobian_set)
    nlCurIterate = _swig_property(_StgFEM.SystemLinearEquations_nlCurIterate_get, _StgFEM.SystemLinearEquations_nlCurIterate_set)
    mgEnabled = _swig_property(_StgFEM.SystemLinearEquations_mgEnabled_get, _StgFEM.SystemLinearEquations_mgEnabled_set)
    mgUpdate = _swig_property(_StgFEM.SystemLinearEquations_mgUpdate_get, _StgFEM.SystemLinearEquations_mgUpdate_set)
    nMGHandles = _swig_property(_StgFEM.SystemLinearEquations_nMGHandles_get, _StgFEM.SystemLinearEquations_nMGHandles_set)
    mgHandles = _swig_property(_StgFEM.SystemLinearEquations_mgHandles_get, _StgFEM.SystemLinearEquations_mgHandles_set)
    nonLinearSolutionType = _swig_property(_StgFEM.SystemLinearEquations_nonLinearSolutionType_get, _StgFEM.SystemLinearEquations_nonLinearSolutionType_set)
    _buildF = _swig_property(_StgFEM.SystemLinearEquations__buildF_get, _StgFEM.SystemLinearEquations__buildF_set)
    _buildJ = _swig_property(_StgFEM.SystemLinearEquations__buildJ_get, _StgFEM.SystemLinearEquations__buildJ_set)
    buildFContext = _swig_property(_StgFEM.SystemLinearEquations_buildFContext_get, _StgFEM.SystemLinearEquations_buildFContext_set)
    buildJContext = _swig_property(_StgFEM.SystemLinearEquations_buildJContext_get, _StgFEM.SystemLinearEquations_buildJContext_set)
    nlSolver = _swig_property(_StgFEM.SystemLinearEquations_nlSolver_get, _StgFEM.SystemLinearEquations_nlSolver_set)
    linearSolveInitGuess = _swig_property(_StgFEM.SystemLinearEquations_linearSolveInitGuess_get, _StgFEM.SystemLinearEquations_linearSolveInitGuess_set)
    F = _swig_property(_StgFEM.SystemLinearEquations_F_get, _StgFEM.SystemLinearEquations_F_set)
    X = _swig_property(_StgFEM.SystemLinearEquations_X_get, _StgFEM.SystemLinearEquations_X_set)
    A = _swig_property(_StgFEM.SystemLinearEquations_A_get, _StgFEM.SystemLinearEquations_A_set)
    J = _swig_property(_StgFEM.SystemLinearEquations_J_get, _StgFEM.SystemLinearEquations_J_set)
    P = _swig_property(_StgFEM.SystemLinearEquations_P_get, _StgFEM.SystemLinearEquations_P_set)
    _setFFunc = _swig_property(_StgFEM.SystemLinearEquations__setFFunc_get, _StgFEM.SystemLinearEquations__setFFunc_set)
    _configureNLSolverFunc = _swig_property(_StgFEM.SystemLinearEquations__configureNLSolverFunc_get, _StgFEM.SystemLinearEquations__configureNLSolverFunc_set)
    _updateOldFields = _swig_property(_StgFEM.SystemLinearEquations__updateOldFields_get, _StgFEM.SystemLinearEquations__updateOldFields_set)
    optionsPrefix = _swig_property(_StgFEM.SystemLinearEquations_optionsPrefix_get, _StgFEM.SystemLinearEquations_optionsPrefix_set)
    picard_form_function_type = _swig_property(_StgFEM.SystemLinearEquations_picard_form_function_type_get, _StgFEM.SystemLinearEquations_picard_form_function_type_set)
    alpha = _swig_property(_StgFEM.SystemLinearEquations_alpha_get, _StgFEM.SystemLinearEquations_alpha_set)
    rtol = _swig_property(_StgFEM.SystemLinearEquations_rtol_get, _StgFEM.SystemLinearEquations_rtol_set)
    ttol = _swig_property(_StgFEM.SystemLinearEquations_ttol_get, _StgFEM.SystemLinearEquations_ttol_set)
    stol = _swig_property(_StgFEM.SystemLinearEquations_stol_get, _StgFEM.SystemLinearEquations_stol_set)
    abstol = _swig_property(_StgFEM.SystemLinearEquations_abstol_get, _StgFEM.SystemLinearEquations_abstol_set)
    picard_monitor = _swig_property(_StgFEM.SystemLinearEquations_picard_monitor_get, _StgFEM.SystemLinearEquations_picard_monitor_set)
    _sleFormFunction = _swig_property(_StgFEM.SystemLinearEquations__sleFormFunction_get, _StgFEM.SystemLinearEquations__sleFormFunction_set)
    runatExecutePhase = _swig_property(_StgFEM.SystemLinearEquations_runatExecutePhase_get, _StgFEM.SystemLinearEquations_runatExecutePhase_set)
    solver_callback = _swig_property(_StgFEM.SystemLinearEquations_solver_callback_get, _StgFEM.SystemLinearEquations_solver_callback_set)

    def __init__(self):
        _StgFEM.SystemLinearEquations_swiginit(self, _StgFEM.new_SystemLinearEquations())
    __swig_destroy__ = _StgFEM.delete_SystemLinearEquations
SystemLinearEquations_swigregister = _StgFEM.SystemLinearEquations_swigregister
SystemLinearEquations_swigregister(SystemLinearEquations)
SystemLinearEquations_Type = cvar.SystemLinearEquations_Type


def SystemLinearEquations_New(name: 'Name', context: 'FiniteElementContext *', solver: 'SLE_Solver', nlSolver: 'void *', isNonLinear: 'Bool', nonLinearTolerance: 'double', nonLinearMinIterations: 'Iteration_Index', nonLinearMaxIterations: 'Iteration_Index', killNonConvergent: 'Bool', entryPoint_Register: 'EntryPoint_Register *', comm: 'MPI_Comm') -> "SystemLinearEquations *":
    return _StgFEM.SystemLinearEquations_New(name, context, solver, nlSolver, isNonLinear, nonLinearTolerance, nonLinearMinIterations, nonLinearMaxIterations, killNonConvergent, entryPoint_Register, comm)
SystemLinearEquations_New = _StgFEM.SystemLinearEquations_New

def _SystemLinearEquations_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _LM_Setup: 'SystemLinearEquations_LM_SetupFunction *', _matrixSetup: 'SystemLinearEquations_MatrixSetupFunction *', _vectorSetup: 'SystemLinearEquations_VectorSetupFunction *', _updateSolutionOntoNodes: 'SystemLinearEquations_UpdateSolutionOntoNodesFunc *', _mgSelectStiffMats: 'SystemLinearEquations_MG_SelectStiffMatsFunc *') -> "SystemLinearEquations *":
    return _StgFEM._SystemLinearEquations_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _LM_Setup, _matrixSetup, _vectorSetup, _updateSolutionOntoNodes, _mgSelectStiffMats)
_SystemLinearEquations_New = _StgFEM._SystemLinearEquations_New

def _SystemLinearEquations_Init(sle: 'void *', solver: 'SLE_Solver', nlSolver: 'void *', context: 'FiniteElementContext *', makeConvergenceFile: 'Bool', isNonLinear: 'Bool', nonLinearTolerance: 'double', nonLinearMaxIterations: 'Iteration_Index', killNonConvergent: 'Bool', nonLinearMinIterations: 'Iteration_Index', nonLinearSolutionType: 'Name', optionsPrefix: 'Name', entryPoint_Register: 'EntryPoint_Register *', comm: 'MPI_Comm') -> "void":
    return _StgFEM._SystemLinearEquations_Init(sle, solver, nlSolver, context, makeConvergenceFile, isNonLinear, nonLinearTolerance, nonLinearMaxIterations, killNonConvergent, nonLinearMinIterations, nonLinearSolutionType, optionsPrefix, entryPoint_Register, comm)
_SystemLinearEquations_Init = _StgFEM._SystemLinearEquations_Init

def _SystemLinearEquations_Delete(sle: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_Delete(sle)
_SystemLinearEquations_Delete = _StgFEM._SystemLinearEquations_Delete

def _SystemLinearEquations_Print(sle: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._SystemLinearEquations_Print(sle, stream)
_SystemLinearEquations_Print = _StgFEM._SystemLinearEquations_Print

def _SystemLinearEquations_Copy(sle: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._SystemLinearEquations_Copy(sle, dest, deep, nameExt, ptrMap)
_SystemLinearEquations_Copy = _StgFEM._SystemLinearEquations_Copy

def _SystemLinearEquations_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._SystemLinearEquations_DefaultNew(name)
_SystemLinearEquations_DefaultNew = _StgFEM._SystemLinearEquations_DefaultNew

def _SystemLinearEquations_AssignFromXML(sle: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_AssignFromXML(sle, cf, data)
_SystemLinearEquations_AssignFromXML = _StgFEM._SystemLinearEquations_AssignFromXML

def _SystemLinearEquations_Build(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_Build(sle, data)
_SystemLinearEquations_Build = _StgFEM._SystemLinearEquations_Build

def _SystemLinearEquations_Initialise(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_Initialise(sle, data)
_SystemLinearEquations_Initialise = _StgFEM._SystemLinearEquations_Initialise

def _SystemLinearEquations_Execute(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_Execute(sle, data)
_SystemLinearEquations_Execute = _StgFEM._SystemLinearEquations_Execute

def _SystemLinearEquations_Destroy(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_Destroy(sle, data)
_SystemLinearEquations_Destroy = _StgFEM._SystemLinearEquations_Destroy

def SystemLinearEquations_ExecuteSolver(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_ExecuteSolver(sle, data)
SystemLinearEquations_ExecuteSolver = _StgFEM.SystemLinearEquations_ExecuteSolver

def SystemLinearEquations_BC_Setup(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_BC_Setup(sle, data)
SystemLinearEquations_BC_Setup = _StgFEM.SystemLinearEquations_BC_Setup

def SystemLinearEquations_LM_Setup(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_LM_Setup(sle, data)
SystemLinearEquations_LM_Setup = _StgFEM.SystemLinearEquations_LM_Setup

def _SystemLinearEquations_LM_Setup(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_LM_Setup(sle, data)
_SystemLinearEquations_LM_Setup = _StgFEM._SystemLinearEquations_LM_Setup

def SystemLinearEquations_IntegrationSetup(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_IntegrationSetup(sle, data)
SystemLinearEquations_IntegrationSetup = _StgFEM.SystemLinearEquations_IntegrationSetup

def SystemLinearEquations_MatrixSetup(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_MatrixSetup(sle, data)
SystemLinearEquations_MatrixSetup = _StgFEM.SystemLinearEquations_MatrixSetup

def _SystemLinearEquations_MatrixSetup(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_MatrixSetup(sle, data)
_SystemLinearEquations_MatrixSetup = _StgFEM._SystemLinearEquations_MatrixSetup

def SystemLinearEquations_VectorSetup(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_VectorSetup(sle, data)
SystemLinearEquations_VectorSetup = _StgFEM.SystemLinearEquations_VectorSetup

def _SystemLinearEquations_VectorSetup(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_VectorSetup(sle, data)
_SystemLinearEquations_VectorSetup = _StgFEM._SystemLinearEquations_VectorSetup

def SystemLinearEquations_SetCallback(arg1: 'void *', func: 'PyObject *') -> "void":
    return _StgFEM.SystemLinearEquations_SetCallback(arg1, func)
SystemLinearEquations_SetCallback = _StgFEM.SystemLinearEquations_SetCallback

def _SystemLinearEquations_AddStiffnessMatrix(sle: 'void *', stiffnessMatrix: 'StiffnessMatrix') -> "Index":
    return _StgFEM._SystemLinearEquations_AddStiffnessMatrix(sle, stiffnessMatrix)
_SystemLinearEquations_AddStiffnessMatrix = _StgFEM._SystemLinearEquations_AddStiffnessMatrix

def _SystemLinearEquations_GetStiffnessMatrix(sle: 'void *', stiffnessMatrixName: 'Name') -> "StiffnessMatrix *":
    return _StgFEM._SystemLinearEquations_GetStiffnessMatrix(sle, stiffnessMatrixName)
_SystemLinearEquations_GetStiffnessMatrix = _StgFEM._SystemLinearEquations_GetStiffnessMatrix

def _SystemLinearEquations_AddForceVector(sle: 'void *', forceVector: 'ForceVector') -> "Index":
    return _StgFEM._SystemLinearEquations_AddForceVector(sle, forceVector)
_SystemLinearEquations_AddForceVector = _StgFEM._SystemLinearEquations_AddForceVector

def _SystemLinearEquations_GetForceVector(sle: 'void *', forceVectorName: 'Name') -> "ForceVector *":
    return _StgFEM._SystemLinearEquations_GetForceVector(sle, forceVectorName)
_SystemLinearEquations_GetForceVector = _StgFEM._SystemLinearEquations_GetForceVector

def _SystemLinearEquations_AddSolutionVector(sle: 'void *', solutionVector: 'SolutionVector') -> "Index":
    return _StgFEM._SystemLinearEquations_AddSolutionVector(sle, solutionVector)
_SystemLinearEquations_AddSolutionVector = _StgFEM._SystemLinearEquations_AddSolutionVector

def _SystemLinearEquations_GetSolutionVector(sle: 'void *', solutionVectorName: 'Name') -> "SolutionVector *":
    return _StgFEM._SystemLinearEquations_GetSolutionVector(sle, solutionVectorName)
_SystemLinearEquations_GetSolutionVector = _StgFEM._SystemLinearEquations_GetSolutionVector

def SystemLinearEquations_UpdateSolutionOntoNodes(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_UpdateSolutionOntoNodes(sle, data)
SystemLinearEquations_UpdateSolutionOntoNodes = _StgFEM.SystemLinearEquations_UpdateSolutionOntoNodes

def _SystemLinearEquations_UpdateSolutionOntoNodes(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_UpdateSolutionOntoNodes(sle, data)
_SystemLinearEquations_UpdateSolutionOntoNodes = _StgFEM._SystemLinearEquations_UpdateSolutionOntoNodes

def SystemLinearEquations_ZeroAllVectors(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_ZeroAllVectors(sle, data)
SystemLinearEquations_ZeroAllVectors = _StgFEM.SystemLinearEquations_ZeroAllVectors

def SystemLinearEquations_NewtonMFFDExecute(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_NewtonMFFDExecute(sle, data)
SystemLinearEquations_NewtonMFFDExecute = _StgFEM.SystemLinearEquations_NewtonMFFDExecute

def SystemLinearEquations_NewtonInitialise(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_NewtonInitialise(sle, data)
SystemLinearEquations_NewtonInitialise = _StgFEM.SystemLinearEquations_NewtonInitialise

def SystemLinearEquations_NewtonExecute(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_NewtonExecute(sle, data)
SystemLinearEquations_NewtonExecute = _StgFEM.SystemLinearEquations_NewtonExecute

def SystemLinearEquations_NewtonFinalise(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_NewtonFinalise(sle, data)
SystemLinearEquations_NewtonFinalise = _StgFEM.SystemLinearEquations_NewtonFinalise

def SystemLinearEquations_NonLinearExecute(sle: 'void *', data: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_NonLinearExecute(sle, data)
SystemLinearEquations_NonLinearExecute = _StgFEM.SystemLinearEquations_NonLinearExecute

def SystemLinearEquations_AddNonLinearSetupEP(sle: 'void *', name: 'char const *', func: 'EntryPoint_2VoidPtr_Cast *') -> "void":
    return _StgFEM.SystemLinearEquations_AddNonLinearSetupEP(sle, name, func)
SystemLinearEquations_AddNonLinearSetupEP = _StgFEM.SystemLinearEquations_AddNonLinearSetupEP

def SystemLinearEquations_AddNonLinearEP(sle: 'void *', name: 'char const *', func: 'EntryPoint_2VoidPtr_Cast *') -> "void":
    return _StgFEM.SystemLinearEquations_AddNonLinearEP(sle, name, func)
SystemLinearEquations_AddNonLinearEP = _StgFEM.SystemLinearEquations_AddNonLinearEP

def SystemLinearEquations_AddPostNonLinearEP(sle: 'void *', name: 'char const *', func: 'EntryPoint_2VoidPtr_Cast *') -> "void":
    return _StgFEM.SystemLinearEquations_AddPostNonLinearEP(sle, name, func)
SystemLinearEquations_AddPostNonLinearEP = _StgFEM.SystemLinearEquations_AddPostNonLinearEP

def SystemLinearEquations_SetNonLinearTolerance(sle: 'void *', tol: 'double') -> "void":
    return _StgFEM.SystemLinearEquations_SetNonLinearTolerance(sle, tol)
SystemLinearEquations_SetNonLinearTolerance = _StgFEM.SystemLinearEquations_SetNonLinearTolerance

def SystemLinearEquations_SetToNonLinear(sle: 'void *', isNonLinear: 'Bool') -> "void":
    return _StgFEM.SystemLinearEquations_SetToNonLinear(sle, isNonLinear)
SystemLinearEquations_SetToNonLinear = _StgFEM.SystemLinearEquations_SetToNonLinear

def SystemLinearEquations_CheckIfNonLinear(sle: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_CheckIfNonLinear(sle)
SystemLinearEquations_CheckIfNonLinear = _StgFEM.SystemLinearEquations_CheckIfNonLinear

def SystemLinearEquations_MG_Enable(_sle: 'void *') -> "void":
    return _StgFEM.SystemLinearEquations_MG_Enable(_sle)
SystemLinearEquations_MG_Enable = _StgFEM.SystemLinearEquations_MG_Enable

def SystemLinearEquations_MG_SelectStiffMats(_sle: 'void *', nSMs: 'unsigned int *', sms: 'StiffnessMatrix ***') -> "void":
    return _StgFEM.SystemLinearEquations_MG_SelectStiffMats(_sle, nSMs, sms)
SystemLinearEquations_MG_SelectStiffMats = _StgFEM.SystemLinearEquations_MG_SelectStiffMats

def _SystemLinearEquations_MG_SelectStiffMats(_sle: 'void *', nSMs: 'unsigned int *', sms: 'StiffnessMatrix ***') -> "void":
    return _StgFEM._SystemLinearEquations_MG_SelectStiffMats(_sle, nSMs, sms)
_SystemLinearEquations_MG_SelectStiffMats = _StgFEM._SystemLinearEquations_MG_SelectStiffMats

def _SystemLinearEquations_RunEP(sle: 'void *', _context: 'void *') -> "void":
    return _StgFEM._SystemLinearEquations_RunEP(sle, _context)
_SystemLinearEquations_RunEP = _StgFEM._SystemLinearEquations_RunEP

def SystemLinearEquations_SetCustomRunPoint(sle: 'void *', _context: 'void *', entryPointName: 'Name const') -> "void":
    return _StgFEM.SystemLinearEquations_SetCustomRunPoint(sle, _context, entryPointName)
SystemLinearEquations_SetCustomRunPoint = _StgFEM.SystemLinearEquations_SetCustomRunPoint

def SystemLinearEquations_GetRunEPFunction() -> "SystemLinearEquations_RunEPFunction *":
    return _StgFEM.SystemLinearEquations_GetRunEPFunction()
SystemLinearEquations_GetRunEPFunction = _StgFEM.SystemLinearEquations_GetRunEPFunction

def SystemLinearEquations_SetRunDuringExecutePhase(sle: 'void *', setRunDuringExectutePhase: 'Bool') -> "void":
    return _StgFEM.SystemLinearEquations_SetRunDuringExecutePhase(sle, setRunDuringExectutePhase)
SystemLinearEquations_SetRunDuringExecutePhase = _StgFEM.SystemLinearEquations_SetRunDuringExecutePhase
class ForceVector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.ForceVector__sizeOfSelf_get, _StgFEM.ForceVector__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.ForceVector__deleteSelf_get, _StgFEM.ForceVector__deleteSelf_set)
    type = _swig_property(_StgFEM.ForceVector_type_get, _StgFEM.ForceVector_type_set)
    nRefs = _swig_property(_StgFEM.ForceVector_nRefs_get, _StgFEM.ForceVector_nRefs_set)
    locked = _swig_property(_StgFEM.ForceVector_locked_get, _StgFEM.ForceVector_locked_set)
    _delete = _swig_property(_StgFEM.ForceVector__delete_get, _StgFEM.ForceVector__delete_set)
    _print = _swig_property(_StgFEM.ForceVector__print_get, _StgFEM.ForceVector__print_set)
    _copy = _swig_property(_StgFEM.ForceVector__copy_get, _StgFEM.ForceVector__copy_set)
    name = _swig_property(_StgFEM.ForceVector_name_get, _StgFEM.ForceVector_name_set)
    nameAllocationType = _swig_property(_StgFEM.ForceVector_nameAllocationType_get, _StgFEM.ForceVector_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.ForceVector__defaultConstructor_get, _StgFEM.ForceVector__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.ForceVector__construct_get, _StgFEM.ForceVector__construct_set)
    _build = _swig_property(_StgFEM.ForceVector__build_get, _StgFEM.ForceVector__build_set)
    _initialise = _swig_property(_StgFEM.ForceVector__initialise_get, _StgFEM.ForceVector__initialise_set)
    _execute = _swig_property(_StgFEM.ForceVector__execute_get, _StgFEM.ForceVector__execute_set)
    _destroy = _swig_property(_StgFEM.ForceVector__destroy_get, _StgFEM.ForceVector__destroy_set)
    isConstructed = _swig_property(_StgFEM.ForceVector_isConstructed_get, _StgFEM.ForceVector_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.ForceVector_isBuilt_get, _StgFEM.ForceVector_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.ForceVector_isInitialised_get, _StgFEM.ForceVector_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.ForceVector_hasExecuted_get, _StgFEM.ForceVector_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.ForceVector_isDestroyed_get, _StgFEM.ForceVector_isDestroyed_set)
    constructType = _swig_property(_StgFEM.ForceVector_constructType_get, _StgFEM.ForceVector_constructType_set)
    buildType = _swig_property(_StgFEM.ForceVector_buildType_get, _StgFEM.ForceVector_buildType_set)
    initialiseType = _swig_property(_StgFEM.ForceVector_initialiseType_get, _StgFEM.ForceVector_initialiseType_set)
    executeType = _swig_property(_StgFEM.ForceVector_executeType_get, _StgFEM.ForceVector_executeType_set)
    destroyType = _swig_property(_StgFEM.ForceVector_destroyType_get, _StgFEM.ForceVector_destroyType_set)
    debug = _swig_property(_StgFEM.ForceVector_debug_get, _StgFEM.ForceVector_debug_set)
    vector = _swig_property(_StgFEM.ForceVector_vector_get, _StgFEM.ForceVector_vector_set)
    comm = _swig_property(_StgFEM.ForceVector_comm_get, _StgFEM.ForceVector_comm_set)
    feVariable = _swig_property(_StgFEM.ForceVector_feVariable_get, _StgFEM.ForceVector_feVariable_set)
    eqNum = _swig_property(_StgFEM.ForceVector_eqNum_get, _StgFEM.ForceVector_eqNum_set)
    localSize = _swig_property(_StgFEM.ForceVector_localSize_get, _StgFEM.ForceVector_localSize_set)
    dim = _swig_property(_StgFEM.ForceVector_dim_get, _StgFEM.ForceVector_dim_set)
    entryPoint_Register = _swig_property(_StgFEM.ForceVector_entryPoint_Register_get, _StgFEM.ForceVector_entryPoint_Register_set)
    assembleForceVector = _swig_property(_StgFEM.ForceVector_assembleForceVector_get, _StgFEM.ForceVector_assembleForceVector_set)
    _assembleForceVectorEPName = _swig_property(_StgFEM.ForceVector__assembleForceVectorEPName_get, _StgFEM.ForceVector__assembleForceVectorEPName_set)
    forceTermList = _swig_property(_StgFEM.ForceVector_forceTermList_get, _StgFEM.ForceVector_forceTermList_set)
    applicationDepExtraInfo = _swig_property(_StgFEM.ForceVector_applicationDepExtraInfo_get, _StgFEM.ForceVector_applicationDepExtraInfo_set)
    inc = _swig_property(_StgFEM.ForceVector_inc_get, _StgFEM.ForceVector_inc_set)

    def __init__(self):
        _StgFEM.ForceVector_swiginit(self, _StgFEM.new_ForceVector())
    __swig_destroy__ = _StgFEM.delete_ForceVector
ForceVector_swigregister = _StgFEM.ForceVector_swigregister
ForceVector_swigregister(ForceVector)
ForceVector_Type = cvar.ForceVector_Type


def ForceVector_New(name: 'Name', feVariable: 'FeVariable', dim: 'Dimension_Index', entryPoint_Register: 'void *', comm: 'MPI_Comm') -> "ForceVector *":
    return _StgFEM.ForceVector_New(name, feVariable, dim, entryPoint_Register, comm)
ForceVector_New = _StgFEM.ForceVector_New

def _ForceVector_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "ForceVector *":
    return _StgFEM._ForceVector_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_ForceVector_New = _StgFEM._ForceVector_New

def _ForceVector_Init(forceVector: 'void *', dim: 'Dimension_Index', entryPoint_Register: 'EntryPoint_Register *') -> "void":
    return _StgFEM._ForceVector_Init(forceVector, dim, entryPoint_Register)
_ForceVector_Init = _StgFEM._ForceVector_Init

def _ForceVector_Delete(forceVector: 'void *') -> "void":
    return _StgFEM._ForceVector_Delete(forceVector)
_ForceVector_Delete = _StgFEM._ForceVector_Delete

def _ForceVector_Print(forceVector: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._ForceVector_Print(forceVector, stream)
_ForceVector_Print = _StgFEM._ForceVector_Print

def _ForceVector_Copy(forceVector: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._ForceVector_Copy(forceVector, dest, deep, nameExt, ptrMap)
_ForceVector_Copy = _StgFEM._ForceVector_Copy

def _ForceVector_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._ForceVector_DefaultNew(name)
_ForceVector_DefaultNew = _StgFEM._ForceVector_DefaultNew

def _ForceVector_AssignFromXML(forceVector: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._ForceVector_AssignFromXML(forceVector, cf, data)
_ForceVector_AssignFromXML = _StgFEM._ForceVector_AssignFromXML

def _ForceVector_Build(forceVector: 'void *', data: 'void *') -> "void":
    return _StgFEM._ForceVector_Build(forceVector, data)
_ForceVector_Build = _StgFEM._ForceVector_Build

def _ForceVector_Initialise(forceVector: 'void *', data: 'void *') -> "void":
    return _StgFEM._ForceVector_Initialise(forceVector, data)
_ForceVector_Initialise = _StgFEM._ForceVector_Initialise

def _ForceVector_Execute(forceVector: 'void *', data: 'void *') -> "void":
    return _StgFEM._ForceVector_Execute(forceVector, data)
_ForceVector_Execute = _StgFEM._ForceVector_Execute

def _ForceVector_Destroy(forceVector: 'void *', data: 'void *') -> "void":
    return _StgFEM._ForceVector_Destroy(forceVector, data)
_ForceVector_Destroy = _StgFEM._ForceVector_Destroy

def ForceVector_Assemble(forceVector: 'void *') -> "void":
    return _StgFEM.ForceVector_Assemble(forceVector)
ForceVector_Assemble = _StgFEM.ForceVector_Assemble

def ForceVector_PrintElementForceVector(arg1: 'ForceVector', element_lI: 'Element_LocalIndex', elementLM: 'Dof_EquationNumber **', elForceVecToAdd: 'double *') -> "void":
    return _StgFEM.ForceVector_PrintElementForceVector(arg1, element_lI, elementLM, elForceVecToAdd)
ForceVector_PrintElementForceVector = _StgFEM.ForceVector_PrintElementForceVector

def ForceVector_GlobalAssembly_General(forceVector: 'void *') -> "void":
    return _StgFEM.ForceVector_GlobalAssembly_General(forceVector)
ForceVector_GlobalAssembly_General = _StgFEM.ForceVector_GlobalAssembly_General

def ForceVector_AssembleElement(forceVector: 'void *', element_lI: 'Element_LocalIndex', elForceVecToAdd: 'double *') -> "void":
    return _StgFEM.ForceVector_AssembleElement(forceVector, element_lI, elForceVecToAdd)
ForceVector_AssembleElement = _StgFEM.ForceVector_AssembleElement

def ForceVector_AddForceTerm(forceVector: 'void *', forceTerm: 'void *') -> "void":
    return _StgFEM.ForceVector_AddForceTerm(forceVector, forceTerm)
ForceVector_AddForceTerm = _StgFEM.ForceVector_AddForceTerm

def ForceVector_Zero(forceVector: 'void *') -> "void":
    return _StgFEM.ForceVector_Zero(forceVector)
ForceVector_Zero = _StgFEM.ForceVector_Zero
class Callback(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    callback = _swig_property(_StgFEM.Callback_callback_get, _StgFEM.Callback_callback_set)
    object = _swig_property(_StgFEM.Callback_object_get, _StgFEM.Callback_object_set)

    def __init__(self):
        _StgFEM.Callback_swiginit(self, _StgFEM.new_Callback())
    __swig_destroy__ = _StgFEM.delete_Callback
Callback_swigregister = _StgFEM.Callback_swigregister
Callback_swigregister(Callback)

MGSolver_Status_ConvergedRelative = _StgFEM.MGSolver_Status_ConvergedRelative
MGSolver_Status_ConvergedAbsolute = _StgFEM.MGSolver_Status_ConvergedAbsolute
MGSolver_Status_ConvergedIterations = _StgFEM.MGSolver_Status_ConvergedIterations
MGSolver_Status_DivergedNull = _StgFEM.MGSolver_Status_DivergedNull
MGSolver_Status_DivergedIterations = _StgFEM.MGSolver_Status_DivergedIterations
MGSolver_Status_DivergedTolerance = _StgFEM.MGSolver_Status_DivergedTolerance
MGSolver_Status_Iterating = _StgFEM.MGSolver_Status_Iterating
class MGSolver_PETScData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    comm = _swig_property(_StgFEM.MGSolver_PETScData_comm_get, _StgFEM.MGSolver_PETScData_comm_set)
    ksp = _swig_property(_StgFEM.MGSolver_PETScData_ksp_get, _StgFEM.MGSolver_PETScData_ksp_set)
    matrix = _swig_property(_StgFEM.MGSolver_PETScData_matrix_get, _StgFEM.MGSolver_PETScData_matrix_set)
    inversion = _swig_property(_StgFEM.MGSolver_PETScData_inversion_get, _StgFEM.MGSolver_PETScData_inversion_set)
    residual = _swig_property(_StgFEM.MGSolver_PETScData_residual_get, _StgFEM.MGSolver_PETScData_residual_set)
    expiredResidual = _swig_property(_StgFEM.MGSolver_PETScData_expiredResidual_get, _StgFEM.MGSolver_PETScData_expiredResidual_set)
    matrixChanged = _swig_property(_StgFEM.MGSolver_PETScData_matrixChanged_get, _StgFEM.MGSolver_PETScData_matrixChanged_set)
    curRHS = _swig_property(_StgFEM.MGSolver_PETScData_curRHS_get, _StgFEM.MGSolver_PETScData_curRHS_set)
    curSolution = _swig_property(_StgFEM.MGSolver_PETScData_curSolution_get, _StgFEM.MGSolver_PETScData_curSolution_set)
    optionsReady = _swig_property(_StgFEM.MGSolver_PETScData_optionsReady_get, _StgFEM.MGSolver_PETScData_optionsReady_set)

    def __init__(self):
        _StgFEM.MGSolver_PETScData_swiginit(self, _StgFEM.new_MGSolver_PETScData())
    __swig_destroy__ = _StgFEM.delete_MGSolver_PETScData
MGSolver_PETScData_swigregister = _StgFEM.MGSolver_PETScData_swigregister
MGSolver_PETScData_swigregister(MGSolver_PETScData)

class Energy_SLE_Solver(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.Energy_SLE_Solver__sizeOfSelf_get, _StgFEM.Energy_SLE_Solver__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.Energy_SLE_Solver__deleteSelf_get, _StgFEM.Energy_SLE_Solver__deleteSelf_set)
    type = _swig_property(_StgFEM.Energy_SLE_Solver_type_get, _StgFEM.Energy_SLE_Solver_type_set)
    nRefs = _swig_property(_StgFEM.Energy_SLE_Solver_nRefs_get, _StgFEM.Energy_SLE_Solver_nRefs_set)
    locked = _swig_property(_StgFEM.Energy_SLE_Solver_locked_get, _StgFEM.Energy_SLE_Solver_locked_set)
    _delete = _swig_property(_StgFEM.Energy_SLE_Solver__delete_get, _StgFEM.Energy_SLE_Solver__delete_set)
    _print = _swig_property(_StgFEM.Energy_SLE_Solver__print_get, _StgFEM.Energy_SLE_Solver__print_set)
    _copy = _swig_property(_StgFEM.Energy_SLE_Solver__copy_get, _StgFEM.Energy_SLE_Solver__copy_set)
    name = _swig_property(_StgFEM.Energy_SLE_Solver_name_get, _StgFEM.Energy_SLE_Solver_name_set)
    nameAllocationType = _swig_property(_StgFEM.Energy_SLE_Solver_nameAllocationType_get, _StgFEM.Energy_SLE_Solver_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.Energy_SLE_Solver__defaultConstructor_get, _StgFEM.Energy_SLE_Solver__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.Energy_SLE_Solver__construct_get, _StgFEM.Energy_SLE_Solver__construct_set)
    _build = _swig_property(_StgFEM.Energy_SLE_Solver__build_get, _StgFEM.Energy_SLE_Solver__build_set)
    _initialise = _swig_property(_StgFEM.Energy_SLE_Solver__initialise_get, _StgFEM.Energy_SLE_Solver__initialise_set)
    _execute = _swig_property(_StgFEM.Energy_SLE_Solver__execute_get, _StgFEM.Energy_SLE_Solver__execute_set)
    _destroy = _swig_property(_StgFEM.Energy_SLE_Solver__destroy_get, _StgFEM.Energy_SLE_Solver__destroy_set)
    isConstructed = _swig_property(_StgFEM.Energy_SLE_Solver_isConstructed_get, _StgFEM.Energy_SLE_Solver_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.Energy_SLE_Solver_isBuilt_get, _StgFEM.Energy_SLE_Solver_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.Energy_SLE_Solver_isInitialised_get, _StgFEM.Energy_SLE_Solver_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.Energy_SLE_Solver_hasExecuted_get, _StgFEM.Energy_SLE_Solver_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.Energy_SLE_Solver_isDestroyed_get, _StgFEM.Energy_SLE_Solver_isDestroyed_set)
    constructType = _swig_property(_StgFEM.Energy_SLE_Solver_constructType_get, _StgFEM.Energy_SLE_Solver_constructType_set)
    buildType = _swig_property(_StgFEM.Energy_SLE_Solver_buildType_get, _StgFEM.Energy_SLE_Solver_buildType_set)
    initialiseType = _swig_property(_StgFEM.Energy_SLE_Solver_initialiseType_get, _StgFEM.Energy_SLE_Solver_initialiseType_set)
    executeType = _swig_property(_StgFEM.Energy_SLE_Solver_executeType_get, _StgFEM.Energy_SLE_Solver_executeType_set)
    destroyType = _swig_property(_StgFEM.Energy_SLE_Solver_destroyType_get, _StgFEM.Energy_SLE_Solver_destroyType_set)
    extensionManager = _swig_property(_StgFEM.Energy_SLE_Solver_extensionManager_get, _StgFEM.Energy_SLE_Solver_extensionManager_set)
    _solverSetup = _swig_property(_StgFEM.Energy_SLE_Solver__solverSetup_get, _StgFEM.Energy_SLE_Solver__solverSetup_set)
    _solve = _swig_property(_StgFEM.Energy_SLE_Solver__solve_get, _StgFEM.Energy_SLE_Solver__solve_set)
    _getResidual = _swig_property(_StgFEM.Energy_SLE_Solver__getResidual_get, _StgFEM.Energy_SLE_Solver__getResidual_set)
    _formResidual = _swig_property(_StgFEM.Energy_SLE_Solver__formResidual_get, _StgFEM.Energy_SLE_Solver__formResidual_set)
    _getRhs = _swig_property(_StgFEM.Energy_SLE_Solver__getRhs_get, _StgFEM.Energy_SLE_Solver__getRhs_set)
    _getSolution = _swig_property(_StgFEM.Energy_SLE_Solver__getSolution_get, _StgFEM.Energy_SLE_Solver__getSolution_set)
    debug = _swig_property(_StgFEM.Energy_SLE_Solver_debug_get, _StgFEM.Energy_SLE_Solver_debug_set)
    info = _swig_property(_StgFEM.Energy_SLE_Solver_info_get, _StgFEM.Energy_SLE_Solver_info_set)
    maxIterations = _swig_property(_StgFEM.Energy_SLE_Solver_maxIterations_get, _StgFEM.Energy_SLE_Solver_maxIterations_set)
    hasSolved = _swig_property(_StgFEM.Energy_SLE_Solver_hasSolved_get, _StgFEM.Energy_SLE_Solver_hasSolved_set)
    inneritsinitialtime = _swig_property(_StgFEM.Energy_SLE_Solver_inneritsinitialtime_get, _StgFEM.Energy_SLE_Solver_inneritsinitialtime_set)
    outeritsinitialtime = _swig_property(_StgFEM.Energy_SLE_Solver_outeritsinitialtime_get, _StgFEM.Energy_SLE_Solver_outeritsinitialtime_set)
    nonlinearitsinitialtime = _swig_property(_StgFEM.Energy_SLE_Solver_nonlinearitsinitialtime_get, _StgFEM.Energy_SLE_Solver_nonlinearitsinitialtime_set)
    inneritsendtime = _swig_property(_StgFEM.Energy_SLE_Solver_inneritsendtime_get, _StgFEM.Energy_SLE_Solver_inneritsendtime_set)
    outeritsendtime = _swig_property(_StgFEM.Energy_SLE_Solver_outeritsendtime_get, _StgFEM.Energy_SLE_Solver_outeritsendtime_set)
    nonlinearitsendtime = _swig_property(_StgFEM.Energy_SLE_Solver_nonlinearitsendtime_get, _StgFEM.Energy_SLE_Solver_nonlinearitsendtime_set)
    totalinneritstime = _swig_property(_StgFEM.Energy_SLE_Solver_totalinneritstime_get, _StgFEM.Energy_SLE_Solver_totalinneritstime_set)
    totalouteritstime = _swig_property(_StgFEM.Energy_SLE_Solver_totalouteritstime_get, _StgFEM.Energy_SLE_Solver_totalouteritstime_set)
    totalnonlinearitstime = _swig_property(_StgFEM.Energy_SLE_Solver_totalnonlinearitstime_get, _StgFEM.Energy_SLE_Solver_totalnonlinearitstime_set)
    totalnuminnerits = _swig_property(_StgFEM.Energy_SLE_Solver_totalnuminnerits_get, _StgFEM.Energy_SLE_Solver_totalnuminnerits_set)
    totalnumouterits = _swig_property(_StgFEM.Energy_SLE_Solver_totalnumouterits_get, _StgFEM.Energy_SLE_Solver_totalnumouterits_set)
    totalnumnonlinearits = _swig_property(_StgFEM.Energy_SLE_Solver_totalnumnonlinearits_get, _StgFEM.Energy_SLE_Solver_totalnumnonlinearits_set)
    avgnuminnerits = _swig_property(_StgFEM.Energy_SLE_Solver_avgnuminnerits_get, _StgFEM.Energy_SLE_Solver_avgnuminnerits_set)
    avgnumouterits = _swig_property(_StgFEM.Energy_SLE_Solver_avgnumouterits_get, _StgFEM.Energy_SLE_Solver_avgnumouterits_set)
    avgtimeinnerits = _swig_property(_StgFEM.Energy_SLE_Solver_avgtimeinnerits_get, _StgFEM.Energy_SLE_Solver_avgtimeinnerits_set)
    avgtimeouterits = _swig_property(_StgFEM.Energy_SLE_Solver_avgtimeouterits_get, _StgFEM.Energy_SLE_Solver_avgtimeouterits_set)
    avgtimenonlinearits = _swig_property(_StgFEM.Energy_SLE_Solver_avgtimenonlinearits_get, _StgFEM.Energy_SLE_Solver_avgtimenonlinearits_set)
    currenttimestep = _swig_property(_StgFEM.Energy_SLE_Solver_currenttimestep_get, _StgFEM.Energy_SLE_Solver_currenttimestep_set)
    previoustimestep = _swig_property(_StgFEM.Energy_SLE_Solver_previoustimestep_get, _StgFEM.Energy_SLE_Solver_previoustimestep_set)
    ksp = _swig_property(_StgFEM.Energy_SLE_Solver_ksp_get, _StgFEM.Energy_SLE_Solver_ksp_set)
    residual = _swig_property(_StgFEM.Energy_SLE_Solver_residual_get, _StgFEM.Energy_SLE_Solver_residual_set)

    def __init__(self):
        _StgFEM.Energy_SLE_Solver_swiginit(self, _StgFEM.new_Energy_SLE_Solver())
    __swig_destroy__ = _StgFEM.delete_Energy_SLE_Solver
Energy_SLE_Solver_swigregister = _StgFEM.Energy_SLE_Solver_swigregister
Energy_SLE_Solver_swigregister(Energy_SLE_Solver)
Energy_SLE_Solver_Type = cvar.Energy_SLE_Solver_Type


def Energy_SLE_Solver_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM.Energy_SLE_Solver_DefaultNew(name)
Energy_SLE_Solver_DefaultNew = _StgFEM.Energy_SLE_Solver_DefaultNew

def Energy_SLE_Solver_New(name: 'Name') -> "Energy_SLE_Solver *":
    return _StgFEM.Energy_SLE_Solver_New(name)
Energy_SLE_Solver_New = _StgFEM.Energy_SLE_Solver_New

def _Energy_SLE_Solver_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _solverSetup: 'SLE_Solver_SolverSetupFunction *', _solve: 'SLE_Solver_SolveFunction *', _getResidual: 'SLE_Solver_GetResidualFunc *') -> "Energy_SLE_Solver *":
    return _StgFEM._Energy_SLE_Solver_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _solverSetup, _solve, _getResidual)
_Energy_SLE_Solver_New = _StgFEM._Energy_SLE_Solver_New

def _Energy_SLE_Solver_Init(arg1: 'Energy_SLE_Solver') -> "void":
    return _StgFEM._Energy_SLE_Solver_Init(arg1)
_Energy_SLE_Solver_Init = _StgFEM._Energy_SLE_Solver_Init

def Energy_SLE_Solver_InitAll(solver: 'Energy_SLE_Solver') -> "void":
    return _StgFEM.Energy_SLE_Solver_InitAll(solver)
Energy_SLE_Solver_InitAll = _StgFEM.Energy_SLE_Solver_InitAll

def _Energy_SLE_Solver_Delete(sleSolver: 'void *') -> "void":
    return _StgFEM._Energy_SLE_Solver_Delete(sleSolver)
_Energy_SLE_Solver_Delete = _StgFEM._Energy_SLE_Solver_Delete

def _Energy_SLE_Solver_Print(sleSolver: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._Energy_SLE_Solver_Print(sleSolver, stream)
_Energy_SLE_Solver_Print = _StgFEM._Energy_SLE_Solver_Print

def _Energy_SLE_Solver_Copy(standardSleSolver: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._Energy_SLE_Solver_Copy(standardSleSolver, dest, deep, nameExt, ptrMap)
_Energy_SLE_Solver_Copy = _StgFEM._Energy_SLE_Solver_Copy

def _Energy_SLE_Solver_Build(sleSolver: 'void *', standardSLE: 'void *') -> "void":
    return _StgFEM._Energy_SLE_Solver_Build(sleSolver, standardSLE)
_Energy_SLE_Solver_Build = _StgFEM._Energy_SLE_Solver_Build

def _Energy_SLE_Solver_Initialise(sleSolver: 'void *', standardSLE: 'void *') -> "void":
    return _StgFEM._Energy_SLE_Solver_Initialise(sleSolver, standardSLE)
_Energy_SLE_Solver_Initialise = _StgFEM._Energy_SLE_Solver_Initialise

def _Energy_SLE_Solver_AssignFromXML(sleSolver: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._Energy_SLE_Solver_AssignFromXML(sleSolver, cf, data)
_Energy_SLE_Solver_AssignFromXML = _StgFEM._Energy_SLE_Solver_AssignFromXML

def Energy_SLE_Solver_SetSolver(solver: 'void *', heatSLE: 'void *') -> "void":
    return _StgFEM.Energy_SLE_Solver_SetSolver(solver, heatSLE)
Energy_SLE_Solver_SetSolver = _StgFEM.Energy_SLE_Solver_SetSolver

def _Energy_SLE_Solver_Execute(sleSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._Energy_SLE_Solver_Execute(sleSolver, data)
_Energy_SLE_Solver_Execute = _StgFEM._Energy_SLE_Solver_Execute

def _Energy_SLE_Solver_Destroy(sleSolver: 'void *', data: 'void *') -> "void":
    return _StgFEM._Energy_SLE_Solver_Destroy(sleSolver, data)
_Energy_SLE_Solver_Destroy = _StgFEM._Energy_SLE_Solver_Destroy

def _Energy_SLE_Solver_SolverSetup(sleSolver: 'void *', standardSLE: 'void *') -> "void":
    return _StgFEM._Energy_SLE_Solver_SolverSetup(sleSolver, standardSLE)
_Energy_SLE_Solver_SolverSetup = _StgFEM._Energy_SLE_Solver_SolverSetup

def _Energy_SLE_Solver_Solve(sleSolver: 'void *', standardSLE: 'void *') -> "void":
    return _StgFEM._Energy_SLE_Solver_Solve(sleSolver, standardSLE)
_Energy_SLE_Solver_Solve = _StgFEM._Energy_SLE_Solver_Solve

def _Energy_SLE_GetResidual(sleSolver: 'void *', fv_I: 'Index') -> "Vec":
    return _StgFEM._Energy_SLE_GetResidual(sleSolver, fv_I)
_Energy_SLE_GetResidual = _StgFEM._Energy_SLE_GetResidual
class Stokes_SLE(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.Stokes_SLE__sizeOfSelf_get, _StgFEM.Stokes_SLE__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.Stokes_SLE__deleteSelf_get, _StgFEM.Stokes_SLE__deleteSelf_set)
    type = _swig_property(_StgFEM.Stokes_SLE_type_get, _StgFEM.Stokes_SLE_type_set)
    nRefs = _swig_property(_StgFEM.Stokes_SLE_nRefs_get, _StgFEM.Stokes_SLE_nRefs_set)
    locked = _swig_property(_StgFEM.Stokes_SLE_locked_get, _StgFEM.Stokes_SLE_locked_set)
    _delete = _swig_property(_StgFEM.Stokes_SLE__delete_get, _StgFEM.Stokes_SLE__delete_set)
    _print = _swig_property(_StgFEM.Stokes_SLE__print_get, _StgFEM.Stokes_SLE__print_set)
    _copy = _swig_property(_StgFEM.Stokes_SLE__copy_get, _StgFEM.Stokes_SLE__copy_set)
    name = _swig_property(_StgFEM.Stokes_SLE_name_get, _StgFEM.Stokes_SLE_name_set)
    nameAllocationType = _swig_property(_StgFEM.Stokes_SLE_nameAllocationType_get, _StgFEM.Stokes_SLE_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.Stokes_SLE__defaultConstructor_get, _StgFEM.Stokes_SLE__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.Stokes_SLE__construct_get, _StgFEM.Stokes_SLE__construct_set)
    _build = _swig_property(_StgFEM.Stokes_SLE__build_get, _StgFEM.Stokes_SLE__build_set)
    _initialise = _swig_property(_StgFEM.Stokes_SLE__initialise_get, _StgFEM.Stokes_SLE__initialise_set)
    _execute = _swig_property(_StgFEM.Stokes_SLE__execute_get, _StgFEM.Stokes_SLE__execute_set)
    _destroy = _swig_property(_StgFEM.Stokes_SLE__destroy_get, _StgFEM.Stokes_SLE__destroy_set)
    isConstructed = _swig_property(_StgFEM.Stokes_SLE_isConstructed_get, _StgFEM.Stokes_SLE_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.Stokes_SLE_isBuilt_get, _StgFEM.Stokes_SLE_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.Stokes_SLE_isInitialised_get, _StgFEM.Stokes_SLE_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.Stokes_SLE_hasExecuted_get, _StgFEM.Stokes_SLE_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.Stokes_SLE_isDestroyed_get, _StgFEM.Stokes_SLE_isDestroyed_set)
    constructType = _swig_property(_StgFEM.Stokes_SLE_constructType_get, _StgFEM.Stokes_SLE_constructType_set)
    buildType = _swig_property(_StgFEM.Stokes_SLE_buildType_get, _StgFEM.Stokes_SLE_buildType_set)
    initialiseType = _swig_property(_StgFEM.Stokes_SLE_initialiseType_get, _StgFEM.Stokes_SLE_initialiseType_set)
    executeType = _swig_property(_StgFEM.Stokes_SLE_executeType_get, _StgFEM.Stokes_SLE_executeType_set)
    destroyType = _swig_property(_StgFEM.Stokes_SLE_destroyType_get, _StgFEM.Stokes_SLE_destroyType_set)
    extensionManager = _swig_property(_StgFEM.Stokes_SLE_extensionManager_get, _StgFEM.Stokes_SLE_extensionManager_set)
    _LM_Setup = _swig_property(_StgFEM.Stokes_SLE__LM_Setup_get, _StgFEM.Stokes_SLE__LM_Setup_set)
    _matrixSetup = _swig_property(_StgFEM.Stokes_SLE__matrixSetup_get, _StgFEM.Stokes_SLE__matrixSetup_set)
    _vectorSetup = _swig_property(_StgFEM.Stokes_SLE__vectorSetup_get, _StgFEM.Stokes_SLE__vectorSetup_set)
    _updateSolutionOntoNodes = _swig_property(_StgFEM.Stokes_SLE__updateSolutionOntoNodes_get, _StgFEM.Stokes_SLE__updateSolutionOntoNodes_set)
    _mgSelectStiffMats = _swig_property(_StgFEM.Stokes_SLE__mgSelectStiffMats_get, _StgFEM.Stokes_SLE__mgSelectStiffMats_set)
    debug = _swig_property(_StgFEM.Stokes_SLE_debug_get, _StgFEM.Stokes_SLE_debug_set)
    info = _swig_property(_StgFEM.Stokes_SLE_info_get, _StgFEM.Stokes_SLE_info_set)
    convergenceStream = _swig_property(_StgFEM.Stokes_SLE_convergenceStream_get, _StgFEM.Stokes_SLE_convergenceStream_set)
    makeConvergenceFile = _swig_property(_StgFEM.Stokes_SLE_makeConvergenceFile_get, _StgFEM.Stokes_SLE_makeConvergenceFile_set)
    comm = _swig_property(_StgFEM.Stokes_SLE_comm_get, _StgFEM.Stokes_SLE_comm_set)
    stiffnessMatrices = _swig_property(_StgFEM.Stokes_SLE_stiffnessMatrices_get, _StgFEM.Stokes_SLE_stiffnessMatrices_set)
    forceVectors = _swig_property(_StgFEM.Stokes_SLE_forceVectors_get, _StgFEM.Stokes_SLE_forceVectors_set)
    solutionVectors = _swig_property(_StgFEM.Stokes_SLE_solutionVectors_get, _StgFEM.Stokes_SLE_solutionVectors_set)
    solver = _swig_property(_StgFEM.Stokes_SLE_solver_get, _StgFEM.Stokes_SLE_solver_set)
    context = _swig_property(_StgFEM.Stokes_SLE_context_get, _StgFEM.Stokes_SLE_context_set)
    executeEPName = _swig_property(_StgFEM.Stokes_SLE_executeEPName_get, _StgFEM.Stokes_SLE_executeEPName_set)
    executeEP = _swig_property(_StgFEM.Stokes_SLE_executeEP_get, _StgFEM.Stokes_SLE_executeEP_set)
    integrationSetupEPName = _swig_property(_StgFEM.Stokes_SLE_integrationSetupEPName_get, _StgFEM.Stokes_SLE_integrationSetupEPName_set)
    integrationSetupEP = _swig_property(_StgFEM.Stokes_SLE_integrationSetupEP_get, _StgFEM.Stokes_SLE_integrationSetupEP_set)
    entryPoint_Register = _swig_property(_StgFEM.Stokes_SLE_entryPoint_Register_get, _StgFEM.Stokes_SLE_entryPoint_Register_set)
    isNonLinear = _swig_property(_StgFEM.Stokes_SLE_isNonLinear_get, _StgFEM.Stokes_SLE_isNonLinear_set)
    linearExecute = _swig_property(_StgFEM.Stokes_SLE_linearExecute_get, _StgFEM.Stokes_SLE_linearExecute_set)
    nonLinearTolerance = _swig_property(_StgFEM.Stokes_SLE_nonLinearTolerance_get, _StgFEM.Stokes_SLE_nonLinearTolerance_set)
    nonLinearMaxIterations = _swig_property(_StgFEM.Stokes_SLE_nonLinearMaxIterations_get, _StgFEM.Stokes_SLE_nonLinearMaxIterations_set)
    nonLinearIteration_I = _swig_property(_StgFEM.Stokes_SLE_nonLinearIteration_I_get, _StgFEM.Stokes_SLE_nonLinearIteration_I_set)
    killNonConvergent = _swig_property(_StgFEM.Stokes_SLE_killNonConvergent_get, _StgFEM.Stokes_SLE_killNonConvergent_set)
    nonLinearMinIterations = _swig_property(_StgFEM.Stokes_SLE_nonLinearMinIterations_get, _StgFEM.Stokes_SLE_nonLinearMinIterations_set)
    curResidual = _swig_property(_StgFEM.Stokes_SLE_curResidual_get, _StgFEM.Stokes_SLE_curResidual_set)
    curSolveTime = _swig_property(_StgFEM.Stokes_SLE_curSolveTime_get, _StgFEM.Stokes_SLE_curSolveTime_set)
    nlSetupEPName = _swig_property(_StgFEM.Stokes_SLE_nlSetupEPName_get, _StgFEM.Stokes_SLE_nlSetupEPName_set)
    nlSetupEP = _swig_property(_StgFEM.Stokes_SLE_nlSetupEP_get, _StgFEM.Stokes_SLE_nlSetupEP_set)
    nlEPName = _swig_property(_StgFEM.Stokes_SLE_nlEPName_get, _StgFEM.Stokes_SLE_nlEPName_set)
    nlEP = _swig_property(_StgFEM.Stokes_SLE_nlEP_get, _StgFEM.Stokes_SLE_nlEP_set)
    postNlEPName = _swig_property(_StgFEM.Stokes_SLE_postNlEPName_get, _StgFEM.Stokes_SLE_postNlEPName_set)
    postNlEP = _swig_property(_StgFEM.Stokes_SLE_postNlEP_get, _StgFEM.Stokes_SLE_postNlEP_set)
    nlConvergedEPName = _swig_property(_StgFEM.Stokes_SLE_nlConvergedEPName_get, _StgFEM.Stokes_SLE_nlConvergedEPName_set)
    nlConvergedEP = _swig_property(_StgFEM.Stokes_SLE_nlConvergedEP_get, _StgFEM.Stokes_SLE_nlConvergedEP_set)
    nlFormJacobian = _swig_property(_StgFEM.Stokes_SLE_nlFormJacobian_get, _StgFEM.Stokes_SLE_nlFormJacobian_set)
    nlCurIterate = _swig_property(_StgFEM.Stokes_SLE_nlCurIterate_get, _StgFEM.Stokes_SLE_nlCurIterate_set)
    mgEnabled = _swig_property(_StgFEM.Stokes_SLE_mgEnabled_get, _StgFEM.Stokes_SLE_mgEnabled_set)
    mgUpdate = _swig_property(_StgFEM.Stokes_SLE_mgUpdate_get, _StgFEM.Stokes_SLE_mgUpdate_set)
    nMGHandles = _swig_property(_StgFEM.Stokes_SLE_nMGHandles_get, _StgFEM.Stokes_SLE_nMGHandles_set)
    mgHandles = _swig_property(_StgFEM.Stokes_SLE_mgHandles_get, _StgFEM.Stokes_SLE_mgHandles_set)
    nonLinearSolutionType = _swig_property(_StgFEM.Stokes_SLE_nonLinearSolutionType_get, _StgFEM.Stokes_SLE_nonLinearSolutionType_set)
    _buildF = _swig_property(_StgFEM.Stokes_SLE__buildF_get, _StgFEM.Stokes_SLE__buildF_set)
    _buildJ = _swig_property(_StgFEM.Stokes_SLE__buildJ_get, _StgFEM.Stokes_SLE__buildJ_set)
    buildFContext = _swig_property(_StgFEM.Stokes_SLE_buildFContext_get, _StgFEM.Stokes_SLE_buildFContext_set)
    buildJContext = _swig_property(_StgFEM.Stokes_SLE_buildJContext_get, _StgFEM.Stokes_SLE_buildJContext_set)
    nlSolver = _swig_property(_StgFEM.Stokes_SLE_nlSolver_get, _StgFEM.Stokes_SLE_nlSolver_set)
    linearSolveInitGuess = _swig_property(_StgFEM.Stokes_SLE_linearSolveInitGuess_get, _StgFEM.Stokes_SLE_linearSolveInitGuess_set)
    F = _swig_property(_StgFEM.Stokes_SLE_F_get, _StgFEM.Stokes_SLE_F_set)
    X = _swig_property(_StgFEM.Stokes_SLE_X_get, _StgFEM.Stokes_SLE_X_set)
    A = _swig_property(_StgFEM.Stokes_SLE_A_get, _StgFEM.Stokes_SLE_A_set)
    J = _swig_property(_StgFEM.Stokes_SLE_J_get, _StgFEM.Stokes_SLE_J_set)
    P = _swig_property(_StgFEM.Stokes_SLE_P_get, _StgFEM.Stokes_SLE_P_set)
    _setFFunc = _swig_property(_StgFEM.Stokes_SLE__setFFunc_get, _StgFEM.Stokes_SLE__setFFunc_set)
    _configureNLSolverFunc = _swig_property(_StgFEM.Stokes_SLE__configureNLSolverFunc_get, _StgFEM.Stokes_SLE__configureNLSolverFunc_set)
    _updateOldFields = _swig_property(_StgFEM.Stokes_SLE__updateOldFields_get, _StgFEM.Stokes_SLE__updateOldFields_set)
    optionsPrefix = _swig_property(_StgFEM.Stokes_SLE_optionsPrefix_get, _StgFEM.Stokes_SLE_optionsPrefix_set)
    picard_form_function_type = _swig_property(_StgFEM.Stokes_SLE_picard_form_function_type_get, _StgFEM.Stokes_SLE_picard_form_function_type_set)
    alpha = _swig_property(_StgFEM.Stokes_SLE_alpha_get, _StgFEM.Stokes_SLE_alpha_set)
    rtol = _swig_property(_StgFEM.Stokes_SLE_rtol_get, _StgFEM.Stokes_SLE_rtol_set)
    ttol = _swig_property(_StgFEM.Stokes_SLE_ttol_get, _StgFEM.Stokes_SLE_ttol_set)
    stol = _swig_property(_StgFEM.Stokes_SLE_stol_get, _StgFEM.Stokes_SLE_stol_set)
    abstol = _swig_property(_StgFEM.Stokes_SLE_abstol_get, _StgFEM.Stokes_SLE_abstol_set)
    picard_monitor = _swig_property(_StgFEM.Stokes_SLE_picard_monitor_get, _StgFEM.Stokes_SLE_picard_monitor_set)
    _sleFormFunction = _swig_property(_StgFEM.Stokes_SLE__sleFormFunction_get, _StgFEM.Stokes_SLE__sleFormFunction_set)
    runatExecutePhase = _swig_property(_StgFEM.Stokes_SLE_runatExecutePhase_get, _StgFEM.Stokes_SLE_runatExecutePhase_set)
    solver_callback = _swig_property(_StgFEM.Stokes_SLE_solver_callback_get, _StgFEM.Stokes_SLE_solver_callback_set)
    kStiffMat = _swig_property(_StgFEM.Stokes_SLE_kStiffMat_get, _StgFEM.Stokes_SLE_kStiffMat_set)
    gStiffMat = _swig_property(_StgFEM.Stokes_SLE_gStiffMat_get, _StgFEM.Stokes_SLE_gStiffMat_set)
    dStiffMat = _swig_property(_StgFEM.Stokes_SLE_dStiffMat_get, _StgFEM.Stokes_SLE_dStiffMat_set)
    cStiffMat = _swig_property(_StgFEM.Stokes_SLE_cStiffMat_get, _StgFEM.Stokes_SLE_cStiffMat_set)
    uSolnVec = _swig_property(_StgFEM.Stokes_SLE_uSolnVec_get, _StgFEM.Stokes_SLE_uSolnVec_set)
    null_vector = _swig_property(_StgFEM.Stokes_SLE_null_vector_get, _StgFEM.Stokes_SLE_null_vector_set)
    pSolnVec = _swig_property(_StgFEM.Stokes_SLE_pSolnVec_get, _StgFEM.Stokes_SLE_pSolnVec_set)
    fForceVec = _swig_property(_StgFEM.Stokes_SLE_fForceVec_get, _StgFEM.Stokes_SLE_fForceVec_set)
    hForceVec = _swig_property(_StgFEM.Stokes_SLE_hForceVec_get, _StgFEM.Stokes_SLE_hForceVec_set)
    fnorm = _swig_property(_StgFEM.Stokes_SLE_fnorm_get, _StgFEM.Stokes_SLE_fnorm_set)
    knorm = _swig_property(_StgFEM.Stokes_SLE_knorm_get, _StgFEM.Stokes_SLE_knorm_set)

    def __init__(self):
        _StgFEM.Stokes_SLE_swiginit(self, _StgFEM.new_Stokes_SLE())
    __swig_destroy__ = _StgFEM.delete_Stokes_SLE
Stokes_SLE_swigregister = _StgFEM.Stokes_SLE_swigregister
Stokes_SLE_swigregister(Stokes_SLE)
Stokes_SLE_Type = cvar.Stokes_SLE_Type


def Stokes_SLE_New(name: 'Name', context: 'FiniteElementContext *', solver: 'SLE_Solver', isNonLinear: 'Bool', nonLinearTolerance: 'double', nonLinearMaxIterations: 'Iteration_Index', killNonConvergent: 'Bool', entryPoint_Register: 'EntryPoint_Register *', comm: 'MPI_Comm', kStiffMat: 'StiffnessMatrix', gStiffMat: 'StiffnessMatrix', dStiffMat: 'StiffnessMatrix', cStiffMat: 'StiffnessMatrix', uSolnVec: 'SolutionVector', pSolnVec: 'SolutionVector', fForceVec: 'ForceVector', hForceVec: 'ForceVector') -> "Stokes_SLE *":
    return _StgFEM.Stokes_SLE_New(name, context, solver, isNonLinear, nonLinearTolerance, nonLinearMaxIterations, killNonConvergent, entryPoint_Register, comm, kStiffMat, gStiffMat, dStiffMat, cStiffMat, uSolnVec, pSolnVec, fForceVec, hForceVec)
Stokes_SLE_New = _StgFEM.Stokes_SLE_New

def _Stokes_SLE_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _LM_Setup: 'SystemLinearEquations_LM_SetupFunction *', _matrixSetup: 'SystemLinearEquations_MatrixSetupFunction *', _vectorSetup: 'SystemLinearEquations_VectorSetupFunction *', _updateSolutionOntoNodes: 'SystemLinearEquations_UpdateSolutionOntoNodesFunc *', _mgSelectStiffMats: 'SystemLinearEquations_MG_SelectStiffMatsFunc *') -> "Stokes_SLE *":
    return _StgFEM._Stokes_SLE_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _LM_Setup, _matrixSetup, _vectorSetup, _updateSolutionOntoNodes, _mgSelectStiffMats)
_Stokes_SLE_New = _StgFEM._Stokes_SLE_New

def _Stokes_SLE_Init(sle: 'void *', kStiffMat: 'StiffnessMatrix', gStiffMat: 'StiffnessMatrix', dStiffMat: 'StiffnessMatrix', cStiffMat: 'StiffnessMatrix', uSolnVec: 'SolutionVector', pSolnVec: 'SolutionVector', fForceVec: 'ForceVector', hForceVec: 'ForceVector') -> "void":
    return _StgFEM._Stokes_SLE_Init(sle, kStiffMat, gStiffMat, dStiffMat, cStiffMat, uSolnVec, pSolnVec, fForceVec, hForceVec)
_Stokes_SLE_Init = _StgFEM._Stokes_SLE_Init

def _Stokes_SLE_Print(stokesSleSolver: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._Stokes_SLE_Print(stokesSleSolver, stream)
_Stokes_SLE_Print = _StgFEM._Stokes_SLE_Print

def _Stokes_SLE_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._Stokes_SLE_DefaultNew(name)
_Stokes_SLE_DefaultNew = _StgFEM._Stokes_SLE_DefaultNew

def _Stokes_SLE_AssignFromXML(sle: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_AssignFromXML(sle, cf, data)
_Stokes_SLE_AssignFromXML = _StgFEM._Stokes_SLE_AssignFromXML

def Stokes_MomentumResidual(arg1: 'Stokes_SLE') -> "double":
    return _StgFEM.Stokes_MomentumResidual(arg1)
Stokes_MomentumResidual = _StgFEM.Stokes_MomentumResidual

def Stokes_ContinuityResidual(arg1: 'Stokes_SLE') -> "double":
    return _StgFEM.Stokes_ContinuityResidual(arg1)
Stokes_ContinuityResidual = _StgFEM.Stokes_ContinuityResidual

def _Stokes_SLE_MG_SelectStiffMats(_sle: 'void *', nSMs: 'unsigned int *', sms: 'StiffnessMatrix ***') -> "void":
    return _StgFEM._Stokes_SLE_MG_SelectStiffMats(_sle, nSMs, sms)
_Stokes_SLE_MG_SelectStiffMats = _StgFEM._Stokes_SLE_MG_SelectStiffMats
class Stokes_SLE_UzawaSolver(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__sizeOfSelf_get, _StgFEM.Stokes_SLE_UzawaSolver__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__deleteSelf_get, _StgFEM.Stokes_SLE_UzawaSolver__deleteSelf_set)
    type = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_type_get, _StgFEM.Stokes_SLE_UzawaSolver_type_set)
    nRefs = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_nRefs_get, _StgFEM.Stokes_SLE_UzawaSolver_nRefs_set)
    locked = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_locked_get, _StgFEM.Stokes_SLE_UzawaSolver_locked_set)
    _delete = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__delete_get, _StgFEM.Stokes_SLE_UzawaSolver__delete_set)
    _print = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__print_get, _StgFEM.Stokes_SLE_UzawaSolver__print_set)
    _copy = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__copy_get, _StgFEM.Stokes_SLE_UzawaSolver__copy_set)
    name = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_name_get, _StgFEM.Stokes_SLE_UzawaSolver_name_set)
    nameAllocationType = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_nameAllocationType_get, _StgFEM.Stokes_SLE_UzawaSolver_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__defaultConstructor_get, _StgFEM.Stokes_SLE_UzawaSolver__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__construct_get, _StgFEM.Stokes_SLE_UzawaSolver__construct_set)
    _build = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__build_get, _StgFEM.Stokes_SLE_UzawaSolver__build_set)
    _initialise = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__initialise_get, _StgFEM.Stokes_SLE_UzawaSolver__initialise_set)
    _execute = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__execute_get, _StgFEM.Stokes_SLE_UzawaSolver__execute_set)
    _destroy = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__destroy_get, _StgFEM.Stokes_SLE_UzawaSolver__destroy_set)
    isConstructed = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_isConstructed_get, _StgFEM.Stokes_SLE_UzawaSolver_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_isBuilt_get, _StgFEM.Stokes_SLE_UzawaSolver_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_isInitialised_get, _StgFEM.Stokes_SLE_UzawaSolver_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_hasExecuted_get, _StgFEM.Stokes_SLE_UzawaSolver_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_isDestroyed_get, _StgFEM.Stokes_SLE_UzawaSolver_isDestroyed_set)
    constructType = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_constructType_get, _StgFEM.Stokes_SLE_UzawaSolver_constructType_set)
    buildType = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_buildType_get, _StgFEM.Stokes_SLE_UzawaSolver_buildType_set)
    initialiseType = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_initialiseType_get, _StgFEM.Stokes_SLE_UzawaSolver_initialiseType_set)
    executeType = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_executeType_get, _StgFEM.Stokes_SLE_UzawaSolver_executeType_set)
    destroyType = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_destroyType_get, _StgFEM.Stokes_SLE_UzawaSolver_destroyType_set)
    extensionManager = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_extensionManager_get, _StgFEM.Stokes_SLE_UzawaSolver_extensionManager_set)
    _solverSetup = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__solverSetup_get, _StgFEM.Stokes_SLE_UzawaSolver__solverSetup_set)
    _solve = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__solve_get, _StgFEM.Stokes_SLE_UzawaSolver__solve_set)
    _getResidual = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__getResidual_get, _StgFEM.Stokes_SLE_UzawaSolver__getResidual_set)
    _formResidual = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__formResidual_get, _StgFEM.Stokes_SLE_UzawaSolver__formResidual_set)
    _getRhs = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__getRhs_get, _StgFEM.Stokes_SLE_UzawaSolver__getRhs_set)
    _getSolution = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver__getSolution_get, _StgFEM.Stokes_SLE_UzawaSolver__getSolution_set)
    debug = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_debug_get, _StgFEM.Stokes_SLE_UzawaSolver_debug_set)
    info = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_info_get, _StgFEM.Stokes_SLE_UzawaSolver_info_set)
    maxIterations = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_maxIterations_get, _StgFEM.Stokes_SLE_UzawaSolver_maxIterations_set)
    hasSolved = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_hasSolved_get, _StgFEM.Stokes_SLE_UzawaSolver_hasSolved_set)
    inneritsinitialtime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_inneritsinitialtime_get, _StgFEM.Stokes_SLE_UzawaSolver_inneritsinitialtime_set)
    outeritsinitialtime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_outeritsinitialtime_get, _StgFEM.Stokes_SLE_UzawaSolver_outeritsinitialtime_set)
    nonlinearitsinitialtime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_nonlinearitsinitialtime_get, _StgFEM.Stokes_SLE_UzawaSolver_nonlinearitsinitialtime_set)
    inneritsendtime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_inneritsendtime_get, _StgFEM.Stokes_SLE_UzawaSolver_inneritsendtime_set)
    outeritsendtime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_outeritsendtime_get, _StgFEM.Stokes_SLE_UzawaSolver_outeritsendtime_set)
    nonlinearitsendtime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_nonlinearitsendtime_get, _StgFEM.Stokes_SLE_UzawaSolver_nonlinearitsendtime_set)
    totalinneritstime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_totalinneritstime_get, _StgFEM.Stokes_SLE_UzawaSolver_totalinneritstime_set)
    totalouteritstime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_totalouteritstime_get, _StgFEM.Stokes_SLE_UzawaSolver_totalouteritstime_set)
    totalnonlinearitstime = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_totalnonlinearitstime_get, _StgFEM.Stokes_SLE_UzawaSolver_totalnonlinearitstime_set)
    totalnuminnerits = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_totalnuminnerits_get, _StgFEM.Stokes_SLE_UzawaSolver_totalnuminnerits_set)
    totalnumouterits = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_totalnumouterits_get, _StgFEM.Stokes_SLE_UzawaSolver_totalnumouterits_set)
    totalnumnonlinearits = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_totalnumnonlinearits_get, _StgFEM.Stokes_SLE_UzawaSolver_totalnumnonlinearits_set)
    avgnuminnerits = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_avgnuminnerits_get, _StgFEM.Stokes_SLE_UzawaSolver_avgnuminnerits_set)
    avgnumouterits = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_avgnumouterits_get, _StgFEM.Stokes_SLE_UzawaSolver_avgnumouterits_set)
    avgtimeinnerits = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_avgtimeinnerits_get, _StgFEM.Stokes_SLE_UzawaSolver_avgtimeinnerits_set)
    avgtimeouterits = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_avgtimeouterits_get, _StgFEM.Stokes_SLE_UzawaSolver_avgtimeouterits_set)
    avgtimenonlinearits = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_avgtimenonlinearits_get, _StgFEM.Stokes_SLE_UzawaSolver_avgtimenonlinearits_set)
    currenttimestep = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_currenttimestep_get, _StgFEM.Stokes_SLE_UzawaSolver_currenttimestep_set)
    previoustimestep = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_previoustimestep_get, _StgFEM.Stokes_SLE_UzawaSolver_previoustimestep_set)
    velSolver = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_velSolver_get, _StgFEM.Stokes_SLE_UzawaSolver_velSolver_set)
    pcSolver = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_pcSolver_get, _StgFEM.Stokes_SLE_UzawaSolver_pcSolver_set)
    preconditioner = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_preconditioner_get, _StgFEM.Stokes_SLE_UzawaSolver_preconditioner_set)
    pTempVec = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_pTempVec_get, _StgFEM.Stokes_SLE_UzawaSolver_pTempVec_set)
    rVec = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_rVec_get, _StgFEM.Stokes_SLE_UzawaSolver_rVec_set)
    sVec = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_sVec_get, _StgFEM.Stokes_SLE_UzawaSolver_sVec_set)
    fTempVec = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_fTempVec_get, _StgFEM.Stokes_SLE_UzawaSolver_fTempVec_set)
    vStarVec = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_vStarVec_get, _StgFEM.Stokes_SLE_UzawaSolver_vStarVec_set)
    maxUzawaIterations = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_maxUzawaIterations_get, _StgFEM.Stokes_SLE_UzawaSolver_maxUzawaIterations_set)
    minUzawaIterations = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_minUzawaIterations_get, _StgFEM.Stokes_SLE_UzawaSolver_minUzawaIterations_set)
    tolerance = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_tolerance_get, _StgFEM.Stokes_SLE_UzawaSolver_tolerance_set)
    useAbsoluteTolerance = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_useAbsoluteTolerance_get, _StgFEM.Stokes_SLE_UzawaSolver_useAbsoluteTolerance_set)
    monitor = _swig_property(_StgFEM.Stokes_SLE_UzawaSolver_monitor_get, _StgFEM.Stokes_SLE_UzawaSolver_monitor_set)

    def __init__(self):
        _StgFEM.Stokes_SLE_UzawaSolver_swiginit(self, _StgFEM.new_Stokes_SLE_UzawaSolver())
    __swig_destroy__ = _StgFEM.delete_Stokes_SLE_UzawaSolver
Stokes_SLE_UzawaSolver_swigregister = _StgFEM.Stokes_SLE_UzawaSolver_swigregister
Stokes_SLE_UzawaSolver_swigregister(Stokes_SLE_UzawaSolver)
Stokes_SLE_UzawaSolver_Type = cvar.Stokes_SLE_UzawaSolver_Type


def _Stokes_SLE_UzawaSolver_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._Stokes_SLE_UzawaSolver_DefaultNew(name)
_Stokes_SLE_UzawaSolver_DefaultNew = _StgFEM._Stokes_SLE_UzawaSolver_DefaultNew

def Stokes_SLE_UzawaSolver_New(name: 'Name', preconditioner: 'StiffnessMatrix', maxUzawaIterations: 'Iteration_Index', minUzawaIterations: 'Iteration_Index', tolerance: 'double', useAbsoluteTolerance: 'Bool', monitor: 'Bool') -> "Stokes_SLE_UzawaSolver *":
    return _StgFEM.Stokes_SLE_UzawaSolver_New(name, preconditioner, maxUzawaIterations, minUzawaIterations, tolerance, useAbsoluteTolerance, monitor)
Stokes_SLE_UzawaSolver_New = _StgFEM.Stokes_SLE_UzawaSolver_New

def _Stokes_SLE_UzawaSolver_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _solverSetup: 'SLE_Solver_SolverSetupFunction *', _solve: 'SLE_Solver_SolveFunction *', _getResidual: 'SLE_Solver_GetResidualFunc *') -> "Stokes_SLE_UzawaSolver *":
    return _StgFEM._Stokes_SLE_UzawaSolver_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _solverSetup, _solve, _getResidual)
_Stokes_SLE_UzawaSolver_New = _StgFEM._Stokes_SLE_UzawaSolver_New

def _Stokes_SLE_UzawaSolver_Init(arg1: 'Stokes_SLE_UzawaSolver', preconditioner: 'StiffnessMatrix', maxUzawaIterations: 'Iteration_Index', minUzawaIterations: 'Iteration_Index', tolerance: 'double', useAbsoluteTolerance: 'Bool', monitor: 'Bool') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_Init(arg1, preconditioner, maxUzawaIterations, minUzawaIterations, tolerance, useAbsoluteTolerance, monitor)
_Stokes_SLE_UzawaSolver_Init = _StgFEM._Stokes_SLE_UzawaSolver_Init

def Stokes_SLE_UzawaSolver_InitAll(solver: 'void *', preconditioner: 'StiffnessMatrix', maxUzawaIterations: 'Iteration_Index', minUzawaIterations: 'Iteration_Index', tolerance: 'double', useAbsoluteTolerance: 'Bool', monitor: 'Bool') -> "void":
    return _StgFEM.Stokes_SLE_UzawaSolver_InitAll(solver, preconditioner, maxUzawaIterations, minUzawaIterations, tolerance, useAbsoluteTolerance, monitor)
Stokes_SLE_UzawaSolver_InitAll = _StgFEM.Stokes_SLE_UzawaSolver_InitAll

def _Stokes_SLE_UzawaSolver_Delete(solver: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_Delete(solver)
_Stokes_SLE_UzawaSolver_Delete = _StgFEM._Stokes_SLE_UzawaSolver_Delete

def _Stokes_SLE_UzawaSolver_Print(solver: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_Print(solver, stream)
_Stokes_SLE_UzawaSolver_Print = _StgFEM._Stokes_SLE_UzawaSolver_Print

def _Stokes_SLE_UzawaSolver_Copy(stokesSleUzawaSolver: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._Stokes_SLE_UzawaSolver_Copy(stokesSleUzawaSolver, dest, deep, nameExt, ptrMap)
_Stokes_SLE_UzawaSolver_Copy = _StgFEM._Stokes_SLE_UzawaSolver_Copy

def _Stokes_SLE_UzawaSolver_Build(solver: 'void *', stokesSLE: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_Build(solver, stokesSLE)
_Stokes_SLE_UzawaSolver_Build = _StgFEM._Stokes_SLE_UzawaSolver_Build

def _Stokes_SLE_UzawaSolver_AssignFromXML(solver: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_AssignFromXML(solver, cf, data)
_Stokes_SLE_UzawaSolver_AssignFromXML = _StgFEM._Stokes_SLE_UzawaSolver_AssignFromXML

def _Stokes_SLE_UzawaSolver_Initialise(solver: 'void *', stokesSLE: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_Initialise(solver, stokesSLE)
_Stokes_SLE_UzawaSolver_Initialise = _StgFEM._Stokes_SLE_UzawaSolver_Initialise

def _Stokes_SLE_UzawaSolver_Execute(solver: 'void *', data: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_Execute(solver, data)
_Stokes_SLE_UzawaSolver_Execute = _StgFEM._Stokes_SLE_UzawaSolver_Execute

def _Stokes_SLE_UzawaSolver_Destroy(solver: 'void *', data: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_Destroy(solver, data)
_Stokes_SLE_UzawaSolver_Destroy = _StgFEM._Stokes_SLE_UzawaSolver_Destroy

def _Stokes_SLE_UzawaSolver_SolverSetup(stokesSle: 'void *', stokesSLE: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_SolverSetup(stokesSle, stokesSLE)
_Stokes_SLE_UzawaSolver_SolverSetup = _StgFEM._Stokes_SLE_UzawaSolver_SolverSetup

def _Stokes_SLE_UzawaSolver_Solve(solver: 'void *', stokesSLE: 'void *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_Solve(solver, stokesSLE)
_Stokes_SLE_UzawaSolver_Solve = _StgFEM._Stokes_SLE_UzawaSolver_Solve

def _Stokes_SLE_UzawaSolver_GetResidual(solver: 'void *', fv_I: 'Index') -> "Vec":
    return _StgFEM._Stokes_SLE_UzawaSolver_GetResidual(solver, fv_I)
_Stokes_SLE_UzawaSolver_GetResidual = _StgFEM._Stokes_SLE_UzawaSolver_GetResidual

def _Stokes_SLE_UzawaSolver_FormResidual(stokesSLE: 'void *', solver: 'void *', r: 'Vec') -> "PetscErrorCode":
    return _StgFEM._Stokes_SLE_UzawaSolver_FormResidual(stokesSLE, solver, r)
_Stokes_SLE_UzawaSolver_FormResidual = _StgFEM._Stokes_SLE_UzawaSolver_FormResidual

def _Stokes_SLE_UzawaSolver_GetRhs(stokesSLE: 'void *', solver: 'void *', rhs: 'Vec') -> "PetscErrorCode":
    return _StgFEM._Stokes_SLE_UzawaSolver_GetRhs(stokesSLE, solver, rhs)
_Stokes_SLE_UzawaSolver_GetRhs = _StgFEM._Stokes_SLE_UzawaSolver_GetRhs

def _Stokes_SLE_UzawaSolver_GetSolution(stokesSLE: 'void *', solver: 'void *', x: 'Vec *') -> "void":
    return _StgFEM._Stokes_SLE_UzawaSolver_GetSolution(stokesSLE, solver, x)
_Stokes_SLE_UzawaSolver_GetSolution = _StgFEM._Stokes_SLE_UzawaSolver_GetSolution
class UzawaPreconditionerTerm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.UzawaPreconditionerTerm__sizeOfSelf_get, _StgFEM.UzawaPreconditionerTerm__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.UzawaPreconditionerTerm__deleteSelf_get, _StgFEM.UzawaPreconditionerTerm__deleteSelf_set)
    type = _swig_property(_StgFEM.UzawaPreconditionerTerm_type_get, _StgFEM.UzawaPreconditionerTerm_type_set)
    nRefs = _swig_property(_StgFEM.UzawaPreconditionerTerm_nRefs_get, _StgFEM.UzawaPreconditionerTerm_nRefs_set)
    locked = _swig_property(_StgFEM.UzawaPreconditionerTerm_locked_get, _StgFEM.UzawaPreconditionerTerm_locked_set)
    _delete = _swig_property(_StgFEM.UzawaPreconditionerTerm__delete_get, _StgFEM.UzawaPreconditionerTerm__delete_set)
    _print = _swig_property(_StgFEM.UzawaPreconditionerTerm__print_get, _StgFEM.UzawaPreconditionerTerm__print_set)
    _copy = _swig_property(_StgFEM.UzawaPreconditionerTerm__copy_get, _StgFEM.UzawaPreconditionerTerm__copy_set)
    name = _swig_property(_StgFEM.UzawaPreconditionerTerm_name_get, _StgFEM.UzawaPreconditionerTerm_name_set)
    nameAllocationType = _swig_property(_StgFEM.UzawaPreconditionerTerm_nameAllocationType_get, _StgFEM.UzawaPreconditionerTerm_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.UzawaPreconditionerTerm__defaultConstructor_get, _StgFEM.UzawaPreconditionerTerm__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.UzawaPreconditionerTerm__construct_get, _StgFEM.UzawaPreconditionerTerm__construct_set)
    _build = _swig_property(_StgFEM.UzawaPreconditionerTerm__build_get, _StgFEM.UzawaPreconditionerTerm__build_set)
    _initialise = _swig_property(_StgFEM.UzawaPreconditionerTerm__initialise_get, _StgFEM.UzawaPreconditionerTerm__initialise_set)
    _execute = _swig_property(_StgFEM.UzawaPreconditionerTerm__execute_get, _StgFEM.UzawaPreconditionerTerm__execute_set)
    _destroy = _swig_property(_StgFEM.UzawaPreconditionerTerm__destroy_get, _StgFEM.UzawaPreconditionerTerm__destroy_set)
    isConstructed = _swig_property(_StgFEM.UzawaPreconditionerTerm_isConstructed_get, _StgFEM.UzawaPreconditionerTerm_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.UzawaPreconditionerTerm_isBuilt_get, _StgFEM.UzawaPreconditionerTerm_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.UzawaPreconditionerTerm_isInitialised_get, _StgFEM.UzawaPreconditionerTerm_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.UzawaPreconditionerTerm_hasExecuted_get, _StgFEM.UzawaPreconditionerTerm_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.UzawaPreconditionerTerm_isDestroyed_get, _StgFEM.UzawaPreconditionerTerm_isDestroyed_set)
    constructType = _swig_property(_StgFEM.UzawaPreconditionerTerm_constructType_get, _StgFEM.UzawaPreconditionerTerm_constructType_set)
    buildType = _swig_property(_StgFEM.UzawaPreconditionerTerm_buildType_get, _StgFEM.UzawaPreconditionerTerm_buildType_set)
    initialiseType = _swig_property(_StgFEM.UzawaPreconditionerTerm_initialiseType_get, _StgFEM.UzawaPreconditionerTerm_initialiseType_set)
    executeType = _swig_property(_StgFEM.UzawaPreconditionerTerm_executeType_get, _StgFEM.UzawaPreconditionerTerm_executeType_set)
    destroyType = _swig_property(_StgFEM.UzawaPreconditionerTerm_destroyType_get, _StgFEM.UzawaPreconditionerTerm_destroyType_set)
    context = _swig_property(_StgFEM.UzawaPreconditionerTerm_context_get, _StgFEM.UzawaPreconditionerTerm_context_set)
    _assembleElement = _swig_property(_StgFEM.UzawaPreconditionerTerm__assembleElement_get, _StgFEM.UzawaPreconditionerTerm__assembleElement_set)
    debug = _swig_property(_StgFEM.UzawaPreconditionerTerm_debug_get, _StgFEM.UzawaPreconditionerTerm_debug_set)
    integrationSwarm = _swig_property(_StgFEM.UzawaPreconditionerTerm_integrationSwarm_get, _StgFEM.UzawaPreconditionerTerm_integrationSwarm_set)
    extraInfo = _swig_property(_StgFEM.UzawaPreconditionerTerm_extraInfo_get, _StgFEM.UzawaPreconditionerTerm_extraInfo_set)
    stiffnessMatrix = _swig_property(_StgFEM.UzawaPreconditionerTerm_stiffnessMatrix_get, _StgFEM.UzawaPreconditionerTerm_stiffnessMatrix_set)
    GNx = _swig_property(_StgFEM.UzawaPreconditionerTerm_GNx_get, _StgFEM.UzawaPreconditionerTerm_GNx_set)
    N = _swig_property(_StgFEM.UzawaPreconditionerTerm_N_get, _StgFEM.UzawaPreconditionerTerm_N_set)
    max_nElNodes = _swig_property(_StgFEM.UzawaPreconditionerTerm_max_nElNodes_get, _StgFEM.UzawaPreconditionerTerm_max_nElNodes_set)

    def __init__(self):
        _StgFEM.UzawaPreconditionerTerm_swiginit(self, _StgFEM.new_UzawaPreconditionerTerm())
    __swig_destroy__ = _StgFEM.delete_UzawaPreconditionerTerm
UzawaPreconditionerTerm_swigregister = _StgFEM.UzawaPreconditionerTerm_swigregister
UzawaPreconditionerTerm_swigregister(UzawaPreconditionerTerm)
UzawaPreconditionerTerm_Type = cvar.UzawaPreconditionerTerm_Type


def UzawaPreconditionerTerm_New(name: 'Name', context: 'FiniteElementContext *', stiffnessMatrix: 'StiffnessMatrix', integrationSwarm: 'Swarm') -> "UzawaPreconditionerTerm *":
    return _StgFEM.UzawaPreconditionerTerm_New(name, context, stiffnessMatrix, integrationSwarm)
UzawaPreconditionerTerm_New = _StgFEM.UzawaPreconditionerTerm_New

def _UzawaPreconditionerTerm_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'StiffnessMatrixTerm_AssembleElementFunction *') -> "UzawaPreconditionerTerm *":
    return _StgFEM._UzawaPreconditionerTerm_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_UzawaPreconditionerTerm_New = _StgFEM._UzawaPreconditionerTerm_New

def _UzawaPreconditionerTerm_Init(matrixTerm: 'void *') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_Init(matrixTerm)
_UzawaPreconditionerTerm_Init = _StgFEM._UzawaPreconditionerTerm_Init

def _UzawaPreconditionerTerm_Delete(matrixTerm: 'void *') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_Delete(matrixTerm)
_UzawaPreconditionerTerm_Delete = _StgFEM._UzawaPreconditionerTerm_Delete

def _UzawaPreconditionerTerm_Print(matrixTerm: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_Print(matrixTerm, stream)
_UzawaPreconditionerTerm_Print = _StgFEM._UzawaPreconditionerTerm_Print

def _UzawaPreconditionerTerm_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._UzawaPreconditionerTerm_DefaultNew(name)
_UzawaPreconditionerTerm_DefaultNew = _StgFEM._UzawaPreconditionerTerm_DefaultNew

def _UzawaPreconditionerTerm_AssignFromXML(matrixTerm: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_AssignFromXML(matrixTerm, cf, data)
_UzawaPreconditionerTerm_AssignFromXML = _StgFEM._UzawaPreconditionerTerm_AssignFromXML

def _UzawaPreconditionerTerm_Build(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_Build(matrixTerm, data)
_UzawaPreconditionerTerm_Build = _StgFEM._UzawaPreconditionerTerm_Build

def _UzawaPreconditionerTerm_Initialise(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_Initialise(matrixTerm, data)
_UzawaPreconditionerTerm_Initialise = _StgFEM._UzawaPreconditionerTerm_Initialise

def _UzawaPreconditionerTerm_Execute(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_Execute(matrixTerm, data)
_UzawaPreconditionerTerm_Execute = _StgFEM._UzawaPreconditionerTerm_Execute

def _UzawaPreconditionerTerm_Destroy(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_Destroy(matrixTerm, data)
_UzawaPreconditionerTerm_Destroy = _StgFEM._UzawaPreconditionerTerm_Destroy

def _UzawaPreconditionerTerm_AssembleElement(matrixTerm: 'void *', stiffnessMatrix: 'StiffnessMatrix', lElement_I: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMat: 'double **') -> "void":
    return _StgFEM._UzawaPreconditionerTerm_AssembleElement(matrixTerm, stiffnessMatrix, lElement_I, sle, context, elStiffMat)
_UzawaPreconditionerTerm_AssembleElement = _StgFEM._UzawaPreconditionerTerm_AssembleElement
class DivergenceMatrixTerm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.DivergenceMatrixTerm__sizeOfSelf_get, _StgFEM.DivergenceMatrixTerm__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.DivergenceMatrixTerm__deleteSelf_get, _StgFEM.DivergenceMatrixTerm__deleteSelf_set)
    type = _swig_property(_StgFEM.DivergenceMatrixTerm_type_get, _StgFEM.DivergenceMatrixTerm_type_set)
    nRefs = _swig_property(_StgFEM.DivergenceMatrixTerm_nRefs_get, _StgFEM.DivergenceMatrixTerm_nRefs_set)
    locked = _swig_property(_StgFEM.DivergenceMatrixTerm_locked_get, _StgFEM.DivergenceMatrixTerm_locked_set)
    _delete = _swig_property(_StgFEM.DivergenceMatrixTerm__delete_get, _StgFEM.DivergenceMatrixTerm__delete_set)
    _print = _swig_property(_StgFEM.DivergenceMatrixTerm__print_get, _StgFEM.DivergenceMatrixTerm__print_set)
    _copy = _swig_property(_StgFEM.DivergenceMatrixTerm__copy_get, _StgFEM.DivergenceMatrixTerm__copy_set)
    name = _swig_property(_StgFEM.DivergenceMatrixTerm_name_get, _StgFEM.DivergenceMatrixTerm_name_set)
    nameAllocationType = _swig_property(_StgFEM.DivergenceMatrixTerm_nameAllocationType_get, _StgFEM.DivergenceMatrixTerm_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.DivergenceMatrixTerm__defaultConstructor_get, _StgFEM.DivergenceMatrixTerm__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.DivergenceMatrixTerm__construct_get, _StgFEM.DivergenceMatrixTerm__construct_set)
    _build = _swig_property(_StgFEM.DivergenceMatrixTerm__build_get, _StgFEM.DivergenceMatrixTerm__build_set)
    _initialise = _swig_property(_StgFEM.DivergenceMatrixTerm__initialise_get, _StgFEM.DivergenceMatrixTerm__initialise_set)
    _execute = _swig_property(_StgFEM.DivergenceMatrixTerm__execute_get, _StgFEM.DivergenceMatrixTerm__execute_set)
    _destroy = _swig_property(_StgFEM.DivergenceMatrixTerm__destroy_get, _StgFEM.DivergenceMatrixTerm__destroy_set)
    isConstructed = _swig_property(_StgFEM.DivergenceMatrixTerm_isConstructed_get, _StgFEM.DivergenceMatrixTerm_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.DivergenceMatrixTerm_isBuilt_get, _StgFEM.DivergenceMatrixTerm_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.DivergenceMatrixTerm_isInitialised_get, _StgFEM.DivergenceMatrixTerm_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.DivergenceMatrixTerm_hasExecuted_get, _StgFEM.DivergenceMatrixTerm_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.DivergenceMatrixTerm_isDestroyed_get, _StgFEM.DivergenceMatrixTerm_isDestroyed_set)
    constructType = _swig_property(_StgFEM.DivergenceMatrixTerm_constructType_get, _StgFEM.DivergenceMatrixTerm_constructType_set)
    buildType = _swig_property(_StgFEM.DivergenceMatrixTerm_buildType_get, _StgFEM.DivergenceMatrixTerm_buildType_set)
    initialiseType = _swig_property(_StgFEM.DivergenceMatrixTerm_initialiseType_get, _StgFEM.DivergenceMatrixTerm_initialiseType_set)
    executeType = _swig_property(_StgFEM.DivergenceMatrixTerm_executeType_get, _StgFEM.DivergenceMatrixTerm_executeType_set)
    destroyType = _swig_property(_StgFEM.DivergenceMatrixTerm_destroyType_get, _StgFEM.DivergenceMatrixTerm_destroyType_set)
    context = _swig_property(_StgFEM.DivergenceMatrixTerm_context_get, _StgFEM.DivergenceMatrixTerm_context_set)
    _assembleElement = _swig_property(_StgFEM.DivergenceMatrixTerm__assembleElement_get, _StgFEM.DivergenceMatrixTerm__assembleElement_set)
    debug = _swig_property(_StgFEM.DivergenceMatrixTerm_debug_get, _StgFEM.DivergenceMatrixTerm_debug_set)
    integrationSwarm = _swig_property(_StgFEM.DivergenceMatrixTerm_integrationSwarm_get, _StgFEM.DivergenceMatrixTerm_integrationSwarm_set)
    extraInfo = _swig_property(_StgFEM.DivergenceMatrixTerm_extraInfo_get, _StgFEM.DivergenceMatrixTerm_extraInfo_set)
    stiffnessMatrix = _swig_property(_StgFEM.DivergenceMatrixTerm_stiffnessMatrix_get, _StgFEM.DivergenceMatrixTerm_stiffnessMatrix_set)
    GNx = _swig_property(_StgFEM.DivergenceMatrixTerm_GNx_get, _StgFEM.DivergenceMatrixTerm_GNx_set)
    N = _swig_property(_StgFEM.DivergenceMatrixTerm_N_get, _StgFEM.DivergenceMatrixTerm_N_set)
    max_nElNodes = _swig_property(_StgFEM.DivergenceMatrixTerm_max_nElNodes_get, _StgFEM.DivergenceMatrixTerm_max_nElNodes_set)
    max_nElNodes_row = _swig_property(_StgFEM.DivergenceMatrixTerm_max_nElNodes_row_get, _StgFEM.DivergenceMatrixTerm_max_nElNodes_row_set)
    Ni_row = _swig_property(_StgFEM.DivergenceMatrixTerm_Ni_row_get, _StgFEM.DivergenceMatrixTerm_Ni_row_set)

    def __init__(self):
        _StgFEM.DivergenceMatrixTerm_swiginit(self, _StgFEM.new_DivergenceMatrixTerm())
    __swig_destroy__ = _StgFEM.delete_DivergenceMatrixTerm
DivergenceMatrixTerm_swigregister = _StgFEM.DivergenceMatrixTerm_swigregister
DivergenceMatrixTerm_swigregister(DivergenceMatrixTerm)
DivergenceMatrixTerm_Type = cvar.DivergenceMatrixTerm_Type


def DivergenceMatrixTerm_New(name: 'Name', context: 'FiniteElementContext *', stiffnessMatrix: 'StiffnessMatrix', integrationSwarm: 'Swarm') -> "DivergenceMatrixTerm *":
    return _StgFEM.DivergenceMatrixTerm_New(name, context, stiffnessMatrix, integrationSwarm)
DivergenceMatrixTerm_New = _StgFEM.DivergenceMatrixTerm_New

def _DivergenceMatrixTerm_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'StiffnessMatrixTerm_AssembleElementFunction *') -> "DivergenceMatrixTerm *":
    return _StgFEM._DivergenceMatrixTerm_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_DivergenceMatrixTerm_New = _StgFEM._DivergenceMatrixTerm_New

def _DivergenceMatrixTerm_Init(matrixTerm: 'void *') -> "void":
    return _StgFEM._DivergenceMatrixTerm_Init(matrixTerm)
_DivergenceMatrixTerm_Init = _StgFEM._DivergenceMatrixTerm_Init

def _DivergenceMatrixTerm_Delete(matrixTerm: 'void *') -> "void":
    return _StgFEM._DivergenceMatrixTerm_Delete(matrixTerm)
_DivergenceMatrixTerm_Delete = _StgFEM._DivergenceMatrixTerm_Delete

def _DivergenceMatrixTerm_Print(matrixTerm: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._DivergenceMatrixTerm_Print(matrixTerm, stream)
_DivergenceMatrixTerm_Print = _StgFEM._DivergenceMatrixTerm_Print

def _DivergenceMatrixTerm_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._DivergenceMatrixTerm_DefaultNew(name)
_DivergenceMatrixTerm_DefaultNew = _StgFEM._DivergenceMatrixTerm_DefaultNew

def _DivergenceMatrixTerm_AssignFromXML(matrixTerm: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._DivergenceMatrixTerm_AssignFromXML(matrixTerm, cf, data)
_DivergenceMatrixTerm_AssignFromXML = _StgFEM._DivergenceMatrixTerm_AssignFromXML

def _DivergenceMatrixTerm_Build(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._DivergenceMatrixTerm_Build(matrixTerm, data)
_DivergenceMatrixTerm_Build = _StgFEM._DivergenceMatrixTerm_Build

def _DivergenceMatrixTerm_Initialise(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._DivergenceMatrixTerm_Initialise(matrixTerm, data)
_DivergenceMatrixTerm_Initialise = _StgFEM._DivergenceMatrixTerm_Initialise

def _DivergenceMatrixTerm_Execute(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._DivergenceMatrixTerm_Execute(matrixTerm, data)
_DivergenceMatrixTerm_Execute = _StgFEM._DivergenceMatrixTerm_Execute

def _DivergenceMatrixTerm_Destroy(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._DivergenceMatrixTerm_Destroy(matrixTerm, data)
_DivergenceMatrixTerm_Destroy = _StgFEM._DivergenceMatrixTerm_Destroy

def _DivergenceMatrixTerm_AssembleElement(matrixTerm: 'void *', stiffnessMatrix: 'StiffnessMatrix', lElement_I: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMat: 'double **') -> "void":
    return _StgFEM._DivergenceMatrixTerm_AssembleElement(matrixTerm, stiffnessMatrix, lElement_I, sle, context, elStiffMat)
_DivergenceMatrixTerm_AssembleElement = _StgFEM._DivergenceMatrixTerm_AssembleElement
class GradientStiffnessMatrixTerm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__sizeOfSelf_get, _StgFEM.GradientStiffnessMatrixTerm__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__deleteSelf_get, _StgFEM.GradientStiffnessMatrixTerm__deleteSelf_set)
    type = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_type_get, _StgFEM.GradientStiffnessMatrixTerm_type_set)
    nRefs = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_nRefs_get, _StgFEM.GradientStiffnessMatrixTerm_nRefs_set)
    locked = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_locked_get, _StgFEM.GradientStiffnessMatrixTerm_locked_set)
    _delete = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__delete_get, _StgFEM.GradientStiffnessMatrixTerm__delete_set)
    _print = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__print_get, _StgFEM.GradientStiffnessMatrixTerm__print_set)
    _copy = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__copy_get, _StgFEM.GradientStiffnessMatrixTerm__copy_set)
    name = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_name_get, _StgFEM.GradientStiffnessMatrixTerm_name_set)
    nameAllocationType = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_nameAllocationType_get, _StgFEM.GradientStiffnessMatrixTerm_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__defaultConstructor_get, _StgFEM.GradientStiffnessMatrixTerm__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__construct_get, _StgFEM.GradientStiffnessMatrixTerm__construct_set)
    _build = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__build_get, _StgFEM.GradientStiffnessMatrixTerm__build_set)
    _initialise = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__initialise_get, _StgFEM.GradientStiffnessMatrixTerm__initialise_set)
    _execute = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__execute_get, _StgFEM.GradientStiffnessMatrixTerm__execute_set)
    _destroy = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__destroy_get, _StgFEM.GradientStiffnessMatrixTerm__destroy_set)
    isConstructed = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_isConstructed_get, _StgFEM.GradientStiffnessMatrixTerm_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_isBuilt_get, _StgFEM.GradientStiffnessMatrixTerm_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_isInitialised_get, _StgFEM.GradientStiffnessMatrixTerm_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_hasExecuted_get, _StgFEM.GradientStiffnessMatrixTerm_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_isDestroyed_get, _StgFEM.GradientStiffnessMatrixTerm_isDestroyed_set)
    constructType = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_constructType_get, _StgFEM.GradientStiffnessMatrixTerm_constructType_set)
    buildType = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_buildType_get, _StgFEM.GradientStiffnessMatrixTerm_buildType_set)
    initialiseType = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_initialiseType_get, _StgFEM.GradientStiffnessMatrixTerm_initialiseType_set)
    executeType = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_executeType_get, _StgFEM.GradientStiffnessMatrixTerm_executeType_set)
    destroyType = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_destroyType_get, _StgFEM.GradientStiffnessMatrixTerm_destroyType_set)
    context = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_context_get, _StgFEM.GradientStiffnessMatrixTerm_context_set)
    _assembleElement = _swig_property(_StgFEM.GradientStiffnessMatrixTerm__assembleElement_get, _StgFEM.GradientStiffnessMatrixTerm__assembleElement_set)
    debug = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_debug_get, _StgFEM.GradientStiffnessMatrixTerm_debug_set)
    integrationSwarm = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_integrationSwarm_get, _StgFEM.GradientStiffnessMatrixTerm_integrationSwarm_set)
    extraInfo = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_extraInfo_get, _StgFEM.GradientStiffnessMatrixTerm_extraInfo_set)
    stiffnessMatrix = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_stiffnessMatrix_get, _StgFEM.GradientStiffnessMatrixTerm_stiffnessMatrix_set)
    GNx = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_GNx_get, _StgFEM.GradientStiffnessMatrixTerm_GNx_set)
    N = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_N_get, _StgFEM.GradientStiffnessMatrixTerm_N_set)
    max_nElNodes = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_max_nElNodes_get, _StgFEM.GradientStiffnessMatrixTerm_max_nElNodes_set)
    max_nElNodes_col = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_max_nElNodes_col_get, _StgFEM.GradientStiffnessMatrixTerm_max_nElNodes_col_set)
    Ni_col = _swig_property(_StgFEM.GradientStiffnessMatrixTerm_Ni_col_get, _StgFEM.GradientStiffnessMatrixTerm_Ni_col_set)

    def __init__(self):
        _StgFEM.GradientStiffnessMatrixTerm_swiginit(self, _StgFEM.new_GradientStiffnessMatrixTerm())
    __swig_destroy__ = _StgFEM.delete_GradientStiffnessMatrixTerm
GradientStiffnessMatrixTerm_swigregister = _StgFEM.GradientStiffnessMatrixTerm_swigregister
GradientStiffnessMatrixTerm_swigregister(GradientStiffnessMatrixTerm)
GradientStiffnessMatrixTerm_Type = cvar.GradientStiffnessMatrixTerm_Type


def GradientStiffnessMatrixTerm_New(name: 'Name', context: 'FiniteElementContext *', stiffnessMatrix: 'StiffnessMatrix', integrationSwarm: 'Swarm') -> "GradientStiffnessMatrixTerm *":
    return _StgFEM.GradientStiffnessMatrixTerm_New(name, context, stiffnessMatrix, integrationSwarm)
GradientStiffnessMatrixTerm_New = _StgFEM.GradientStiffnessMatrixTerm_New

def _GradientStiffnessMatrixTerm_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _assembleElement: 'StiffnessMatrixTerm_AssembleElementFunction *') -> "GradientStiffnessMatrixTerm *":
    return _StgFEM._GradientStiffnessMatrixTerm_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _assembleElement)
_GradientStiffnessMatrixTerm_New = _StgFEM._GradientStiffnessMatrixTerm_New

def _GradientStiffnessMatrixTerm_Init(matrixTerm: 'void *') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_Init(matrixTerm)
_GradientStiffnessMatrixTerm_Init = _StgFEM._GradientStiffnessMatrixTerm_Init

def _GradientStiffnessMatrixTerm_Delete(matrixTerm: 'void *') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_Delete(matrixTerm)
_GradientStiffnessMatrixTerm_Delete = _StgFEM._GradientStiffnessMatrixTerm_Delete

def _GradientStiffnessMatrixTerm_Print(matrixTerm: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_Print(matrixTerm, stream)
_GradientStiffnessMatrixTerm_Print = _StgFEM._GradientStiffnessMatrixTerm_Print

def _GradientStiffnessMatrixTerm_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._GradientStiffnessMatrixTerm_DefaultNew(name)
_GradientStiffnessMatrixTerm_DefaultNew = _StgFEM._GradientStiffnessMatrixTerm_DefaultNew

def _GradientStiffnessMatrixTerm_AssignFromXML(matrixTerm: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_AssignFromXML(matrixTerm, cf, data)
_GradientStiffnessMatrixTerm_AssignFromXML = _StgFEM._GradientStiffnessMatrixTerm_AssignFromXML

def _GradientStiffnessMatrixTerm_Build(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_Build(matrixTerm, data)
_GradientStiffnessMatrixTerm_Build = _StgFEM._GradientStiffnessMatrixTerm_Build

def _GradientStiffnessMatrixTerm_Initialise(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_Initialise(matrixTerm, data)
_GradientStiffnessMatrixTerm_Initialise = _StgFEM._GradientStiffnessMatrixTerm_Initialise

def _GradientStiffnessMatrixTerm_Execute(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_Execute(matrixTerm, data)
_GradientStiffnessMatrixTerm_Execute = _StgFEM._GradientStiffnessMatrixTerm_Execute

def _GradientStiffnessMatrixTerm_Destroy(matrixTerm: 'void *', data: 'void *') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_Destroy(matrixTerm, data)
_GradientStiffnessMatrixTerm_Destroy = _StgFEM._GradientStiffnessMatrixTerm_Destroy

def _GradientStiffnessMatrixTerm_AssembleElement(matrixTerm: 'void *', stiffnessMatrix: 'StiffnessMatrix', lElement_I: 'Element_LocalIndex', sle: 'SystemLinearEquations', context: 'FiniteElementContext *', elStiffMat: 'double **') -> "void":
    return _StgFEM._GradientStiffnessMatrixTerm_AssembleElement(matrixTerm, stiffnessMatrix, lElement_I, sle, context, elStiffMat)
_GradientStiffnessMatrixTerm_AssembleElement = _StgFEM._GradientStiffnessMatrixTerm_AssembleElement
class IrregularMeshParticleLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.IrregularMeshParticleLayout__sizeOfSelf_get, _StgFEM.IrregularMeshParticleLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.IrregularMeshParticleLayout__deleteSelf_get, _StgFEM.IrregularMeshParticleLayout__deleteSelf_set)
    type = _swig_property(_StgFEM.IrregularMeshParticleLayout_type_get, _StgFEM.IrregularMeshParticleLayout_type_set)
    nRefs = _swig_property(_StgFEM.IrregularMeshParticleLayout_nRefs_get, _StgFEM.IrregularMeshParticleLayout_nRefs_set)
    locked = _swig_property(_StgFEM.IrregularMeshParticleLayout_locked_get, _StgFEM.IrregularMeshParticleLayout_locked_set)
    _delete = _swig_property(_StgFEM.IrregularMeshParticleLayout__delete_get, _StgFEM.IrregularMeshParticleLayout__delete_set)
    _print = _swig_property(_StgFEM.IrregularMeshParticleLayout__print_get, _StgFEM.IrregularMeshParticleLayout__print_set)
    _copy = _swig_property(_StgFEM.IrregularMeshParticleLayout__copy_get, _StgFEM.IrregularMeshParticleLayout__copy_set)
    name = _swig_property(_StgFEM.IrregularMeshParticleLayout_name_get, _StgFEM.IrregularMeshParticleLayout_name_set)
    nameAllocationType = _swig_property(_StgFEM.IrregularMeshParticleLayout_nameAllocationType_get, _StgFEM.IrregularMeshParticleLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.IrregularMeshParticleLayout__defaultConstructor_get, _StgFEM.IrregularMeshParticleLayout__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.IrregularMeshParticleLayout__construct_get, _StgFEM.IrregularMeshParticleLayout__construct_set)
    _build = _swig_property(_StgFEM.IrregularMeshParticleLayout__build_get, _StgFEM.IrregularMeshParticleLayout__build_set)
    _initialise = _swig_property(_StgFEM.IrregularMeshParticleLayout__initialise_get, _StgFEM.IrregularMeshParticleLayout__initialise_set)
    _execute = _swig_property(_StgFEM.IrregularMeshParticleLayout__execute_get, _StgFEM.IrregularMeshParticleLayout__execute_set)
    _destroy = _swig_property(_StgFEM.IrregularMeshParticleLayout__destroy_get, _StgFEM.IrregularMeshParticleLayout__destroy_set)
    isConstructed = _swig_property(_StgFEM.IrregularMeshParticleLayout_isConstructed_get, _StgFEM.IrregularMeshParticleLayout_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.IrregularMeshParticleLayout_isBuilt_get, _StgFEM.IrregularMeshParticleLayout_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.IrregularMeshParticleLayout_isInitialised_get, _StgFEM.IrregularMeshParticleLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.IrregularMeshParticleLayout_hasExecuted_get, _StgFEM.IrregularMeshParticleLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.IrregularMeshParticleLayout_isDestroyed_get, _StgFEM.IrregularMeshParticleLayout_isDestroyed_set)
    constructType = _swig_property(_StgFEM.IrregularMeshParticleLayout_constructType_get, _StgFEM.IrregularMeshParticleLayout_constructType_set)
    buildType = _swig_property(_StgFEM.IrregularMeshParticleLayout_buildType_get, _StgFEM.IrregularMeshParticleLayout_buildType_set)
    initialiseType = _swig_property(_StgFEM.IrregularMeshParticleLayout_initialiseType_get, _StgFEM.IrregularMeshParticleLayout_initialiseType_set)
    executeType = _swig_property(_StgFEM.IrregularMeshParticleLayout_executeType_get, _StgFEM.IrregularMeshParticleLayout_executeType_set)
    destroyType = _swig_property(_StgFEM.IrregularMeshParticleLayout_destroyType_get, _StgFEM.IrregularMeshParticleLayout_destroyType_set)
    context = _swig_property(_StgFEM.IrregularMeshParticleLayout_context_get, _StgFEM.IrregularMeshParticleLayout_context_set)
    _setInitialCounts = _swig_property(_StgFEM.IrregularMeshParticleLayout__setInitialCounts_get, _StgFEM.IrregularMeshParticleLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgFEM.IrregularMeshParticleLayout__initialiseParticles_get, _StgFEM.IrregularMeshParticleLayout__initialiseParticles_set)
    debug = _swig_property(_StgFEM.IrregularMeshParticleLayout_debug_get, _StgFEM.IrregularMeshParticleLayout_debug_set)
    coordSystem = _swig_property(_StgFEM.IrregularMeshParticleLayout_coordSystem_get, _StgFEM.IrregularMeshParticleLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgFEM.IrregularMeshParticleLayout_weightsInitialisedAtStartup_get, _StgFEM.IrregularMeshParticleLayout_weightsInitialisedAtStartup_set)
    _initialCount = _swig_property(_StgFEM.IrregularMeshParticleLayout__initialCount_get, _StgFEM.IrregularMeshParticleLayout__initialCount_set)
    _initialiseParticlesOfCell = _swig_property(_StgFEM.IrregularMeshParticleLayout__initialiseParticlesOfCell_get, _StgFEM.IrregularMeshParticleLayout__initialiseParticlesOfCell_set)
    dim = _swig_property(_StgFEM.IrregularMeshParticleLayout_dim_get, _StgFEM.IrregularMeshParticleLayout_dim_set)
    sobolGenerator = _swig_property(_StgFEM.IrregularMeshParticleLayout_sobolGenerator_get, _StgFEM.IrregularMeshParticleLayout_sobolGenerator_set)
    cellParticleCount = _swig_property(_StgFEM.IrregularMeshParticleLayout_cellParticleCount_get, _StgFEM.IrregularMeshParticleLayout_cellParticleCount_set)
    feMesh = _swig_property(_StgFEM.IrregularMeshParticleLayout_feMesh_get, _StgFEM.IrregularMeshParticleLayout_feMesh_set)

    def __init__(self):
        _StgFEM.IrregularMeshParticleLayout_swiginit(self, _StgFEM.new_IrregularMeshParticleLayout())
    __swig_destroy__ = _StgFEM.delete_IrregularMeshParticleLayout
IrregularMeshParticleLayout_swigregister = _StgFEM.IrregularMeshParticleLayout_swigregister
IrregularMeshParticleLayout_swigregister(IrregularMeshParticleLayout)
IrregularMeshParticleLayout_Type = cvar.IrregularMeshParticleLayout_Type


def IrregularMeshParticleLayout_New(name: 'Name', dim: 'Dimension_Index', cellParticleCount: 'unsigned int') -> "IrregularMeshParticleLayout *":
    return _StgFEM.IrregularMeshParticleLayout_New(name, dim, cellParticleCount)
IrregularMeshParticleLayout_New = _StgFEM.IrregularMeshParticleLayout_New

def _IrregularMeshParticleLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', _initialCount: 'PerCellParticleLayout_InitialCountFunction *', _initialiseParticlesOfCell: 'PerCellParticleLayout_InitialiseParticlesOfCellFunction *', dim: 'Dimension_Index', cellParticleCount: 'unsigned int') -> "IrregularMeshParticleLayout *":
    return _StgFEM._IrregularMeshParticleLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup, _initialCount, _initialiseParticlesOfCell, dim, cellParticleCount)
_IrregularMeshParticleLayout_New = _StgFEM._IrregularMeshParticleLayout_New

def _IrregularMeshParticleLayout_Init(perCellLayout: 'void *', feMesh: 'FeMesh', dim: 'Dimension_Index', cellParticleCount: 'unsigned int') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_Init(perCellLayout, feMesh, dim, cellParticleCount)
_IrregularMeshParticleLayout_Init = _StgFEM._IrregularMeshParticleLayout_Init

def _IrregularMeshParticleLayout_Delete(perCellLayout: 'void *') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_Delete(perCellLayout)
_IrregularMeshParticleLayout_Delete = _StgFEM._IrregularMeshParticleLayout_Delete

def _IrregularMeshParticleLayout_Print(perCellLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_Print(perCellLayout, stream)
_IrregularMeshParticleLayout_Print = _StgFEM._IrregularMeshParticleLayout_Print

def _IrregularMeshParticleLayout_Copy(perCellLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._IrregularMeshParticleLayout_Copy(perCellLayout, dest, deep, nameExt, ptrMap)
_IrregularMeshParticleLayout_Copy = _StgFEM._IrregularMeshParticleLayout_Copy

def _IrregularMeshParticleLayout_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._IrregularMeshParticleLayout_DefaultNew(name)
_IrregularMeshParticleLayout_DefaultNew = _StgFEM._IrregularMeshParticleLayout_DefaultNew

def _IrregularMeshParticleLayout_AssignFromXML(perCellLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_AssignFromXML(perCellLayout, cf, data)
_IrregularMeshParticleLayout_AssignFromXML = _StgFEM._IrregularMeshParticleLayout_AssignFromXML

def _IrregularMeshParticleLayout_Build(perCellLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_Build(perCellLayout, data)
_IrregularMeshParticleLayout_Build = _StgFEM._IrregularMeshParticleLayout_Build

def _IrregularMeshParticleLayout_Initialise(perCellLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_Initialise(perCellLayout, data)
_IrregularMeshParticleLayout_Initialise = _StgFEM._IrregularMeshParticleLayout_Initialise

def _IrregularMeshParticleLayout_Execute(perCellLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_Execute(perCellLayout, data)
_IrregularMeshParticleLayout_Execute = _StgFEM._IrregularMeshParticleLayout_Execute

def _IrregularMeshParticleLayout_Destroy(perCellLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_Destroy(perCellLayout, data)
_IrregularMeshParticleLayout_Destroy = _StgFEM._IrregularMeshParticleLayout_Destroy

def _IrregularMeshParticleLayout_InitialCount(perCellLayout: 'void *', cellLayout: 'void *', cell_I: 'Cell_Index') -> "Particle_InCellIndex":
    return _StgFEM._IrregularMeshParticleLayout_InitialCount(perCellLayout, cellLayout, cell_I)
_IrregularMeshParticleLayout_InitialCount = _StgFEM._IrregularMeshParticleLayout_InitialCount

def _IrregularMeshParticleLayout_InitialiseParticles(perCellLayout: 'void *', swarm: 'void *') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_InitialiseParticles(perCellLayout, swarm)
_IrregularMeshParticleLayout_InitialiseParticles = _StgFEM._IrregularMeshParticleLayout_InitialiseParticles

def _IrregularMeshParticleLayout_InitialiseParticlesOfCell(meshParticleLayout: 'void *', _swarm: 'void *', cell_I: 'Cell_Index') -> "void":
    return _StgFEM._IrregularMeshParticleLayout_InitialiseParticlesOfCell(meshParticleLayout, _swarm, cell_I)
_IrregularMeshParticleLayout_InitialiseParticlesOfCell = _StgFEM._IrregularMeshParticleLayout_InitialiseParticlesOfCell
class SemiLagrangianIntegrator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.SemiLagrangianIntegrator__sizeOfSelf_get, _StgFEM.SemiLagrangianIntegrator__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.SemiLagrangianIntegrator__deleteSelf_get, _StgFEM.SemiLagrangianIntegrator__deleteSelf_set)
    type = _swig_property(_StgFEM.SemiLagrangianIntegrator_type_get, _StgFEM.SemiLagrangianIntegrator_type_set)
    nRefs = _swig_property(_StgFEM.SemiLagrangianIntegrator_nRefs_get, _StgFEM.SemiLagrangianIntegrator_nRefs_set)
    locked = _swig_property(_StgFEM.SemiLagrangianIntegrator_locked_get, _StgFEM.SemiLagrangianIntegrator_locked_set)
    _delete = _swig_property(_StgFEM.SemiLagrangianIntegrator__delete_get, _StgFEM.SemiLagrangianIntegrator__delete_set)
    _print = _swig_property(_StgFEM.SemiLagrangianIntegrator__print_get, _StgFEM.SemiLagrangianIntegrator__print_set)
    _copy = _swig_property(_StgFEM.SemiLagrangianIntegrator__copy_get, _StgFEM.SemiLagrangianIntegrator__copy_set)
    name = _swig_property(_StgFEM.SemiLagrangianIntegrator_name_get, _StgFEM.SemiLagrangianIntegrator_name_set)
    nameAllocationType = _swig_property(_StgFEM.SemiLagrangianIntegrator_nameAllocationType_get, _StgFEM.SemiLagrangianIntegrator_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.SemiLagrangianIntegrator__defaultConstructor_get, _StgFEM.SemiLagrangianIntegrator__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.SemiLagrangianIntegrator__construct_get, _StgFEM.SemiLagrangianIntegrator__construct_set)
    _build = _swig_property(_StgFEM.SemiLagrangianIntegrator__build_get, _StgFEM.SemiLagrangianIntegrator__build_set)
    _initialise = _swig_property(_StgFEM.SemiLagrangianIntegrator__initialise_get, _StgFEM.SemiLagrangianIntegrator__initialise_set)
    _execute = _swig_property(_StgFEM.SemiLagrangianIntegrator__execute_get, _StgFEM.SemiLagrangianIntegrator__execute_set)
    _destroy = _swig_property(_StgFEM.SemiLagrangianIntegrator__destroy_get, _StgFEM.SemiLagrangianIntegrator__destroy_set)
    isConstructed = _swig_property(_StgFEM.SemiLagrangianIntegrator_isConstructed_get, _StgFEM.SemiLagrangianIntegrator_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.SemiLagrangianIntegrator_isBuilt_get, _StgFEM.SemiLagrangianIntegrator_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.SemiLagrangianIntegrator_isInitialised_get, _StgFEM.SemiLagrangianIntegrator_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.SemiLagrangianIntegrator_hasExecuted_get, _StgFEM.SemiLagrangianIntegrator_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.SemiLagrangianIntegrator_isDestroyed_get, _StgFEM.SemiLagrangianIntegrator_isDestroyed_set)
    constructType = _swig_property(_StgFEM.SemiLagrangianIntegrator_constructType_get, _StgFEM.SemiLagrangianIntegrator_constructType_set)
    buildType = _swig_property(_StgFEM.SemiLagrangianIntegrator_buildType_get, _StgFEM.SemiLagrangianIntegrator_buildType_set)
    initialiseType = _swig_property(_StgFEM.SemiLagrangianIntegrator_initialiseType_get, _StgFEM.SemiLagrangianIntegrator_initialiseType_set)
    executeType = _swig_property(_StgFEM.SemiLagrangianIntegrator_executeType_get, _StgFEM.SemiLagrangianIntegrator_executeType_set)
    destroyType = _swig_property(_StgFEM.SemiLagrangianIntegrator_destroyType_get, _StgFEM.SemiLagrangianIntegrator_destroyType_set)
    velocityField = _swig_property(_StgFEM.SemiLagrangianIntegrator_velocityField_get, _StgFEM.SemiLagrangianIntegrator_velocityField_set)
    variableList = _swig_property(_StgFEM.SemiLagrangianIntegrator_variableList_get, _StgFEM.SemiLagrangianIntegrator_variableList_set)
    varStarList = _swig_property(_StgFEM.SemiLagrangianIntegrator_varStarList_get, _StgFEM.SemiLagrangianIntegrator_varStarList_set)
    varOldList = _swig_property(_StgFEM.SemiLagrangianIntegrator_varOldList_get, _StgFEM.SemiLagrangianIntegrator_varOldList_set)
    context = _swig_property(_StgFEM.SemiLagrangianIntegrator_context_get, _StgFEM.SemiLagrangianIntegrator_context_set)
    advectedField = _swig_property(_StgFEM.SemiLagrangianIntegrator_advectedField_get, _StgFEM.SemiLagrangianIntegrator_advectedField_set)
    prevVelField = _swig_property(_StgFEM.SemiLagrangianIntegrator_prevVelField_get, _StgFEM.SemiLagrangianIntegrator_prevVelField_set)

    def __init__(self):
        _StgFEM.SemiLagrangianIntegrator_swiginit(self, _StgFEM.new_SemiLagrangianIntegrator())
    __swig_destroy__ = _StgFEM.delete_SemiLagrangianIntegrator
SemiLagrangianIntegrator_swigregister = _StgFEM.SemiLagrangianIntegrator_swigregister
SemiLagrangianIntegrator_swigregister(SemiLagrangianIntegrator)
SemiLagrangianIntegrator_Type = cvar.SemiLagrangianIntegrator_Type


def _SemiLagrangianIntegrator_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._SemiLagrangianIntegrator_DefaultNew(name)
_SemiLagrangianIntegrator_DefaultNew = _StgFEM._SemiLagrangianIntegrator_DefaultNew

def SemiLagrangianIntegrator_BuildStaticStencils(stencilField: 'FeVariable') -> "void":
    return _StgFEM.SemiLagrangianIntegrator_BuildStaticStencils(stencilField)
SemiLagrangianIntegrator_BuildStaticStencils = _StgFEM.SemiLagrangianIntegrator_BuildStaticStencils

def BicubicInterpolatorNew(feVariable: 'FeVariable', stencilField: 'FeVariable', position: 'double *', sizes: 'unsigned int *', result: 'double *') -> "Bool":
    return _StgFEM.BicubicInterpolatorNew(feVariable, stencilField, position, sizes, result)
BicubicInterpolatorNew = _StgFEM.BicubicInterpolatorNew

def SemiLagrangianIntegrator_SolveNew(variableField: 'FeVariable', dt: 'double', velocityField: 'FeVariable', varStarField: 'FeVariable', stencilField: 'FeVariable') -> "void":
    return _StgFEM.SemiLagrangianIntegrator_SolveNew(variableField, dt, velocityField, varStarField, stencilField)
SemiLagrangianIntegrator_SolveNew = _StgFEM.SemiLagrangianIntegrator_SolveNew

def _SemiLagrangianIntegrator_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *') -> "SemiLagrangianIntegrator *":
    return _StgFEM._SemiLagrangianIntegrator_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy)
_SemiLagrangianIntegrator_New = _StgFEM._SemiLagrangianIntegrator_New

def _SemiLagrangianIntegrator_Copy(slIntegrator: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._SemiLagrangianIntegrator_Copy(slIntegrator, dest, deep, nameExt, ptrMap)
_SemiLagrangianIntegrator_Copy = _StgFEM._SemiLagrangianIntegrator_Copy

def _SemiLagrangianIntegrator_Delete(slIntegrator: 'void *') -> "void":
    return _StgFEM._SemiLagrangianIntegrator_Delete(slIntegrator)
_SemiLagrangianIntegrator_Delete = _StgFEM._SemiLagrangianIntegrator_Delete

def _SemiLagrangianIntegrator_Print(slIntegrator: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._SemiLagrangianIntegrator_Print(slIntegrator, stream)
_SemiLagrangianIntegrator_Print = _StgFEM._SemiLagrangianIntegrator_Print

def _SemiLagrangianIntegrator_Build(slIntegrator: 'void *', data: 'void *') -> "void":
    return _StgFEM._SemiLagrangianIntegrator_Build(slIntegrator, data)
_SemiLagrangianIntegrator_Build = _StgFEM._SemiLagrangianIntegrator_Build

def _SemiLagrangianIntegrator_AssignFromXML(slIntegrator: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._SemiLagrangianIntegrator_AssignFromXML(slIntegrator, cf, data)
_SemiLagrangianIntegrator_AssignFromXML = _StgFEM._SemiLagrangianIntegrator_AssignFromXML

def _SemiLagrangianIntegrator_Initialise(slIntegrator: 'void *', data: 'void *') -> "void":
    return _StgFEM._SemiLagrangianIntegrator_Initialise(slIntegrator, data)
_SemiLagrangianIntegrator_Initialise = _StgFEM._SemiLagrangianIntegrator_Initialise

def _SemiLagrangianIntegrator_Execute(slIntegrator: 'void *', data: 'void *') -> "void":
    return _StgFEM._SemiLagrangianIntegrator_Execute(slIntegrator, data)
_SemiLagrangianIntegrator_Execute = _StgFEM._SemiLagrangianIntegrator_Execute

def _SemiLagrangianIntegrator_Destroy(slIntegrator: 'void *', data: 'void *') -> "void":
    return _StgFEM._SemiLagrangianIntegrator_Destroy(slIntegrator, data)
_SemiLagrangianIntegrator_Destroy = _StgFEM._SemiLagrangianIntegrator_Destroy

def SemiLagrangianIntegrator_InitSolve(slIntegrator: 'void *', data: 'void *') -> "void":
    return _StgFEM.SemiLagrangianIntegrator_InitSolve(slIntegrator, data)
SemiLagrangianIntegrator_InitSolve = _StgFEM.SemiLagrangianIntegrator_InitSolve

def SemiLagrangianIntegrator_UpdatePreviousVelocityField(slIntegrator: 'void *', data: 'void *') -> "void":
    return _StgFEM.SemiLagrangianIntegrator_UpdatePreviousVelocityField(slIntegrator, data)
SemiLagrangianIntegrator_UpdatePreviousVelocityField = _StgFEM.SemiLagrangianIntegrator_UpdatePreviousVelocityField

def BicubicInterpolator(feVariable: 'FeVariable', coord: 'double *', delta: 'double *', nNodes: 'unsigned int *', result: 'double *') -> "Bool":
    return _StgFEM.BicubicInterpolator(feVariable, coord, delta, nNodes, result)
BicubicInterpolator = _StgFEM.BicubicInterpolator

def PeriodicUpdate(pos: 'double *', min: 'double *', max: 'double *', dim: 'unsigned int', isPeriodic: 'Bool') -> "Bool":
    return _StgFEM.PeriodicUpdate(pos, min, max, dim, isPeriodic)
PeriodicUpdate = _StgFEM.PeriodicUpdate

def InterpLagrange(x: 'double', coords: 'double *', values: 'double (*)[3]', numdofs: 'unsigned int', result: 'double *') -> "void":
    return _StgFEM.InterpLagrange(x, coords, values, numdofs, result)
InterpLagrange = _StgFEM.InterpLagrange

def IntegrateRungeKutta(velocityField: 'FeVariable', dt: 'double', origin: 'double *', position: 'double *') -> "void":
    return _StgFEM.IntegrateRungeKutta(velocityField, dt, origin, position)
IntegrateRungeKutta = _StgFEM.IntegrateRungeKutta

def IntegrateRungeKutta_StgVariableVelocity(velocityField: 'FeVariable', prevVelField: 'FeVariable', dt: 'double', origin: 'double *', position: 'double *') -> "void":
    return _StgFEM.IntegrateRungeKutta_StgVariableVelocity(velocityField, prevVelField, dt, origin, position)
IntegrateRungeKutta_StgVariableVelocity = _StgFEM.IntegrateRungeKutta_StgVariableVelocity

def SemiLagrangianIntegrator_PointsAreClose(p1: 'double *', p2: 'double *', dim: 'int', rtol: 'double', atol: 'double') -> "Bool":
    return _StgFEM.SemiLagrangianIntegrator_PointsAreClose(p1, p2, dim, rtol, atol)
SemiLagrangianIntegrator_PointsAreClose = _StgFEM.SemiLagrangianIntegrator_PointsAreClose

def SemiLagrangianIntegrator_Solve(slIntegrator: 'void *', variableField: 'FeVariable', variableFieldPrime: 'FeVariable') -> "void":
    return _StgFEM.SemiLagrangianIntegrator_Solve(slIntegrator, variableField, variableFieldPrime)
SemiLagrangianIntegrator_Solve = _StgFEM.SemiLagrangianIntegrator_Solve
class MeshParticleLayout(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _sizeOfSelf = _swig_property(_StgFEM.MeshParticleLayout__sizeOfSelf_get, _StgFEM.MeshParticleLayout__sizeOfSelf_set)
    _deleteSelf = _swig_property(_StgFEM.MeshParticleLayout__deleteSelf_get, _StgFEM.MeshParticleLayout__deleteSelf_set)
    type = _swig_property(_StgFEM.MeshParticleLayout_type_get, _StgFEM.MeshParticleLayout_type_set)
    nRefs = _swig_property(_StgFEM.MeshParticleLayout_nRefs_get, _StgFEM.MeshParticleLayout_nRefs_set)
    locked = _swig_property(_StgFEM.MeshParticleLayout_locked_get, _StgFEM.MeshParticleLayout_locked_set)
    _delete = _swig_property(_StgFEM.MeshParticleLayout__delete_get, _StgFEM.MeshParticleLayout__delete_set)
    _print = _swig_property(_StgFEM.MeshParticleLayout__print_get, _StgFEM.MeshParticleLayout__print_set)
    _copy = _swig_property(_StgFEM.MeshParticleLayout__copy_get, _StgFEM.MeshParticleLayout__copy_set)
    name = _swig_property(_StgFEM.MeshParticleLayout_name_get, _StgFEM.MeshParticleLayout_name_set)
    nameAllocationType = _swig_property(_StgFEM.MeshParticleLayout_nameAllocationType_get, _StgFEM.MeshParticleLayout_nameAllocationType_set)
    _defaultConstructor = _swig_property(_StgFEM.MeshParticleLayout__defaultConstructor_get, _StgFEM.MeshParticleLayout__defaultConstructor_set)
    _construct = _swig_property(_StgFEM.MeshParticleLayout__construct_get, _StgFEM.MeshParticleLayout__construct_set)
    _build = _swig_property(_StgFEM.MeshParticleLayout__build_get, _StgFEM.MeshParticleLayout__build_set)
    _initialise = _swig_property(_StgFEM.MeshParticleLayout__initialise_get, _StgFEM.MeshParticleLayout__initialise_set)
    _execute = _swig_property(_StgFEM.MeshParticleLayout__execute_get, _StgFEM.MeshParticleLayout__execute_set)
    _destroy = _swig_property(_StgFEM.MeshParticleLayout__destroy_get, _StgFEM.MeshParticleLayout__destroy_set)
    isConstructed = _swig_property(_StgFEM.MeshParticleLayout_isConstructed_get, _StgFEM.MeshParticleLayout_isConstructed_set)
    isBuilt = _swig_property(_StgFEM.MeshParticleLayout_isBuilt_get, _StgFEM.MeshParticleLayout_isBuilt_set)
    isInitialised = _swig_property(_StgFEM.MeshParticleLayout_isInitialised_get, _StgFEM.MeshParticleLayout_isInitialised_set)
    hasExecuted = _swig_property(_StgFEM.MeshParticleLayout_hasExecuted_get, _StgFEM.MeshParticleLayout_hasExecuted_set)
    isDestroyed = _swig_property(_StgFEM.MeshParticleLayout_isDestroyed_get, _StgFEM.MeshParticleLayout_isDestroyed_set)
    constructType = _swig_property(_StgFEM.MeshParticleLayout_constructType_get, _StgFEM.MeshParticleLayout_constructType_set)
    buildType = _swig_property(_StgFEM.MeshParticleLayout_buildType_get, _StgFEM.MeshParticleLayout_buildType_set)
    initialiseType = _swig_property(_StgFEM.MeshParticleLayout_initialiseType_get, _StgFEM.MeshParticleLayout_initialiseType_set)
    executeType = _swig_property(_StgFEM.MeshParticleLayout_executeType_get, _StgFEM.MeshParticleLayout_executeType_set)
    destroyType = _swig_property(_StgFEM.MeshParticleLayout_destroyType_get, _StgFEM.MeshParticleLayout_destroyType_set)
    context = _swig_property(_StgFEM.MeshParticleLayout_context_get, _StgFEM.MeshParticleLayout_context_set)
    _setInitialCounts = _swig_property(_StgFEM.MeshParticleLayout__setInitialCounts_get, _StgFEM.MeshParticleLayout__setInitialCounts_set)
    _initialiseParticles = _swig_property(_StgFEM.MeshParticleLayout__initialiseParticles_get, _StgFEM.MeshParticleLayout__initialiseParticles_set)
    debug = _swig_property(_StgFEM.MeshParticleLayout_debug_get, _StgFEM.MeshParticleLayout_debug_set)
    coordSystem = _swig_property(_StgFEM.MeshParticleLayout_coordSystem_get, _StgFEM.MeshParticleLayout_coordSystem_set)
    weightsInitialisedAtStartup = _swig_property(_StgFEM.MeshParticleLayout_weightsInitialisedAtStartup_get, _StgFEM.MeshParticleLayout_weightsInitialisedAtStartup_set)
    _initialCount = _swig_property(_StgFEM.MeshParticleLayout__initialCount_get, _StgFEM.MeshParticleLayout__initialCount_set)
    _initialiseParticlesOfCell = _swig_property(_StgFEM.MeshParticleLayout__initialiseParticlesOfCell_get, _StgFEM.MeshParticleLayout__initialiseParticlesOfCell_set)
    mesh = _swig_property(_StgFEM.MeshParticleLayout_mesh_get, _StgFEM.MeshParticleLayout_mesh_set)
    cellParticleCount = _swig_property(_StgFEM.MeshParticleLayout_cellParticleCount_get, _StgFEM.MeshParticleLayout_cellParticleCount_set)
    seed = _swig_property(_StgFEM.MeshParticleLayout_seed_get, _StgFEM.MeshParticleLayout_seed_set)
    filltype = _swig_property(_StgFEM.MeshParticleLayout_filltype_get, _StgFEM.MeshParticleLayout_filltype_set)
    sobolGenerator = _swig_property(_StgFEM.MeshParticleLayout_sobolGenerator_get, _StgFEM.MeshParticleLayout_sobolGenerator_set)

    def __init__(self):
        _StgFEM.MeshParticleLayout_swiginit(self, _StgFEM.new_MeshParticleLayout())
    __swig_destroy__ = _StgFEM.delete_MeshParticleLayout
MeshParticleLayout_swigregister = _StgFEM.MeshParticleLayout_swigregister
MeshParticleLayout_swigregister(MeshParticleLayout)
MeshParticleLayout_Type = cvar.MeshParticleLayout_Type


def MeshParticleLayout_New(name: 'Name', context: 'AbstractContext *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', mesh: 'Mesh', cellParticleCount: 'Particle_InCellIndex', seed: 'unsigned int', filltype: 'unsigned int') -> "MeshParticleLayout *":
    return _StgFEM.MeshParticleLayout_New(name, context, coordSystem, weightsInitialisedAtStartup, mesh, cellParticleCount, seed, filltype)
MeshParticleLayout_New = _StgFEM.MeshParticleLayout_New

def _MeshParticleLayout_New(_sizeOfSelf: 'SizeT', type: 'Type', _delete: 'Stg_Class_DeleteFunction *', _print: 'Stg_Class_PrintFunction *', _copy: 'Stg_Class_CopyFunction *', name: 'Name', nameAllocationType: 'AllocationType', _defaultConstructor: 'Stg_Component_DefaultConstructorFunction *', _construct: 'Stg_Component_ConstructFunction *', _build: 'Stg_Component_BuildFunction *', _initialise: 'Stg_Component_InitialiseFunction *', _execute: 'Stg_Component_ExecuteFunction *', _destroy: 'Stg_Component_DestroyFunction *', _setInitialCounts: 'ParticleLayout_SetInitialCountsFunction *', _initialiseParticles: 'ParticleLayout_InitialiseParticlesFunction *', coordSystem: 'CoordSystem', weightsInitialisedAtStartup: 'Bool', _initialCount: 'PerCellParticleLayout_InitialCountFunction *', _initialiseParticlesOfCell: 'PerCellParticleLayout_InitialiseParticlesOfCellFunction *', mesh: 'Mesh', cellParticleCount: 'Particle_InCellIndex', seed: 'unsigned int') -> "MeshParticleLayout *":
    return _StgFEM._MeshParticleLayout_New(_sizeOfSelf, type, _delete, _print, _copy, name, nameAllocationType, _defaultConstructor, _construct, _build, _initialise, _execute, _destroy, _setInitialCounts, _initialiseParticles, coordSystem, weightsInitialisedAtStartup, _initialCount, _initialiseParticlesOfCell, mesh, cellParticleCount, seed)
_MeshParticleLayout_New = _StgFEM._MeshParticleLayout_New

def _MeshParticleLayout_Init(meshParticleLayout: 'void *', mesh: 'Mesh', cellParticleCount: 'Particle_InCellIndex', seed: 'unsigned int', filltype: 'unsigned int') -> "void":
    return _StgFEM._MeshParticleLayout_Init(meshParticleLayout, mesh, cellParticleCount, seed, filltype)
_MeshParticleLayout_Init = _StgFEM._MeshParticleLayout_Init

def _MeshParticleLayout_Delete(meshParticleLayout: 'void *') -> "void":
    return _StgFEM._MeshParticleLayout_Delete(meshParticleLayout)
_MeshParticleLayout_Delete = _StgFEM._MeshParticleLayout_Delete

def _MeshParticleLayout_Print(meshParticleLayout: 'void *', stream: 'Stream *') -> "void":
    return _StgFEM._MeshParticleLayout_Print(meshParticleLayout, stream)
_MeshParticleLayout_Print = _StgFEM._MeshParticleLayout_Print

def _MeshParticleLayout_Copy(meshParticleLayout: 'void *', dest: 'void *', deep: 'Bool', nameExt: 'Name', ptrMap: 'PtrMap *') -> "void *":
    return _StgFEM._MeshParticleLayout_Copy(meshParticleLayout, dest, deep, nameExt, ptrMap)
_MeshParticleLayout_Copy = _StgFEM._MeshParticleLayout_Copy

def _MeshParticleLayout_DefaultNew(name: 'Name') -> "void *":
    return _StgFEM._MeshParticleLayout_DefaultNew(name)
_MeshParticleLayout_DefaultNew = _StgFEM._MeshParticleLayout_DefaultNew

def _MeshParticleLayout_AssignFromXML(meshParticleLayout: 'void *', cf: 'Stg_ComponentFactory *', data: 'void *') -> "void":
    return _StgFEM._MeshParticleLayout_AssignFromXML(meshParticleLayout, cf, data)
_MeshParticleLayout_AssignFromXML = _StgFEM._MeshParticleLayout_AssignFromXML

def _MeshParticleLayout_Build(meshParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._MeshParticleLayout_Build(meshParticleLayout, data)
_MeshParticleLayout_Build = _StgFEM._MeshParticleLayout_Build

def _MeshParticleLayout_Initialise(meshParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._MeshParticleLayout_Initialise(meshParticleLayout, data)
_MeshParticleLayout_Initialise = _StgFEM._MeshParticleLayout_Initialise

def _MeshParticleLayout_Execute(meshParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._MeshParticleLayout_Execute(meshParticleLayout, data)
_MeshParticleLayout_Execute = _StgFEM._MeshParticleLayout_Execute

def _MeshParticleLayout_Destroy(meshParticleLayout: 'void *', data: 'void *') -> "void":
    return _StgFEM._MeshParticleLayout_Destroy(meshParticleLayout, data)
_MeshParticleLayout_Destroy = _StgFEM._MeshParticleLayout_Destroy

def _MeshParticleLayout_InitialCount(meshParticleLayout: 'void *', celllayout: 'void *', cell_I: 'Cell_Index') -> "Particle_InCellIndex":
    return _StgFEM._MeshParticleLayout_InitialCount(meshParticleLayout, celllayout, cell_I)
_MeshParticleLayout_InitialCount = _StgFEM._MeshParticleLayout_InitialCount

def _MeshParticleLayout_InitialiseParticlesOfCell(meshParticleLayout: 'void *', _swarm: 'void *', cell_I: 'Cell_Index') -> "void":
    return _StgFEM._MeshParticleLayout_InitialiseParticlesOfCell(meshParticleLayout, _swarm, cell_I)
_MeshParticleLayout_InitialiseParticlesOfCell = _StgFEM._MeshParticleLayout_InitialiseParticlesOfCell


